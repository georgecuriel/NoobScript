Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    VGLOBAL
    CLASE
    COLON
    HAZ

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE
Rule 2     programa_push_id -> <empty>
Rule 3     programa_push_dict -> <empty>
Rule 4     vars -> VAR vars2
Rule 5     vars -> empty
Rule 6     vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4
Rule 7     dimension -> LBRAK CTEINT push_dim1 RBRAK dimension2
Rule 8     dimension -> empty
Rule 9     push_dim1 -> <empty>
Rule 10    dimension2 -> LBRAK CTEINT push_dim2 RBRAK
Rule 11    dimension2 -> empty
Rule 12    push_dim2 -> <empty>
Rule 13    vars_push_id -> <empty>
Rule 14    vars3 -> COMMA ID dimension vars3_push_id vars3
Rule 15    vars3 -> empty
Rule 16    vars3_push_id -> <empty>
Rule 17    vars4 -> vars2
Rule 18    vars4 -> empty
Rule 19    tipo -> ENTERO
Rule 20    tipo -> DECIMAL
Rule 21    tipo -> FRASE
Rule 22    tipo -> ESVERDAD
Rule 23    empty -> <empty>
Rule 24    body -> funcion body
Rule 25    body -> bloque body
Rule 26    body -> empty
Rule 27    bloque -> estatuto
Rule 28    bloque -> empty
Rule 29    funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
Rule 30    return -> REGRESA expresion
Rule 31    funcion_increase_func -> <empty>
Rule 32    funcion_push_id -> <empty>
Rule 33    funparam -> tipo ID funparam_push_id funparams
Rule 34    funparam -> empty
Rule 35    funparam_push_id -> <empty>
Rule 36    funparams -> COMMA funparam
Rule 37    funparams -> empty
Rule 38    estatuto -> asignacion bloque
Rule 39    estatuto -> condicion bloque
Rule 40    estatuto -> mientras bloque
Rule 41    estatuto -> para bloque
Rule 42    estatuto -> escritura bloque
Rule 43    estatuto -> llamada bloque
Rule 44    estatuto -> return bloque
Rule 45    asignacion -> ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
Rule 46    asignacion_push_id -> <empty>
Rule 47    asignacion_push_igual -> <empty>
Rule 48    llamada -> ID LPAREN nombre_func llamadaparam RPAREN
Rule 49    llamadaparam -> expresion set_value_param llamadaparams
Rule 50    llamadaparam -> empty
Rule 51    llamadaparams -> COMMA llamadaparam
Rule 52    llamadaparams -> empty
Rule 53    expresion -> exp expresions
Rule 54    expresion -> LEE LPAREN STRING RPAREN SEMICOL
Rule 55    expresions -> MAYOR expresions_push_mayor exp
Rule 56    expresions -> MENOR expresions_push_menor exp
Rule 57    expresions -> COMPARA expresions_push_compara exp
Rule 58    expresions -> exp
Rule 59    expresions -> empty
Rule 60    expresions_push_mayor -> <empty>
Rule 61    expresions_push_menor -> <empty>
Rule 62    expresions_push_compara -> <empty>
Rule 63    exp -> termino exps
Rule 64    exps -> PLUS exps_push_plus termino exps
Rule 65    exps -> MINUS exps_push_minus termino exps
Rule 66    exps -> empty
Rule 67    exps_push_plus -> <empty>
Rule 68    exps_push_minus -> <empty>
Rule 69    termino -> factor terminos
Rule 70    terminos -> TIMES terminos_push_times factor terminos
Rule 71    terminos -> DIVIDE terminos_push_divide factor terminos
Rule 72    terminos -> empty
Rule 73    terminos_push_times -> <empty>
Rule 74    terminos_push_divide -> <empty>
Rule 75    factor -> LPAREN factor_lparen expresion RPAREN factor_rparen
Rule 76    factor -> valor
Rule 77    factor_lparen -> <empty>
Rule 78    factor_rparen -> <empty>
Rule 79    valor -> ID call_or_array
Rule 80    valor -> CTEINT
Rule 81    valor -> CTEDEC
Rule 82    call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array
Rule 83    call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub
Rule 84    call_or_array -> empty
Rule 85    param_array -> expresion set_value_param
Rule 86    param_array -> empty
Rule 87    nombre_func -> <empty>
Rule 88    push_gosub -> <empty>
Rule 89    set_value_param -> <empty>
Rule 90    id_array -> LBRAK CTEINT push_array_dim2 RBRAK
Rule 91    id_array -> empty
Rule 92    push_array_dim1 -> <empty>
Rule 93    push_array_dim2 -> <empty>
Rule 94    id_call -> COMMA expresion set_value_param id_call
Rule 95    id_call -> empty
Rule 96    condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
Rule 97    condicion_if -> <empty>
Rule 98    else -> SINO else_2 LLLAVE estatuto RLLAVE
Rule 99    else -> empty
Rule 100   else_2 -> <empty>
Rule 101   para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
Rule 102   param -> ID
Rule 103   param -> CTEINT
Rule 104   mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
Rule 105   mientras_haz_push -> <empty>
Rule 106   mientras_haz_push2 -> <empty>
Rule 107   escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN
Rule 108   escritura_escribe -> <empty>
Rule 109   esc -> expresion escs
Rule 110   esc -> STRING escs
Rule 111   escs -> COMMA esc
Rule 112   escs -> empty

Terminals, with rules where they appear

CLASE                : 
COLON                : 
COMMA                : 14 36 51 94 101 111
COMPARA              : 57
CTEDEC               : 81
CTEINT               : 7 10 80 82 90 103
DECIMAL              : 20
DIVIDE               : 71
ENRANGO              : 101
ENTERO               : 19
ESVERDAD             : 22
FRASE                : 21
FUNCION              : 29
HAZ                  : 
ID                   : 1 6 14 29 33 45 48 79 101 102
IGUAL                : 45
IMPRIME              : 107
LBRAK                : 7 10 82 90
LEE                  : 54
LLLAVE               : 1 29 96 98 101 104
LPAREN               : 29 48 54 75 83 96 101 104 107
MAYOR                : 55
MENOR                : 56
MIENTRAS             : 104
MINUS                : 65
PARA                 : 101
PLUS                 : 64
PROGRAMA             : 1
RBRAK                : 7 10 82 90
REGRESA              : 30
RLLAVE               : 1 29 96 98 101 104
RPAREN               : 29 48 54 75 83 96 101 104 107
SEMICOL              : 6 45 54
SI                   : 96
SINO                 : 98
STRING               : 54 110
TIMES                : 70
VAR                  : 4
VGLOBAL              : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 38
asignacion_push_id   : 45
asignacion_push_igual : 45
bloque               : 25 29 38 39 40 41 42 43 44
body                 : 1 24 25
call_or_array        : 45 79
condicion            : 39
condicion_if         : 96
dimension            : 6 14
dimension2           : 7
else                 : 96
else_2               : 98
empty                : 5 8 11 15 18 26 28 34 37 50 52 59 66 72 84 86 91 95 99 112
esc                  : 107 111
escritura            : 42
escritura_escribe    : 107
escs                 : 109 110
estatuto             : 27 96 98 101 104
exp                  : 53 55 56 57 58
expresion            : 30 45 49 75 85 94 96 104 109
expresions           : 53
expresions_push_compara : 57
expresions_push_mayor : 55
expresions_push_menor : 56
exps                 : 63 64 65
exps_push_minus      : 65
exps_push_plus       : 64
factor               : 69 70 71
factor_lparen        : 75
factor_rparen        : 75
funcion              : 24
funcion_increase_func : 29
funcion_push_id      : 29
funparam             : 29 36
funparam_push_id     : 33
funparams            : 33
id_array             : 82
id_call              : 83 94
llamada              : 43
llamadaparam         : 48 51
llamadaparams        : 49
mientras             : 40
mientras_haz_push    : 104
mientras_haz_push2   : 104
nombre_func          : 48 83
para                 : 41
param                : 101 101
param_array          : 83
programa             : 0
programa_push_dict   : 1
programa_push_id     : 1
push_array_dim1      : 82
push_array_dim2      : 90
push_dim1            : 7
push_dim2            : 10
push_gosub           : 83
return               : 44
set_value_param      : 49 85 94
termino              : 63 64 65
terminos             : 69 70 71
terminos_push_divide : 71
terminos_push_times  : 70
tipo                 : 6 29 33
valor                : 76
vars                 : 1 29
vars2                : 4 17
vars3                : 6 14
vars3_push_id        : 14
vars4                : 6
vars_push_id         : 6

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . LLLAVE programa_push_id vars programa_push_dict body RLLAVE

    LLLAVE          shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID LLLAVE . programa_push_id vars programa_push_dict body RLLAVE
    (2) programa_push_id -> .

    VAR             reduce using rule 2 (programa_push_id -> .)
    FUNCION         reduce using rule 2 (programa_push_id -> .)
    ID              reduce using rule 2 (programa_push_id -> .)
    SI              reduce using rule 2 (programa_push_id -> .)
    MIENTRAS        reduce using rule 2 (programa_push_id -> .)
    PARA            reduce using rule 2 (programa_push_id -> .)
    IMPRIME         reduce using rule 2 (programa_push_id -> .)
    REGRESA         reduce using rule 2 (programa_push_id -> .)
    RLLAVE          reduce using rule 2 (programa_push_id -> .)

    programa_push_id               shift and go to state 5

state 5

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id . vars programa_push_dict body RLLAVE
    (4) vars -> . VAR vars2
    (5) vars -> . empty
    (23) empty -> .

    VAR             shift and go to state 7
    FUNCION         reduce using rule 23 (empty -> .)
    ID              reduce using rule 23 (empty -> .)
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)

    vars                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id vars . programa_push_dict body RLLAVE
    (3) programa_push_dict -> .

    FUNCION         reduce using rule 3 (programa_push_dict -> .)
    ID              reduce using rule 3 (programa_push_dict -> .)
    SI              reduce using rule 3 (programa_push_dict -> .)
    MIENTRAS        reduce using rule 3 (programa_push_dict -> .)
    PARA            reduce using rule 3 (programa_push_dict -> .)
    IMPRIME         reduce using rule 3 (programa_push_dict -> .)
    REGRESA         reduce using rule 3 (programa_push_dict -> .)
    RLLAVE          reduce using rule 3 (programa_push_dict -> .)

    programa_push_dict             shift and go to state 9

state 7

    (4) vars -> VAR . vars2
    (6) vars2 -> . tipo ID dimension vars_push_id vars3 SEMICOL vars4
    (19) tipo -> . ENTERO
    (20) tipo -> . DECIMAL
    (21) tipo -> . FRASE
    (22) tipo -> . ESVERDAD

    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14

    tipo                           shift and go to state 11
    vars2                          shift and go to state 13

state 8

    (5) vars -> empty .

    FUNCION         reduce using rule 5 (vars -> empty .)
    ID              reduce using rule 5 (vars -> empty .)
    SI              reduce using rule 5 (vars -> empty .)
    MIENTRAS        reduce using rule 5 (vars -> empty .)
    PARA            reduce using rule 5 (vars -> empty .)
    IMPRIME         reduce using rule 5 (vars -> empty .)
    REGRESA         reduce using rule 5 (vars -> empty .)
    RLLAVE          reduce using rule 5 (vars -> empty .)


state 9

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict . body RLLAVE
    (24) body -> . funcion body
    (25) body -> . bloque body
    (26) body -> . empty
    (29) funcion -> . FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (27) bloque -> . estatuto
    (28) bloque -> . empty
    (23) empty -> .
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
    FUNCION         shift and go to state 31
    RLLAVE          reduce using rule 23 (empty -> .)
    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

  ! FUNCION         [ reduce using rule 23 (empty -> .) ]
  ! ID              [ reduce using rule 23 (empty -> .) ]
  ! SI              [ reduce using rule 23 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 23 (empty -> .) ]
  ! PARA            [ reduce using rule 23 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 23 (empty -> .) ]
  ! REGRESA         [ reduce using rule 23 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 17
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 23
    funcion                        shift and go to state 24
    body                           shift and go to state 25
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 10

    (21) tipo -> FRASE .

    ID              reduce using rule 21 (tipo -> FRASE .)


state 11

    (6) vars2 -> tipo . ID dimension vars_push_id vars3 SEMICOL vars4

    ID              shift and go to state 35


state 12

    (20) tipo -> DECIMAL .

    ID              reduce using rule 20 (tipo -> DECIMAL .)


state 13

    (4) vars -> VAR vars2 .

    FUNCION         reduce using rule 4 (vars -> VAR vars2 .)
    ID              reduce using rule 4 (vars -> VAR vars2 .)
    SI              reduce using rule 4 (vars -> VAR vars2 .)
    MIENTRAS        reduce using rule 4 (vars -> VAR vars2 .)
    PARA            reduce using rule 4 (vars -> VAR vars2 .)
    IMPRIME         reduce using rule 4 (vars -> VAR vars2 .)
    REGRESA         reduce using rule 4 (vars -> VAR vars2 .)
    RLLAVE          reduce using rule 4 (vars -> VAR vars2 .)


state 14

    (22) tipo -> ESVERDAD .

    ID              reduce using rule 22 (tipo -> ESVERDAD .)


state 15

    (19) tipo -> ENTERO .

    ID              reduce using rule 19 (tipo -> ENTERO .)


state 16

    (40) estatuto -> mientras . bloque
    (27) bloque -> . estatuto
    (28) bloque -> . empty
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (23) empty -> .
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

  ! ID              [ reduce using rule 23 (empty -> .) ]
  ! SI              [ reduce using rule 23 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 23 (empty -> .) ]
  ! PARA            [ reduce using rule 23 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 23 (empty -> .) ]
  ! REGRESA         [ reduce using rule 23 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 36
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 37
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 17

    (25) body -> bloque . body
    (24) body -> . funcion body
    (25) body -> . bloque body
    (26) body -> . empty
    (29) funcion -> . FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (27) bloque -> . estatuto
    (28) bloque -> . empty
    (23) empty -> .
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
    FUNCION         shift and go to state 31
    RLLAVE          reduce using rule 23 (empty -> .)
    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

  ! FUNCION         [ reduce using rule 23 (empty -> .) ]
  ! ID              [ reduce using rule 23 (empty -> .) ]
  ! SI              [ reduce using rule 23 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 23 (empty -> .) ]
  ! PARA            [ reduce using rule 23 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 23 (empty -> .) ]
  ! REGRESA         [ reduce using rule 23 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 17
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 23
    funcion                        shift and go to state 24
    body                           shift and go to state 38
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 18

    (101) para -> PARA . ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    ID              shift and go to state 39


state 19

    (27) bloque -> estatuto .

    FUNCION         reduce using rule 27 (bloque -> estatuto .)
    ID              reduce using rule 27 (bloque -> estatuto .)
    SI              reduce using rule 27 (bloque -> estatuto .)
    MIENTRAS        reduce using rule 27 (bloque -> estatuto .)
    PARA            reduce using rule 27 (bloque -> estatuto .)
    IMPRIME         reduce using rule 27 (bloque -> estatuto .)
    REGRESA         reduce using rule 27 (bloque -> estatuto .)
    RLLAVE          reduce using rule 27 (bloque -> estatuto .)


state 20

    (96) condicion -> SI . LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else

    LPAREN          shift and go to state 40


state 21

    (43) estatuto -> llamada . bloque
    (27) bloque -> . estatuto
    (28) bloque -> . empty
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (23) empty -> .
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

  ! ID              [ reduce using rule 23 (empty -> .) ]
  ! SI              [ reduce using rule 23 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 23 (empty -> .) ]
  ! PARA            [ reduce using rule 23 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 23 (empty -> .) ]
  ! REGRESA         [ reduce using rule 23 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 41
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 37
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 22

    (39) estatuto -> condicion . bloque
    (27) bloque -> . estatuto
    (28) bloque -> . empty
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (23) empty -> .
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

  ! ID              [ reduce using rule 23 (empty -> .) ]
  ! SI              [ reduce using rule 23 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 23 (empty -> .) ]
  ! PARA            [ reduce using rule 23 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 23 (empty -> .) ]
  ! REGRESA         [ reduce using rule 23 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 42
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 37
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 23

    (26) body -> empty .
    (28) bloque -> empty .

  ! reduce/reduce conflict for RLLAVE resolved using rule 26 (body -> empty .)
    RLLAVE          reduce using rule 26 (body -> empty .)
    FUNCION         reduce using rule 28 (bloque -> empty .)
    ID              reduce using rule 28 (bloque -> empty .)
    SI              reduce using rule 28 (bloque -> empty .)
    MIENTRAS        reduce using rule 28 (bloque -> empty .)
    PARA            reduce using rule 28 (bloque -> empty .)
    IMPRIME         reduce using rule 28 (bloque -> empty .)
    REGRESA         reduce using rule 28 (bloque -> empty .)

  ! RLLAVE          [ reduce using rule 28 (bloque -> empty .) ]


state 24

    (24) body -> funcion . body
    (24) body -> . funcion body
    (25) body -> . bloque body
    (26) body -> . empty
    (29) funcion -> . FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (27) bloque -> . estatuto
    (28) bloque -> . empty
    (23) empty -> .
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
    FUNCION         shift and go to state 31
    RLLAVE          reduce using rule 23 (empty -> .)
    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

  ! FUNCION         [ reduce using rule 23 (empty -> .) ]
  ! ID              [ reduce using rule 23 (empty -> .) ]
  ! SI              [ reduce using rule 23 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 23 (empty -> .) ]
  ! PARA            [ reduce using rule 23 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 23 (empty -> .) ]
  ! REGRESA         [ reduce using rule 23 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 17
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 23
    funcion                        shift and go to state 24
    body                           shift and go to state 43
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 25

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body . RLLAVE

    RLLAVE          shift and go to state 44


state 26

    (44) estatuto -> return . bloque
    (27) bloque -> . estatuto
    (28) bloque -> . empty
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (23) empty -> .
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

  ! ID              [ reduce using rule 23 (empty -> .) ]
  ! SI              [ reduce using rule 23 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 23 (empty -> .) ]
  ! PARA            [ reduce using rule 23 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 23 (empty -> .) ]
  ! REGRESA         [ reduce using rule 23 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 45
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 37
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 27

    (41) estatuto -> para . bloque
    (27) bloque -> . estatuto
    (28) bloque -> . empty
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (23) empty -> .
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

  ! ID              [ reduce using rule 23 (empty -> .) ]
  ! SI              [ reduce using rule 23 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 23 (empty -> .) ]
  ! PARA            [ reduce using rule 23 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 23 (empty -> .) ]
  ! REGRESA         [ reduce using rule 23 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 46
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 37
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 28

    (30) return -> REGRESA . expresion
    (53) expresion -> . exp expresions
    (54) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LEE             shift and go to state 56
    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    expresion                      shift and go to state 47
    valor                          shift and go to state 49
    termino                        shift and go to state 51
    exp                            shift and go to state 48
    factor                         shift and go to state 53

state 29

    (104) mientras -> MIENTRAS . mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (105) mientras_haz_push -> .

    LPAREN          reduce using rule 105 (mientras_haz_push -> .)

    mientras_haz_push              shift and go to state 57

state 30

    (45) asignacion -> ID . call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (48) llamada -> ID . LPAREN nombre_func llamadaparam RPAREN
    (82) call_or_array -> . LBRAK CTEINT push_array_dim1 RBRAK id_array
    (83) call_or_array -> . LPAREN nombre_func param_array id_call RPAREN push_gosub
    (84) call_or_array -> . empty
    (23) empty -> .

    LPAREN          shift and go to state 59
    LBRAK           shift and go to state 58
    IGUAL           reduce using rule 23 (empty -> .)

    call_or_array                  shift and go to state 60
    empty                          shift and go to state 61

state 31

    (29) funcion -> FUNCION . funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (31) funcion_increase_func -> .

    ENTERO          reduce using rule 31 (funcion_increase_func -> .)
    DECIMAL         reduce using rule 31 (funcion_increase_func -> .)
    FRASE           reduce using rule 31 (funcion_increase_func -> .)
    ESVERDAD        reduce using rule 31 (funcion_increase_func -> .)

    funcion_increase_func          shift and go to state 62

state 32

    (107) escritura -> IMPRIME . escritura_escribe LPAREN esc RPAREN
    (108) escritura_escribe -> .

    LPAREN          reduce using rule 108 (escritura_escribe -> .)

    escritura_escribe              shift and go to state 63

state 33

    (38) estatuto -> asignacion . bloque
    (27) bloque -> . estatuto
    (28) bloque -> . empty
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (23) empty -> .
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

  ! ID              [ reduce using rule 23 (empty -> .) ]
  ! SI              [ reduce using rule 23 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 23 (empty -> .) ]
  ! PARA            [ reduce using rule 23 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 23 (empty -> .) ]
  ! REGRESA         [ reduce using rule 23 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 64
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 37
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 34

    (42) estatuto -> escritura . bloque
    (27) bloque -> . estatuto
    (28) bloque -> . empty
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (23) empty -> .
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

  ! ID              [ reduce using rule 23 (empty -> .) ]
  ! SI              [ reduce using rule 23 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 23 (empty -> .) ]
  ! PARA            [ reduce using rule 23 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 23 (empty -> .) ]
  ! REGRESA         [ reduce using rule 23 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 65
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 37
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 35

    (6) vars2 -> tipo ID . dimension vars_push_id vars3 SEMICOL vars4
    (7) dimension -> . LBRAK CTEINT push_dim1 RBRAK dimension2
    (8) dimension -> . empty
    (23) empty -> .

    LBRAK           shift and go to state 66
    COMMA           reduce using rule 23 (empty -> .)
    SEMICOL         reduce using rule 23 (empty -> .)

    dimension                      shift and go to state 67
    empty                          shift and go to state 68

state 36

    (40) estatuto -> mientras bloque .

    FUNCION         reduce using rule 40 (estatuto -> mientras bloque .)
    ID              reduce using rule 40 (estatuto -> mientras bloque .)
    SI              reduce using rule 40 (estatuto -> mientras bloque .)
    MIENTRAS        reduce using rule 40 (estatuto -> mientras bloque .)
    PARA            reduce using rule 40 (estatuto -> mientras bloque .)
    IMPRIME         reduce using rule 40 (estatuto -> mientras bloque .)
    REGRESA         reduce using rule 40 (estatuto -> mientras bloque .)
    RLLAVE          reduce using rule 40 (estatuto -> mientras bloque .)


state 37

    (28) bloque -> empty .

    FUNCION         reduce using rule 28 (bloque -> empty .)
    ID              reduce using rule 28 (bloque -> empty .)
    SI              reduce using rule 28 (bloque -> empty .)
    MIENTRAS        reduce using rule 28 (bloque -> empty .)
    PARA            reduce using rule 28 (bloque -> empty .)
    IMPRIME         reduce using rule 28 (bloque -> empty .)
    REGRESA         reduce using rule 28 (bloque -> empty .)
    RLLAVE          reduce using rule 28 (bloque -> empty .)


state 38

    (25) body -> bloque body .

    RLLAVE          reduce using rule 25 (body -> bloque body .)


state 39

    (101) para -> PARA ID . ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    ENRANGO         shift and go to state 69


state 40

    (96) condicion -> SI LPAREN . expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (53) expresion -> . exp expresions
    (54) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LEE             shift and go to state 56
    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    expresion                      shift and go to state 70
    termino                        shift and go to state 51
    exp                            shift and go to state 48
    factor                         shift and go to state 53
    valor                          shift and go to state 49

state 41

    (43) estatuto -> llamada bloque .

    FUNCION         reduce using rule 43 (estatuto -> llamada bloque .)
    ID              reduce using rule 43 (estatuto -> llamada bloque .)
    SI              reduce using rule 43 (estatuto -> llamada bloque .)
    MIENTRAS        reduce using rule 43 (estatuto -> llamada bloque .)
    PARA            reduce using rule 43 (estatuto -> llamada bloque .)
    IMPRIME         reduce using rule 43 (estatuto -> llamada bloque .)
    REGRESA         reduce using rule 43 (estatuto -> llamada bloque .)
    RLLAVE          reduce using rule 43 (estatuto -> llamada bloque .)


state 42

    (39) estatuto -> condicion bloque .

    FUNCION         reduce using rule 39 (estatuto -> condicion bloque .)
    ID              reduce using rule 39 (estatuto -> condicion bloque .)
    SI              reduce using rule 39 (estatuto -> condicion bloque .)
    MIENTRAS        reduce using rule 39 (estatuto -> condicion bloque .)
    PARA            reduce using rule 39 (estatuto -> condicion bloque .)
    IMPRIME         reduce using rule 39 (estatuto -> condicion bloque .)
    REGRESA         reduce using rule 39 (estatuto -> condicion bloque .)
    RLLAVE          reduce using rule 39 (estatuto -> condicion bloque .)


state 43

    (24) body -> funcion body .

    RLLAVE          reduce using rule 24 (body -> funcion body .)


state 44

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE .

    $end            reduce using rule 1 (programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE .)


state 45

    (44) estatuto -> return bloque .

    FUNCION         reduce using rule 44 (estatuto -> return bloque .)
    ID              reduce using rule 44 (estatuto -> return bloque .)
    SI              reduce using rule 44 (estatuto -> return bloque .)
    MIENTRAS        reduce using rule 44 (estatuto -> return bloque .)
    PARA            reduce using rule 44 (estatuto -> return bloque .)
    IMPRIME         reduce using rule 44 (estatuto -> return bloque .)
    REGRESA         reduce using rule 44 (estatuto -> return bloque .)
    RLLAVE          reduce using rule 44 (estatuto -> return bloque .)


state 46

    (41) estatuto -> para bloque .

    FUNCION         reduce using rule 41 (estatuto -> para bloque .)
    ID              reduce using rule 41 (estatuto -> para bloque .)
    SI              reduce using rule 41 (estatuto -> para bloque .)
    MIENTRAS        reduce using rule 41 (estatuto -> para bloque .)
    PARA            reduce using rule 41 (estatuto -> para bloque .)
    IMPRIME         reduce using rule 41 (estatuto -> para bloque .)
    REGRESA         reduce using rule 41 (estatuto -> para bloque .)
    RLLAVE          reduce using rule 41 (estatuto -> para bloque .)


state 47

    (30) return -> REGRESA expresion .

    ID              reduce using rule 30 (return -> REGRESA expresion .)
    SI              reduce using rule 30 (return -> REGRESA expresion .)
    MIENTRAS        reduce using rule 30 (return -> REGRESA expresion .)
    PARA            reduce using rule 30 (return -> REGRESA expresion .)
    IMPRIME         reduce using rule 30 (return -> REGRESA expresion .)
    REGRESA         reduce using rule 30 (return -> REGRESA expresion .)
    FUNCION         reduce using rule 30 (return -> REGRESA expresion .)
    RLLAVE          reduce using rule 30 (return -> REGRESA expresion .)


state 48

    (53) expresion -> exp . expresions
    (55) expresions -> . MAYOR expresions_push_mayor exp
    (56) expresions -> . MENOR expresions_push_menor exp
    (57) expresions -> . COMPARA expresions_push_compara exp
    (58) expresions -> . exp
    (59) expresions -> . empty
    (63) exp -> . termino exps
    (23) empty -> .
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

  ! shift/reduce conflict for ID resolved as shift
    MAYOR           shift and go to state 72
    MENOR           shift and go to state 75
    COMPARA         shift and go to state 74
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    RPAREN          reduce using rule 23 (empty -> .)
    COMMA           reduce using rule 23 (empty -> .)
    SEMICOL         reduce using rule 23 (empty -> .)
    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

  ! ID              [ reduce using rule 23 (empty -> .) ]

    expresions                     shift and go to state 71
    termino                        shift and go to state 51
    exp                            shift and go to state 76
    factor                         shift and go to state 53
    empty                          shift and go to state 73
    valor                          shift and go to state 49

state 49

    (76) factor -> valor .

    TIMES           reduce using rule 76 (factor -> valor .)
    DIVIDE          reduce using rule 76 (factor -> valor .)
    PLUS            reduce using rule 76 (factor -> valor .)
    MINUS           reduce using rule 76 (factor -> valor .)
    MAYOR           reduce using rule 76 (factor -> valor .)
    MENOR           reduce using rule 76 (factor -> valor .)
    COMPARA         reduce using rule 76 (factor -> valor .)
    LPAREN          reduce using rule 76 (factor -> valor .)
    ID              reduce using rule 76 (factor -> valor .)
    CTEINT          reduce using rule 76 (factor -> valor .)
    CTEDEC          reduce using rule 76 (factor -> valor .)
    SI              reduce using rule 76 (factor -> valor .)
    MIENTRAS        reduce using rule 76 (factor -> valor .)
    PARA            reduce using rule 76 (factor -> valor .)
    IMPRIME         reduce using rule 76 (factor -> valor .)
    REGRESA         reduce using rule 76 (factor -> valor .)
    FUNCION         reduce using rule 76 (factor -> valor .)
    RLLAVE          reduce using rule 76 (factor -> valor .)
    RPAREN          reduce using rule 76 (factor -> valor .)
    COMMA           reduce using rule 76 (factor -> valor .)
    SEMICOL         reduce using rule 76 (factor -> valor .)


state 50

    (80) valor -> CTEINT .

    TIMES           reduce using rule 80 (valor -> CTEINT .)
    DIVIDE          reduce using rule 80 (valor -> CTEINT .)
    PLUS            reduce using rule 80 (valor -> CTEINT .)
    MINUS           reduce using rule 80 (valor -> CTEINT .)
    ID              reduce using rule 80 (valor -> CTEINT .)
    SI              reduce using rule 80 (valor -> CTEINT .)
    MIENTRAS        reduce using rule 80 (valor -> CTEINT .)
    PARA            reduce using rule 80 (valor -> CTEINT .)
    IMPRIME         reduce using rule 80 (valor -> CTEINT .)
    REGRESA         reduce using rule 80 (valor -> CTEINT .)
    FUNCION         reduce using rule 80 (valor -> CTEINT .)
    RLLAVE          reduce using rule 80 (valor -> CTEINT .)
    RPAREN          reduce using rule 80 (valor -> CTEINT .)
    COMMA           reduce using rule 80 (valor -> CTEINT .)
    SEMICOL         reduce using rule 80 (valor -> CTEINT .)
    MAYOR           reduce using rule 80 (valor -> CTEINT .)
    MENOR           reduce using rule 80 (valor -> CTEINT .)
    COMPARA         reduce using rule 80 (valor -> CTEINT .)
    LPAREN          reduce using rule 80 (valor -> CTEINT .)
    CTEINT          reduce using rule 80 (valor -> CTEINT .)
    CTEDEC          reduce using rule 80 (valor -> CTEINT .)


state 51

    (63) exp -> termino . exps
    (64) exps -> . PLUS exps_push_plus termino exps
    (65) exps -> . MINUS exps_push_minus termino exps
    (66) exps -> . empty
    (23) empty -> .

    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    MAYOR           reduce using rule 23 (empty -> .)
    MENOR           reduce using rule 23 (empty -> .)
    COMPARA         reduce using rule 23 (empty -> .)
    LPAREN          reduce using rule 23 (empty -> .)
    ID              reduce using rule 23 (empty -> .)
    CTEINT          reduce using rule 23 (empty -> .)
    CTEDEC          reduce using rule 23 (empty -> .)
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    RPAREN          reduce using rule 23 (empty -> .)
    COMMA           reduce using rule 23 (empty -> .)
    SEMICOL         reduce using rule 23 (empty -> .)

    exps                           shift and go to state 77
    empty                          shift and go to state 80

state 52

    (75) factor -> LPAREN . factor_lparen expresion RPAREN factor_rparen
    (77) factor_lparen -> .

    LEE             reduce using rule 77 (factor_lparen -> .)
    LPAREN          reduce using rule 77 (factor_lparen -> .)
    ID              reduce using rule 77 (factor_lparen -> .)
    CTEINT          reduce using rule 77 (factor_lparen -> .)
    CTEDEC          reduce using rule 77 (factor_lparen -> .)

    factor_lparen                  shift and go to state 81

state 53

    (69) termino -> factor . terminos
    (70) terminos -> . TIMES terminos_push_times factor terminos
    (71) terminos -> . DIVIDE terminos_push_divide factor terminos
    (72) terminos -> . empty
    (23) empty -> .

    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 82
    PLUS            reduce using rule 23 (empty -> .)
    MINUS           reduce using rule 23 (empty -> .)
    MAYOR           reduce using rule 23 (empty -> .)
    MENOR           reduce using rule 23 (empty -> .)
    COMPARA         reduce using rule 23 (empty -> .)
    LPAREN          reduce using rule 23 (empty -> .)
    ID              reduce using rule 23 (empty -> .)
    CTEINT          reduce using rule 23 (empty -> .)
    CTEDEC          reduce using rule 23 (empty -> .)
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    RPAREN          reduce using rule 23 (empty -> .)
    COMMA           reduce using rule 23 (empty -> .)
    SEMICOL         reduce using rule 23 (empty -> .)

    terminos                       shift and go to state 83
    empty                          shift and go to state 85

state 54

    (81) valor -> CTEDEC .

    TIMES           reduce using rule 81 (valor -> CTEDEC .)
    DIVIDE          reduce using rule 81 (valor -> CTEDEC .)
    PLUS            reduce using rule 81 (valor -> CTEDEC .)
    MINUS           reduce using rule 81 (valor -> CTEDEC .)
    ID              reduce using rule 81 (valor -> CTEDEC .)
    SI              reduce using rule 81 (valor -> CTEDEC .)
    MIENTRAS        reduce using rule 81 (valor -> CTEDEC .)
    PARA            reduce using rule 81 (valor -> CTEDEC .)
    IMPRIME         reduce using rule 81 (valor -> CTEDEC .)
    REGRESA         reduce using rule 81 (valor -> CTEDEC .)
    FUNCION         reduce using rule 81 (valor -> CTEDEC .)
    RLLAVE          reduce using rule 81 (valor -> CTEDEC .)
    RPAREN          reduce using rule 81 (valor -> CTEDEC .)
    COMMA           reduce using rule 81 (valor -> CTEDEC .)
    SEMICOL         reduce using rule 81 (valor -> CTEDEC .)
    MAYOR           reduce using rule 81 (valor -> CTEDEC .)
    MENOR           reduce using rule 81 (valor -> CTEDEC .)
    COMPARA         reduce using rule 81 (valor -> CTEDEC .)
    LPAREN          reduce using rule 81 (valor -> CTEDEC .)
    CTEINT          reduce using rule 81 (valor -> CTEDEC .)
    CTEDEC          reduce using rule 81 (valor -> CTEDEC .)


state 55

    (79) valor -> ID . call_or_array
    (82) call_or_array -> . LBRAK CTEINT push_array_dim1 RBRAK id_array
    (83) call_or_array -> . LPAREN nombre_func param_array id_call RPAREN push_gosub
    (84) call_or_array -> . empty
    (23) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LBRAK           shift and go to state 58
    LPAREN          shift and go to state 86
    TIMES           reduce using rule 23 (empty -> .)
    DIVIDE          reduce using rule 23 (empty -> .)
    PLUS            reduce using rule 23 (empty -> .)
    MINUS           reduce using rule 23 (empty -> .)
    MAYOR           reduce using rule 23 (empty -> .)
    MENOR           reduce using rule 23 (empty -> .)
    COMPARA         reduce using rule 23 (empty -> .)
    ID              reduce using rule 23 (empty -> .)
    CTEINT          reduce using rule 23 (empty -> .)
    CTEDEC          reduce using rule 23 (empty -> .)
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    RPAREN          reduce using rule 23 (empty -> .)
    COMMA           reduce using rule 23 (empty -> .)
    SEMICOL         reduce using rule 23 (empty -> .)

  ! LPAREN          [ reduce using rule 23 (empty -> .) ]

    call_or_array                  shift and go to state 87
    empty                          shift and go to state 61

state 56

    (54) expresion -> LEE . LPAREN STRING RPAREN SEMICOL

    LPAREN          shift and go to state 88


state 57

    (104) mientras -> MIENTRAS mientras_haz_push . LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE

    LPAREN          shift and go to state 89


state 58

    (82) call_or_array -> LBRAK . CTEINT push_array_dim1 RBRAK id_array

    CTEINT          shift and go to state 90


state 59

    (48) llamada -> ID LPAREN . nombre_func llamadaparam RPAREN
    (83) call_or_array -> LPAREN . nombre_func param_array id_call RPAREN push_gosub
    (87) nombre_func -> .

    LEE             reduce using rule 87 (nombre_func -> .)
    LPAREN          reduce using rule 87 (nombre_func -> .)
    ID              reduce using rule 87 (nombre_func -> .)
    CTEINT          reduce using rule 87 (nombre_func -> .)
    CTEDEC          reduce using rule 87 (nombre_func -> .)
    RPAREN          reduce using rule 87 (nombre_func -> .)
    COMMA           reduce using rule 87 (nombre_func -> .)

    nombre_func                    shift and go to state 91

state 60

    (45) asignacion -> ID call_or_array . asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (46) asignacion_push_id -> .

    IGUAL           reduce using rule 46 (asignacion_push_id -> .)

    asignacion_push_id             shift and go to state 92

state 61

    (84) call_or_array -> empty .

    IGUAL           reduce using rule 84 (call_or_array -> empty .)
    TIMES           reduce using rule 84 (call_or_array -> empty .)
    DIVIDE          reduce using rule 84 (call_or_array -> empty .)
    PLUS            reduce using rule 84 (call_or_array -> empty .)
    MINUS           reduce using rule 84 (call_or_array -> empty .)
    MAYOR           reduce using rule 84 (call_or_array -> empty .)
    MENOR           reduce using rule 84 (call_or_array -> empty .)
    COMPARA         reduce using rule 84 (call_or_array -> empty .)
    LPAREN          reduce using rule 84 (call_or_array -> empty .)
    ID              reduce using rule 84 (call_or_array -> empty .)
    CTEINT          reduce using rule 84 (call_or_array -> empty .)
    CTEDEC          reduce using rule 84 (call_or_array -> empty .)
    SI              reduce using rule 84 (call_or_array -> empty .)
    MIENTRAS        reduce using rule 84 (call_or_array -> empty .)
    PARA            reduce using rule 84 (call_or_array -> empty .)
    IMPRIME         reduce using rule 84 (call_or_array -> empty .)
    REGRESA         reduce using rule 84 (call_or_array -> empty .)
    FUNCION         reduce using rule 84 (call_or_array -> empty .)
    RLLAVE          reduce using rule 84 (call_or_array -> empty .)
    RPAREN          reduce using rule 84 (call_or_array -> empty .)
    COMMA           reduce using rule 84 (call_or_array -> empty .)
    SEMICOL         reduce using rule 84 (call_or_array -> empty .)


state 62

    (29) funcion -> FUNCION funcion_increase_func . tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (19) tipo -> . ENTERO
    (20) tipo -> . DECIMAL
    (21) tipo -> . FRASE
    (22) tipo -> . ESVERDAD

    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14

    tipo                           shift and go to state 93

state 63

    (107) escritura -> IMPRIME escritura_escribe . LPAREN esc RPAREN

    LPAREN          shift and go to state 94


state 64

    (38) estatuto -> asignacion bloque .

    FUNCION         reduce using rule 38 (estatuto -> asignacion bloque .)
    ID              reduce using rule 38 (estatuto -> asignacion bloque .)
    SI              reduce using rule 38 (estatuto -> asignacion bloque .)
    MIENTRAS        reduce using rule 38 (estatuto -> asignacion bloque .)
    PARA            reduce using rule 38 (estatuto -> asignacion bloque .)
    IMPRIME         reduce using rule 38 (estatuto -> asignacion bloque .)
    REGRESA         reduce using rule 38 (estatuto -> asignacion bloque .)
    RLLAVE          reduce using rule 38 (estatuto -> asignacion bloque .)


state 65

    (42) estatuto -> escritura bloque .

    FUNCION         reduce using rule 42 (estatuto -> escritura bloque .)
    ID              reduce using rule 42 (estatuto -> escritura bloque .)
    SI              reduce using rule 42 (estatuto -> escritura bloque .)
    MIENTRAS        reduce using rule 42 (estatuto -> escritura bloque .)
    PARA            reduce using rule 42 (estatuto -> escritura bloque .)
    IMPRIME         reduce using rule 42 (estatuto -> escritura bloque .)
    REGRESA         reduce using rule 42 (estatuto -> escritura bloque .)
    RLLAVE          reduce using rule 42 (estatuto -> escritura bloque .)


state 66

    (7) dimension -> LBRAK . CTEINT push_dim1 RBRAK dimension2

    CTEINT          shift and go to state 95


state 67

    (6) vars2 -> tipo ID dimension . vars_push_id vars3 SEMICOL vars4
    (13) vars_push_id -> .

    COMMA           reduce using rule 13 (vars_push_id -> .)
    SEMICOL         reduce using rule 13 (vars_push_id -> .)

    vars_push_id                   shift and go to state 96

state 68

    (8) dimension -> empty .

    COMMA           reduce using rule 8 (dimension -> empty .)
    SEMICOL         reduce using rule 8 (dimension -> empty .)


state 69

    (101) para -> PARA ID ENRANGO . LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    LPAREN          shift and go to state 97


state 70

    (96) condicion -> SI LPAREN expresion . RPAREN condicion_if LLLAVE estatuto RLLAVE else

    RPAREN          shift and go to state 98


state 71

    (53) expresion -> exp expresions .

    COMMA           reduce using rule 53 (expresion -> exp expresions .)
    RPAREN          reduce using rule 53 (expresion -> exp expresions .)
    ID              reduce using rule 53 (expresion -> exp expresions .)
    SI              reduce using rule 53 (expresion -> exp expresions .)
    MIENTRAS        reduce using rule 53 (expresion -> exp expresions .)
    PARA            reduce using rule 53 (expresion -> exp expresions .)
    IMPRIME         reduce using rule 53 (expresion -> exp expresions .)
    REGRESA         reduce using rule 53 (expresion -> exp expresions .)
    FUNCION         reduce using rule 53 (expresion -> exp expresions .)
    RLLAVE          reduce using rule 53 (expresion -> exp expresions .)
    SEMICOL         reduce using rule 53 (expresion -> exp expresions .)


state 72

    (55) expresions -> MAYOR . expresions_push_mayor exp
    (60) expresions_push_mayor -> .

    LPAREN          reduce using rule 60 (expresions_push_mayor -> .)
    ID              reduce using rule 60 (expresions_push_mayor -> .)
    CTEINT          reduce using rule 60 (expresions_push_mayor -> .)
    CTEDEC          reduce using rule 60 (expresions_push_mayor -> .)

    expresions_push_mayor          shift and go to state 99

state 73

    (59) expresions -> empty .

    ID              reduce using rule 59 (expresions -> empty .)
    SI              reduce using rule 59 (expresions -> empty .)
    MIENTRAS        reduce using rule 59 (expresions -> empty .)
    PARA            reduce using rule 59 (expresions -> empty .)
    IMPRIME         reduce using rule 59 (expresions -> empty .)
    REGRESA         reduce using rule 59 (expresions -> empty .)
    FUNCION         reduce using rule 59 (expresions -> empty .)
    RLLAVE          reduce using rule 59 (expresions -> empty .)
    RPAREN          reduce using rule 59 (expresions -> empty .)
    COMMA           reduce using rule 59 (expresions -> empty .)
    SEMICOL         reduce using rule 59 (expresions -> empty .)


state 74

    (57) expresions -> COMPARA . expresions_push_compara exp
    (62) expresions_push_compara -> .

    LPAREN          reduce using rule 62 (expresions_push_compara -> .)
    ID              reduce using rule 62 (expresions_push_compara -> .)
    CTEINT          reduce using rule 62 (expresions_push_compara -> .)
    CTEDEC          reduce using rule 62 (expresions_push_compara -> .)

    expresions_push_compara        shift and go to state 100

state 75

    (56) expresions -> MENOR . expresions_push_menor exp
    (61) expresions_push_menor -> .

    LPAREN          reduce using rule 61 (expresions_push_menor -> .)
    ID              reduce using rule 61 (expresions_push_menor -> .)
    CTEINT          reduce using rule 61 (expresions_push_menor -> .)
    CTEDEC          reduce using rule 61 (expresions_push_menor -> .)

    expresions_push_menor          shift and go to state 101

state 76

    (58) expresions -> exp .

    ID              reduce using rule 58 (expresions -> exp .)
    SI              reduce using rule 58 (expresions -> exp .)
    MIENTRAS        reduce using rule 58 (expresions -> exp .)
    PARA            reduce using rule 58 (expresions -> exp .)
    IMPRIME         reduce using rule 58 (expresions -> exp .)
    REGRESA         reduce using rule 58 (expresions -> exp .)
    FUNCION         reduce using rule 58 (expresions -> exp .)
    RLLAVE          reduce using rule 58 (expresions -> exp .)
    RPAREN          reduce using rule 58 (expresions -> exp .)
    COMMA           reduce using rule 58 (expresions -> exp .)
    SEMICOL         reduce using rule 58 (expresions -> exp .)


state 77

    (63) exp -> termino exps .

    MAYOR           reduce using rule 63 (exp -> termino exps .)
    MENOR           reduce using rule 63 (exp -> termino exps .)
    COMPARA         reduce using rule 63 (exp -> termino exps .)
    LPAREN          reduce using rule 63 (exp -> termino exps .)
    ID              reduce using rule 63 (exp -> termino exps .)
    CTEINT          reduce using rule 63 (exp -> termino exps .)
    CTEDEC          reduce using rule 63 (exp -> termino exps .)
    RPAREN          reduce using rule 63 (exp -> termino exps .)
    SI              reduce using rule 63 (exp -> termino exps .)
    MIENTRAS        reduce using rule 63 (exp -> termino exps .)
    PARA            reduce using rule 63 (exp -> termino exps .)
    IMPRIME         reduce using rule 63 (exp -> termino exps .)
    REGRESA         reduce using rule 63 (exp -> termino exps .)
    FUNCION         reduce using rule 63 (exp -> termino exps .)
    RLLAVE          reduce using rule 63 (exp -> termino exps .)
    COMMA           reduce using rule 63 (exp -> termino exps .)
    SEMICOL         reduce using rule 63 (exp -> termino exps .)


state 78

    (64) exps -> PLUS . exps_push_plus termino exps
    (67) exps_push_plus -> .

    LPAREN          reduce using rule 67 (exps_push_plus -> .)
    ID              reduce using rule 67 (exps_push_plus -> .)
    CTEINT          reduce using rule 67 (exps_push_plus -> .)
    CTEDEC          reduce using rule 67 (exps_push_plus -> .)

    exps_push_plus                 shift and go to state 102

state 79

    (65) exps -> MINUS . exps_push_minus termino exps
    (68) exps_push_minus -> .

    LPAREN          reduce using rule 68 (exps_push_minus -> .)
    ID              reduce using rule 68 (exps_push_minus -> .)
    CTEINT          reduce using rule 68 (exps_push_minus -> .)
    CTEDEC          reduce using rule 68 (exps_push_minus -> .)

    exps_push_minus                shift and go to state 103

state 80

    (66) exps -> empty .

    MAYOR           reduce using rule 66 (exps -> empty .)
    MENOR           reduce using rule 66 (exps -> empty .)
    COMPARA         reduce using rule 66 (exps -> empty .)
    LPAREN          reduce using rule 66 (exps -> empty .)
    ID              reduce using rule 66 (exps -> empty .)
    CTEINT          reduce using rule 66 (exps -> empty .)
    CTEDEC          reduce using rule 66 (exps -> empty .)
    SI              reduce using rule 66 (exps -> empty .)
    MIENTRAS        reduce using rule 66 (exps -> empty .)
    PARA            reduce using rule 66 (exps -> empty .)
    IMPRIME         reduce using rule 66 (exps -> empty .)
    REGRESA         reduce using rule 66 (exps -> empty .)
    FUNCION         reduce using rule 66 (exps -> empty .)
    RLLAVE          reduce using rule 66 (exps -> empty .)
    RPAREN          reduce using rule 66 (exps -> empty .)
    COMMA           reduce using rule 66 (exps -> empty .)
    SEMICOL         reduce using rule 66 (exps -> empty .)


state 81

    (75) factor -> LPAREN factor_lparen . expresion RPAREN factor_rparen
    (53) expresion -> . exp expresions
    (54) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LEE             shift and go to state 56
    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    expresion                      shift and go to state 104
    valor                          shift and go to state 49
    termino                        shift and go to state 51
    exp                            shift and go to state 48
    factor                         shift and go to state 53

state 82

    (71) terminos -> DIVIDE . terminos_push_divide factor terminos
    (74) terminos_push_divide -> .

    LPAREN          reduce using rule 74 (terminos_push_divide -> .)
    ID              reduce using rule 74 (terminos_push_divide -> .)
    CTEINT          reduce using rule 74 (terminos_push_divide -> .)
    CTEDEC          reduce using rule 74 (terminos_push_divide -> .)

    terminos_push_divide           shift and go to state 105

state 83

    (69) termino -> factor terminos .

    PLUS            reduce using rule 69 (termino -> factor terminos .)
    MINUS           reduce using rule 69 (termino -> factor terminos .)
    MAYOR           reduce using rule 69 (termino -> factor terminos .)
    MENOR           reduce using rule 69 (termino -> factor terminos .)
    COMPARA         reduce using rule 69 (termino -> factor terminos .)
    LPAREN          reduce using rule 69 (termino -> factor terminos .)
    ID              reduce using rule 69 (termino -> factor terminos .)
    CTEINT          reduce using rule 69 (termino -> factor terminos .)
    CTEDEC          reduce using rule 69 (termino -> factor terminos .)
    COMMA           reduce using rule 69 (termino -> factor terminos .)
    RPAREN          reduce using rule 69 (termino -> factor terminos .)
    SI              reduce using rule 69 (termino -> factor terminos .)
    MIENTRAS        reduce using rule 69 (termino -> factor terminos .)
    PARA            reduce using rule 69 (termino -> factor terminos .)
    IMPRIME         reduce using rule 69 (termino -> factor terminos .)
    REGRESA         reduce using rule 69 (termino -> factor terminos .)
    FUNCION         reduce using rule 69 (termino -> factor terminos .)
    RLLAVE          reduce using rule 69 (termino -> factor terminos .)
    SEMICOL         reduce using rule 69 (termino -> factor terminos .)


state 84

    (70) terminos -> TIMES . terminos_push_times factor terminos
    (73) terminos_push_times -> .

    LPAREN          reduce using rule 73 (terminos_push_times -> .)
    ID              reduce using rule 73 (terminos_push_times -> .)
    CTEINT          reduce using rule 73 (terminos_push_times -> .)
    CTEDEC          reduce using rule 73 (terminos_push_times -> .)

    terminos_push_times            shift and go to state 106

state 85

    (72) terminos -> empty .

    PLUS            reduce using rule 72 (terminos -> empty .)
    MINUS           reduce using rule 72 (terminos -> empty .)
    MAYOR           reduce using rule 72 (terminos -> empty .)
    MENOR           reduce using rule 72 (terminos -> empty .)
    COMPARA         reduce using rule 72 (terminos -> empty .)
    LPAREN          reduce using rule 72 (terminos -> empty .)
    ID              reduce using rule 72 (terminos -> empty .)
    CTEINT          reduce using rule 72 (terminos -> empty .)
    CTEDEC          reduce using rule 72 (terminos -> empty .)
    SI              reduce using rule 72 (terminos -> empty .)
    MIENTRAS        reduce using rule 72 (terminos -> empty .)
    PARA            reduce using rule 72 (terminos -> empty .)
    IMPRIME         reduce using rule 72 (terminos -> empty .)
    REGRESA         reduce using rule 72 (terminos -> empty .)
    FUNCION         reduce using rule 72 (terminos -> empty .)
    RLLAVE          reduce using rule 72 (terminos -> empty .)
    RPAREN          reduce using rule 72 (terminos -> empty .)
    COMMA           reduce using rule 72 (terminos -> empty .)
    SEMICOL         reduce using rule 72 (terminos -> empty .)


state 86

    (83) call_or_array -> LPAREN . nombre_func param_array id_call RPAREN push_gosub
    (87) nombre_func -> .

    LEE             reduce using rule 87 (nombre_func -> .)
    LPAREN          reduce using rule 87 (nombre_func -> .)
    ID              reduce using rule 87 (nombre_func -> .)
    CTEINT          reduce using rule 87 (nombre_func -> .)
    CTEDEC          reduce using rule 87 (nombre_func -> .)
    COMMA           reduce using rule 87 (nombre_func -> .)
    RPAREN          reduce using rule 87 (nombre_func -> .)

    nombre_func                    shift and go to state 107

state 87

    (79) valor -> ID call_or_array .

    TIMES           reduce using rule 79 (valor -> ID call_or_array .)
    DIVIDE          reduce using rule 79 (valor -> ID call_or_array .)
    PLUS            reduce using rule 79 (valor -> ID call_or_array .)
    MINUS           reduce using rule 79 (valor -> ID call_or_array .)
    ID              reduce using rule 79 (valor -> ID call_or_array .)
    SI              reduce using rule 79 (valor -> ID call_or_array .)
    MIENTRAS        reduce using rule 79 (valor -> ID call_or_array .)
    PARA            reduce using rule 79 (valor -> ID call_or_array .)
    IMPRIME         reduce using rule 79 (valor -> ID call_or_array .)
    REGRESA         reduce using rule 79 (valor -> ID call_or_array .)
    FUNCION         reduce using rule 79 (valor -> ID call_or_array .)
    RLLAVE          reduce using rule 79 (valor -> ID call_or_array .)
    RPAREN          reduce using rule 79 (valor -> ID call_or_array .)
    COMMA           reduce using rule 79 (valor -> ID call_or_array .)
    SEMICOL         reduce using rule 79 (valor -> ID call_or_array .)
    MAYOR           reduce using rule 79 (valor -> ID call_or_array .)
    MENOR           reduce using rule 79 (valor -> ID call_or_array .)
    COMPARA         reduce using rule 79 (valor -> ID call_or_array .)
    LPAREN          reduce using rule 79 (valor -> ID call_or_array .)
    CTEINT          reduce using rule 79 (valor -> ID call_or_array .)
    CTEDEC          reduce using rule 79 (valor -> ID call_or_array .)


state 88

    (54) expresion -> LEE LPAREN . STRING RPAREN SEMICOL

    STRING          shift and go to state 108


state 89

    (104) mientras -> MIENTRAS mientras_haz_push LPAREN . expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (53) expresion -> . exp expresions
    (54) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LEE             shift and go to state 56
    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    expresion                      shift and go to state 109
    valor                          shift and go to state 49
    exp                            shift and go to state 48
    factor                         shift and go to state 53
    termino                        shift and go to state 51

state 90

    (82) call_or_array -> LBRAK CTEINT . push_array_dim1 RBRAK id_array
    (92) push_array_dim1 -> .

    RBRAK           reduce using rule 92 (push_array_dim1 -> .)

    push_array_dim1                shift and go to state 110

state 91

    (48) llamada -> ID LPAREN nombre_func . llamadaparam RPAREN
    (83) call_or_array -> LPAREN nombre_func . param_array id_call RPAREN push_gosub
    (49) llamadaparam -> . expresion set_value_param llamadaparams
    (50) llamadaparam -> . empty
    (85) param_array -> . expresion set_value_param
    (86) param_array -> . empty
    (53) expresion -> . exp expresions
    (54) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (23) empty -> .
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LEE             shift and go to state 56
    RPAREN          reduce using rule 23 (empty -> .)
    COMMA           reduce using rule 23 (empty -> .)
    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    expresion                      shift and go to state 114
    param_array                    shift and go to state 113
    valor                          shift and go to state 49
    llamadaparam                   shift and go to state 111
    termino                        shift and go to state 51
    exp                            shift and go to state 48
    factor                         shift and go to state 53
    empty                          shift and go to state 112

state 92

    (45) asignacion -> ID call_or_array asignacion_push_id . IGUAL asignacion_push_igual expresion SEMICOL

    IGUAL           shift and go to state 115


state 93

    (29) funcion -> FUNCION funcion_increase_func tipo . ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE

    ID              shift and go to state 116


state 94

    (107) escritura -> IMPRIME escritura_escribe LPAREN . esc RPAREN
    (109) esc -> . expresion escs
    (110) esc -> . STRING escs
    (53) expresion -> . exp expresions
    (54) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    STRING          shift and go to state 118
    LEE             shift and go to state 56
    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    expresion                      shift and go to state 119
    valor                          shift and go to state 49
    esc                            shift and go to state 117
    termino                        shift and go to state 51
    exp                            shift and go to state 48
    factor                         shift and go to state 53

state 95

    (7) dimension -> LBRAK CTEINT . push_dim1 RBRAK dimension2
    (9) push_dim1 -> .

    RBRAK           reduce using rule 9 (push_dim1 -> .)

    push_dim1                      shift and go to state 120

state 96

    (6) vars2 -> tipo ID dimension vars_push_id . vars3 SEMICOL vars4
    (14) vars3 -> . COMMA ID dimension vars3_push_id vars3
    (15) vars3 -> . empty
    (23) empty -> .

    COMMA           shift and go to state 122
    SEMICOL         reduce using rule 23 (empty -> .)

    vars3                          shift and go to state 121
    empty                          shift and go to state 123

state 97

    (101) para -> PARA ID ENRANGO LPAREN . param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (102) param -> . ID
    (103) param -> . CTEINT

    ID              shift and go to state 126
    CTEINT          shift and go to state 124

    param                          shift and go to state 125

state 98

    (96) condicion -> SI LPAREN expresion RPAREN . condicion_if LLLAVE estatuto RLLAVE else
    (97) condicion_if -> .

    LLLAVE          reduce using rule 97 (condicion_if -> .)

    condicion_if                   shift and go to state 127

state 99

    (55) expresions -> MAYOR expresions_push_mayor . exp
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    termino                        shift and go to state 51
    exp                            shift and go to state 128
    factor                         shift and go to state 53
    valor                          shift and go to state 49

state 100

    (57) expresions -> COMPARA expresions_push_compara . exp
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    valor                          shift and go to state 49
    termino                        shift and go to state 51
    exp                            shift and go to state 129
    factor                         shift and go to state 53

state 101

    (56) expresions -> MENOR expresions_push_menor . exp
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    valor                          shift and go to state 49
    termino                        shift and go to state 51
    exp                            shift and go to state 130
    factor                         shift and go to state 53

state 102

    (64) exps -> PLUS exps_push_plus . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    valor                          shift and go to state 49
    termino                        shift and go to state 131
    factor                         shift and go to state 53

state 103

    (65) exps -> MINUS exps_push_minus . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    valor                          shift and go to state 49
    termino                        shift and go to state 132
    factor                         shift and go to state 53

state 104

    (75) factor -> LPAREN factor_lparen expresion . RPAREN factor_rparen

    RPAREN          shift and go to state 133


state 105

    (71) terminos -> DIVIDE terminos_push_divide . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    valor                          shift and go to state 49
    factor                         shift and go to state 134

state 106

    (70) terminos -> TIMES terminos_push_times . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    valor                          shift and go to state 49
    factor                         shift and go to state 135

state 107

    (83) call_or_array -> LPAREN nombre_func . param_array id_call RPAREN push_gosub
    (85) param_array -> . expresion set_value_param
    (86) param_array -> . empty
    (53) expresion -> . exp expresions
    (54) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (23) empty -> .
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LEE             shift and go to state 56
    COMMA           reduce using rule 23 (empty -> .)
    RPAREN          reduce using rule 23 (empty -> .)
    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    expresion                      shift and go to state 137
    param_array                    shift and go to state 113
    valor                          shift and go to state 49
    termino                        shift and go to state 51
    exp                            shift and go to state 48
    factor                         shift and go to state 53
    empty                          shift and go to state 136

state 108

    (54) expresion -> LEE LPAREN STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 138


state 109

    (104) mientras -> MIENTRAS mientras_haz_push LPAREN expresion . RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE

    RPAREN          shift and go to state 139


state 110

    (82) call_or_array -> LBRAK CTEINT push_array_dim1 . RBRAK id_array

    RBRAK           shift and go to state 140


state 111

    (48) llamada -> ID LPAREN nombre_func llamadaparam . RPAREN

    RPAREN          shift and go to state 141


state 112

    (50) llamadaparam -> empty .
    (86) param_array -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 50 (llamadaparam -> empty .)
    RPAREN          reduce using rule 50 (llamadaparam -> empty .)
    COMMA           reduce using rule 86 (param_array -> empty .)

  ! RPAREN          [ reduce using rule 86 (param_array -> empty .) ]


state 113

    (83) call_or_array -> LPAREN nombre_func param_array . id_call RPAREN push_gosub
    (94) id_call -> . COMMA expresion set_value_param id_call
    (95) id_call -> . empty
    (23) empty -> .

    COMMA           shift and go to state 142
    RPAREN          reduce using rule 23 (empty -> .)

    id_call                        shift and go to state 143
    empty                          shift and go to state 144

state 114

    (49) llamadaparam -> expresion . set_value_param llamadaparams
    (85) param_array -> expresion . set_value_param
    (89) set_value_param -> .

    COMMA           reduce using rule 89 (set_value_param -> .)
    RPAREN          reduce using rule 89 (set_value_param -> .)

    set_value_param                shift and go to state 145

state 115

    (45) asignacion -> ID call_or_array asignacion_push_id IGUAL . asignacion_push_igual expresion SEMICOL
    (47) asignacion_push_igual -> .

    LEE             reduce using rule 47 (asignacion_push_igual -> .)
    LPAREN          reduce using rule 47 (asignacion_push_igual -> .)
    ID              reduce using rule 47 (asignacion_push_igual -> .)
    CTEINT          reduce using rule 47 (asignacion_push_igual -> .)
    CTEDEC          reduce using rule 47 (asignacion_push_igual -> .)

    asignacion_push_igual          shift and go to state 146

state 116

    (29) funcion -> FUNCION funcion_increase_func tipo ID . funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (32) funcion_push_id -> .

    LPAREN          reduce using rule 32 (funcion_push_id -> .)

    funcion_push_id                shift and go to state 147

state 117

    (107) escritura -> IMPRIME escritura_escribe LPAREN esc . RPAREN

    RPAREN          shift and go to state 148


state 118

    (110) esc -> STRING . escs
    (111) escs -> . COMMA esc
    (112) escs -> . empty
    (23) empty -> .

    COMMA           shift and go to state 150
    RPAREN          reduce using rule 23 (empty -> .)

    escs                           shift and go to state 149
    empty                          shift and go to state 151

state 119

    (109) esc -> expresion . escs
    (111) escs -> . COMMA esc
    (112) escs -> . empty
    (23) empty -> .

    COMMA           shift and go to state 150
    RPAREN          reduce using rule 23 (empty -> .)

    escs                           shift and go to state 152
    empty                          shift and go to state 151

state 120

    (7) dimension -> LBRAK CTEINT push_dim1 . RBRAK dimension2

    RBRAK           shift and go to state 153


state 121

    (6) vars2 -> tipo ID dimension vars_push_id vars3 . SEMICOL vars4

    SEMICOL         shift and go to state 154


state 122

    (14) vars3 -> COMMA . ID dimension vars3_push_id vars3

    ID              shift and go to state 155


state 123

    (15) vars3 -> empty .

    SEMICOL         reduce using rule 15 (vars3 -> empty .)


state 124

    (103) param -> CTEINT .

    RPAREN          reduce using rule 103 (param -> CTEINT .)
    COMMA           reduce using rule 103 (param -> CTEINT .)


state 125

    (101) para -> PARA ID ENRANGO LPAREN param . COMMA param RPAREN LLLAVE estatuto RLLAVE

    COMMA           shift and go to state 156


state 126

    (102) param -> ID .

    RPAREN          reduce using rule 102 (param -> ID .)
    COMMA           reduce using rule 102 (param -> ID .)


state 127

    (96) condicion -> SI LPAREN expresion RPAREN condicion_if . LLLAVE estatuto RLLAVE else

    LLLAVE          shift and go to state 157


state 128

    (55) expresions -> MAYOR expresions_push_mayor exp .

    ID              reduce using rule 55 (expresions -> MAYOR expresions_push_mayor exp .)
    SI              reduce using rule 55 (expresions -> MAYOR expresions_push_mayor exp .)
    MIENTRAS        reduce using rule 55 (expresions -> MAYOR expresions_push_mayor exp .)
    PARA            reduce using rule 55 (expresions -> MAYOR expresions_push_mayor exp .)
    IMPRIME         reduce using rule 55 (expresions -> MAYOR expresions_push_mayor exp .)
    REGRESA         reduce using rule 55 (expresions -> MAYOR expresions_push_mayor exp .)
    FUNCION         reduce using rule 55 (expresions -> MAYOR expresions_push_mayor exp .)
    RLLAVE          reduce using rule 55 (expresions -> MAYOR expresions_push_mayor exp .)
    RPAREN          reduce using rule 55 (expresions -> MAYOR expresions_push_mayor exp .)
    COMMA           reduce using rule 55 (expresions -> MAYOR expresions_push_mayor exp .)
    SEMICOL         reduce using rule 55 (expresions -> MAYOR expresions_push_mayor exp .)


state 129

    (57) expresions -> COMPARA expresions_push_compara exp .

    ID              reduce using rule 57 (expresions -> COMPARA expresions_push_compara exp .)
    SI              reduce using rule 57 (expresions -> COMPARA expresions_push_compara exp .)
    MIENTRAS        reduce using rule 57 (expresions -> COMPARA expresions_push_compara exp .)
    PARA            reduce using rule 57 (expresions -> COMPARA expresions_push_compara exp .)
    IMPRIME         reduce using rule 57 (expresions -> COMPARA expresions_push_compara exp .)
    REGRESA         reduce using rule 57 (expresions -> COMPARA expresions_push_compara exp .)
    FUNCION         reduce using rule 57 (expresions -> COMPARA expresions_push_compara exp .)
    RLLAVE          reduce using rule 57 (expresions -> COMPARA expresions_push_compara exp .)
    RPAREN          reduce using rule 57 (expresions -> COMPARA expresions_push_compara exp .)
    COMMA           reduce using rule 57 (expresions -> COMPARA expresions_push_compara exp .)
    SEMICOL         reduce using rule 57 (expresions -> COMPARA expresions_push_compara exp .)


state 130

    (56) expresions -> MENOR expresions_push_menor exp .

    ID              reduce using rule 56 (expresions -> MENOR expresions_push_menor exp .)
    SI              reduce using rule 56 (expresions -> MENOR expresions_push_menor exp .)
    MIENTRAS        reduce using rule 56 (expresions -> MENOR expresions_push_menor exp .)
    PARA            reduce using rule 56 (expresions -> MENOR expresions_push_menor exp .)
    IMPRIME         reduce using rule 56 (expresions -> MENOR expresions_push_menor exp .)
    REGRESA         reduce using rule 56 (expresions -> MENOR expresions_push_menor exp .)
    FUNCION         reduce using rule 56 (expresions -> MENOR expresions_push_menor exp .)
    RLLAVE          reduce using rule 56 (expresions -> MENOR expresions_push_menor exp .)
    RPAREN          reduce using rule 56 (expresions -> MENOR expresions_push_menor exp .)
    COMMA           reduce using rule 56 (expresions -> MENOR expresions_push_menor exp .)
    SEMICOL         reduce using rule 56 (expresions -> MENOR expresions_push_menor exp .)


state 131

    (64) exps -> PLUS exps_push_plus termino . exps
    (64) exps -> . PLUS exps_push_plus termino exps
    (65) exps -> . MINUS exps_push_minus termino exps
    (66) exps -> . empty
    (23) empty -> .

    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    MAYOR           reduce using rule 23 (empty -> .)
    MENOR           reduce using rule 23 (empty -> .)
    COMPARA         reduce using rule 23 (empty -> .)
    LPAREN          reduce using rule 23 (empty -> .)
    ID              reduce using rule 23 (empty -> .)
    CTEINT          reduce using rule 23 (empty -> .)
    CTEDEC          reduce using rule 23 (empty -> .)
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    RPAREN          reduce using rule 23 (empty -> .)
    COMMA           reduce using rule 23 (empty -> .)
    SEMICOL         reduce using rule 23 (empty -> .)

    exps                           shift and go to state 158
    empty                          shift and go to state 80

state 132

    (65) exps -> MINUS exps_push_minus termino . exps
    (64) exps -> . PLUS exps_push_plus termino exps
    (65) exps -> . MINUS exps_push_minus termino exps
    (66) exps -> . empty
    (23) empty -> .

    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    MAYOR           reduce using rule 23 (empty -> .)
    MENOR           reduce using rule 23 (empty -> .)
    COMPARA         reduce using rule 23 (empty -> .)
    LPAREN          reduce using rule 23 (empty -> .)
    ID              reduce using rule 23 (empty -> .)
    CTEINT          reduce using rule 23 (empty -> .)
    CTEDEC          reduce using rule 23 (empty -> .)
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    RPAREN          reduce using rule 23 (empty -> .)
    COMMA           reduce using rule 23 (empty -> .)
    SEMICOL         reduce using rule 23 (empty -> .)

    exps                           shift and go to state 159
    empty                          shift and go to state 80

state 133

    (75) factor -> LPAREN factor_lparen expresion RPAREN . factor_rparen
    (78) factor_rparen -> .

    TIMES           reduce using rule 78 (factor_rparen -> .)
    DIVIDE          reduce using rule 78 (factor_rparen -> .)
    PLUS            reduce using rule 78 (factor_rparen -> .)
    MINUS           reduce using rule 78 (factor_rparen -> .)
    MAYOR           reduce using rule 78 (factor_rparen -> .)
    MENOR           reduce using rule 78 (factor_rparen -> .)
    COMPARA         reduce using rule 78 (factor_rparen -> .)
    LPAREN          reduce using rule 78 (factor_rparen -> .)
    ID              reduce using rule 78 (factor_rparen -> .)
    CTEINT          reduce using rule 78 (factor_rparen -> .)
    CTEDEC          reduce using rule 78 (factor_rparen -> .)
    SI              reduce using rule 78 (factor_rparen -> .)
    MIENTRAS        reduce using rule 78 (factor_rparen -> .)
    PARA            reduce using rule 78 (factor_rparen -> .)
    IMPRIME         reduce using rule 78 (factor_rparen -> .)
    REGRESA         reduce using rule 78 (factor_rparen -> .)
    FUNCION         reduce using rule 78 (factor_rparen -> .)
    RLLAVE          reduce using rule 78 (factor_rparen -> .)
    RPAREN          reduce using rule 78 (factor_rparen -> .)
    COMMA           reduce using rule 78 (factor_rparen -> .)
    SEMICOL         reduce using rule 78 (factor_rparen -> .)

    factor_rparen                  shift and go to state 160

state 134

    (71) terminos -> DIVIDE terminos_push_divide factor . terminos
    (70) terminos -> . TIMES terminos_push_times factor terminos
    (71) terminos -> . DIVIDE terminos_push_divide factor terminos
    (72) terminos -> . empty
    (23) empty -> .

    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 82
    PLUS            reduce using rule 23 (empty -> .)
    MINUS           reduce using rule 23 (empty -> .)
    MAYOR           reduce using rule 23 (empty -> .)
    MENOR           reduce using rule 23 (empty -> .)
    COMPARA         reduce using rule 23 (empty -> .)
    LPAREN          reduce using rule 23 (empty -> .)
    ID              reduce using rule 23 (empty -> .)
    CTEINT          reduce using rule 23 (empty -> .)
    CTEDEC          reduce using rule 23 (empty -> .)
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    RPAREN          reduce using rule 23 (empty -> .)
    COMMA           reduce using rule 23 (empty -> .)
    SEMICOL         reduce using rule 23 (empty -> .)

    terminos                       shift and go to state 161
    empty                          shift and go to state 85

state 135

    (70) terminos -> TIMES terminos_push_times factor . terminos
    (70) terminos -> . TIMES terminos_push_times factor terminos
    (71) terminos -> . DIVIDE terminos_push_divide factor terminos
    (72) terminos -> . empty
    (23) empty -> .

    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 82
    PLUS            reduce using rule 23 (empty -> .)
    MINUS           reduce using rule 23 (empty -> .)
    MAYOR           reduce using rule 23 (empty -> .)
    MENOR           reduce using rule 23 (empty -> .)
    COMPARA         reduce using rule 23 (empty -> .)
    LPAREN          reduce using rule 23 (empty -> .)
    ID              reduce using rule 23 (empty -> .)
    CTEINT          reduce using rule 23 (empty -> .)
    CTEDEC          reduce using rule 23 (empty -> .)
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    RPAREN          reduce using rule 23 (empty -> .)
    COMMA           reduce using rule 23 (empty -> .)
    SEMICOL         reduce using rule 23 (empty -> .)

    terminos                       shift and go to state 162
    empty                          shift and go to state 85

state 136

    (86) param_array -> empty .

    COMMA           reduce using rule 86 (param_array -> empty .)
    RPAREN          reduce using rule 86 (param_array -> empty .)


state 137

    (85) param_array -> expresion . set_value_param
    (89) set_value_param -> .

    COMMA           reduce using rule 89 (set_value_param -> .)
    RPAREN          reduce using rule 89 (set_value_param -> .)

    set_value_param                shift and go to state 163

state 138

    (54) expresion -> LEE LPAREN STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 164


state 139

    (104) mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN . mientras_haz_push2 LLLAVE estatuto RLLAVE
    (106) mientras_haz_push2 -> .

    LLLAVE          reduce using rule 106 (mientras_haz_push2 -> .)

    mientras_haz_push2             shift and go to state 165

state 140

    (82) call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK . id_array
    (90) id_array -> . LBRAK CTEINT push_array_dim2 RBRAK
    (91) id_array -> . empty
    (23) empty -> .

    LBRAK           shift and go to state 167
    IGUAL           reduce using rule 23 (empty -> .)
    TIMES           reduce using rule 23 (empty -> .)
    DIVIDE          reduce using rule 23 (empty -> .)
    PLUS            reduce using rule 23 (empty -> .)
    MINUS           reduce using rule 23 (empty -> .)
    MAYOR           reduce using rule 23 (empty -> .)
    MENOR           reduce using rule 23 (empty -> .)
    COMPARA         reduce using rule 23 (empty -> .)
    LPAREN          reduce using rule 23 (empty -> .)
    ID              reduce using rule 23 (empty -> .)
    CTEINT          reduce using rule 23 (empty -> .)
    CTEDEC          reduce using rule 23 (empty -> .)
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    RPAREN          reduce using rule 23 (empty -> .)
    COMMA           reduce using rule 23 (empty -> .)
    SEMICOL         reduce using rule 23 (empty -> .)

    id_array                       shift and go to state 166
    empty                          shift and go to state 168

state 141

    (48) llamada -> ID LPAREN nombre_func llamadaparam RPAREN .

    ID              reduce using rule 48 (llamada -> ID LPAREN nombre_func llamadaparam RPAREN .)
    SI              reduce using rule 48 (llamada -> ID LPAREN nombre_func llamadaparam RPAREN .)
    MIENTRAS        reduce using rule 48 (llamada -> ID LPAREN nombre_func llamadaparam RPAREN .)
    PARA            reduce using rule 48 (llamada -> ID LPAREN nombre_func llamadaparam RPAREN .)
    IMPRIME         reduce using rule 48 (llamada -> ID LPAREN nombre_func llamadaparam RPAREN .)
    REGRESA         reduce using rule 48 (llamada -> ID LPAREN nombre_func llamadaparam RPAREN .)
    FUNCION         reduce using rule 48 (llamada -> ID LPAREN nombre_func llamadaparam RPAREN .)
    RLLAVE          reduce using rule 48 (llamada -> ID LPAREN nombre_func llamadaparam RPAREN .)


state 142

    (94) id_call -> COMMA . expresion set_value_param id_call
    (53) expresion -> . exp expresions
    (54) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LEE             shift and go to state 56
    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    expresion                      shift and go to state 169
    valor                          shift and go to state 49
    termino                        shift and go to state 51
    exp                            shift and go to state 48
    factor                         shift and go to state 53

state 143

    (83) call_or_array -> LPAREN nombre_func param_array id_call . RPAREN push_gosub

    RPAREN          shift and go to state 170


state 144

    (95) id_call -> empty .

    RPAREN          reduce using rule 95 (id_call -> empty .)


state 145

    (49) llamadaparam -> expresion set_value_param . llamadaparams
    (85) param_array -> expresion set_value_param .
    (51) llamadaparams -> . COMMA llamadaparam
    (52) llamadaparams -> . empty
    (23) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 23 (empty -> .)
    COMMA           shift and go to state 171
    RPAREN          reduce using rule 23 (empty -> .)

  ! COMMA           [ reduce using rule 85 (param_array -> expresion set_value_param .) ]
  ! RPAREN          [ reduce using rule 85 (param_array -> expresion set_value_param .) ]

    llamadaparams                  shift and go to state 172
    empty                          shift and go to state 173

state 146

    (45) asignacion -> ID call_or_array asignacion_push_id IGUAL asignacion_push_igual . expresion SEMICOL
    (53) expresion -> . exp expresions
    (54) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LEE             shift and go to state 56
    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    expresion                      shift and go to state 174
    valor                          shift and go to state 49
    termino                        shift and go to state 51
    exp                            shift and go to state 48
    factor                         shift and go to state 53

state 147

    (29) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id . LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE

    LPAREN          shift and go to state 175


state 148

    (107) escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .

    ID              reduce using rule 107 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    SI              reduce using rule 107 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    MIENTRAS        reduce using rule 107 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    PARA            reduce using rule 107 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    IMPRIME         reduce using rule 107 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    REGRESA         reduce using rule 107 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    FUNCION         reduce using rule 107 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    RLLAVE          reduce using rule 107 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)


state 149

    (110) esc -> STRING escs .

    RPAREN          reduce using rule 110 (esc -> STRING escs .)


state 150

    (111) escs -> COMMA . esc
    (109) esc -> . expresion escs
    (110) esc -> . STRING escs
    (53) expresion -> . exp expresions
    (54) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    STRING          shift and go to state 118
    LEE             shift and go to state 56
    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    expresion                      shift and go to state 119
    valor                          shift and go to state 49
    esc                            shift and go to state 176
    termino                        shift and go to state 51
    exp                            shift and go to state 48
    factor                         shift and go to state 53

state 151

    (112) escs -> empty .

    RPAREN          reduce using rule 112 (escs -> empty .)


state 152

    (109) esc -> expresion escs .

    RPAREN          reduce using rule 109 (esc -> expresion escs .)


state 153

    (7) dimension -> LBRAK CTEINT push_dim1 RBRAK . dimension2
    (10) dimension2 -> . LBRAK CTEINT push_dim2 RBRAK
    (11) dimension2 -> . empty
    (23) empty -> .

    LBRAK           shift and go to state 178
    COMMA           reduce using rule 23 (empty -> .)
    SEMICOL         reduce using rule 23 (empty -> .)

    empty                          shift and go to state 179
    dimension2                     shift and go to state 177

state 154

    (6) vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL . vars4
    (17) vars4 -> . vars2
    (18) vars4 -> . empty
    (6) vars2 -> . tipo ID dimension vars_push_id vars3 SEMICOL vars4
    (23) empty -> .
    (19) tipo -> . ENTERO
    (20) tipo -> . DECIMAL
    (21) tipo -> . FRASE
    (22) tipo -> . ESVERDAD

    FUNCION         reduce using rule 23 (empty -> .)
    ID              reduce using rule 23 (empty -> .)
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)
    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14

    tipo                           shift and go to state 11
    vars2                          shift and go to state 180
    vars4                          shift and go to state 181
    empty                          shift and go to state 182

state 155

    (14) vars3 -> COMMA ID . dimension vars3_push_id vars3
    (7) dimension -> . LBRAK CTEINT push_dim1 RBRAK dimension2
    (8) dimension -> . empty
    (23) empty -> .

    LBRAK           shift and go to state 66
    COMMA           reduce using rule 23 (empty -> .)
    SEMICOL         reduce using rule 23 (empty -> .)

    dimension                      shift and go to state 183
    empty                          shift and go to state 68

state 156

    (101) para -> PARA ID ENRANGO LPAREN param COMMA . param RPAREN LLLAVE estatuto RLLAVE
    (102) param -> . ID
    (103) param -> . CTEINT

    ID              shift and go to state 126
    CTEINT          shift and go to state 124

    param                          shift and go to state 184

state 157

    (96) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE . estatuto RLLAVE else
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

    mientras                       shift and go to state 16
    estatuto                       shift and go to state 185
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 158

    (64) exps -> PLUS exps_push_plus termino exps .

    MAYOR           reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    MENOR           reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    COMPARA         reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    LPAREN          reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    ID              reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    CTEINT          reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    CTEDEC          reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    SI              reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    MIENTRAS        reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    PARA            reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    IMPRIME         reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    REGRESA         reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    FUNCION         reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    RLLAVE          reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    RPAREN          reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    COMMA           reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)
    SEMICOL         reduce using rule 64 (exps -> PLUS exps_push_plus termino exps .)


state 159

    (65) exps -> MINUS exps_push_minus termino exps .

    MAYOR           reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    MENOR           reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    COMPARA         reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    LPAREN          reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    ID              reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    CTEINT          reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    CTEDEC          reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    SI              reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    MIENTRAS        reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    PARA            reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    IMPRIME         reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    REGRESA         reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    FUNCION         reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    RLLAVE          reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    RPAREN          reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    COMMA           reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)
    SEMICOL         reduce using rule 65 (exps -> MINUS exps_push_minus termino exps .)


state 160

    (75) factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .

    TIMES           reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    DIVIDE          reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    PLUS            reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MINUS           reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MAYOR           reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MENOR           reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    COMPARA         reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    LPAREN          reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    ID              reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    CTEINT          reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    CTEDEC          reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    SI              reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MIENTRAS        reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    PARA            reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    IMPRIME         reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    REGRESA         reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    FUNCION         reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    RLLAVE          reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    RPAREN          reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    COMMA           reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    SEMICOL         reduce using rule 75 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)


state 161

    (71) terminos -> DIVIDE terminos_push_divide factor terminos .

    PLUS            reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MINUS           reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MAYOR           reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MENOR           reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    COMPARA         reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    LPAREN          reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    ID              reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    CTEINT          reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    CTEDEC          reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    SI              reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MIENTRAS        reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    PARA            reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    IMPRIME         reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    REGRESA         reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    FUNCION         reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    RLLAVE          reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    RPAREN          reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    COMMA           reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    SEMICOL         reduce using rule 71 (terminos -> DIVIDE terminos_push_divide factor terminos .)


state 162

    (70) terminos -> TIMES terminos_push_times factor terminos .

    PLUS            reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    MINUS           reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    MAYOR           reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    MENOR           reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    COMPARA         reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    LPAREN          reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    ID              reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    CTEINT          reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    CTEDEC          reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    SI              reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    MIENTRAS        reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    PARA            reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    IMPRIME         reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    REGRESA         reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    FUNCION         reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    RLLAVE          reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    RPAREN          reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    COMMA           reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)
    SEMICOL         reduce using rule 70 (terminos -> TIMES terminos_push_times factor terminos .)


state 163

    (85) param_array -> expresion set_value_param .

    COMMA           reduce using rule 85 (param_array -> expresion set_value_param .)
    RPAREN          reduce using rule 85 (param_array -> expresion set_value_param .)


state 164

    (54) expresion -> LEE LPAREN STRING RPAREN SEMICOL .

    COMMA           reduce using rule 54 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    RPAREN          reduce using rule 54 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    ID              reduce using rule 54 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    SI              reduce using rule 54 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    MIENTRAS        reduce using rule 54 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    PARA            reduce using rule 54 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    IMPRIME         reduce using rule 54 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    REGRESA         reduce using rule 54 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    FUNCION         reduce using rule 54 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    RLLAVE          reduce using rule 54 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    SEMICOL         reduce using rule 54 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)


state 165

    (104) mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 . LLLAVE estatuto RLLAVE

    LLLAVE          shift and go to state 186


state 166

    (82) call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .

    IGUAL           reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    TIMES           reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    DIVIDE          reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    PLUS            reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    MINUS           reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    MAYOR           reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    MENOR           reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    COMPARA         reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    LPAREN          reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    ID              reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    CTEINT          reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    CTEDEC          reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    SI              reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    MIENTRAS        reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    PARA            reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    IMPRIME         reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    REGRESA         reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    FUNCION         reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    RLLAVE          reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    RPAREN          reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    COMMA           reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)
    SEMICOL         reduce using rule 82 (call_or_array -> LBRAK CTEINT push_array_dim1 RBRAK id_array .)


state 167

    (90) id_array -> LBRAK . CTEINT push_array_dim2 RBRAK

    CTEINT          shift and go to state 187


state 168

    (91) id_array -> empty .

    IGUAL           reduce using rule 91 (id_array -> empty .)
    TIMES           reduce using rule 91 (id_array -> empty .)
    DIVIDE          reduce using rule 91 (id_array -> empty .)
    PLUS            reduce using rule 91 (id_array -> empty .)
    MINUS           reduce using rule 91 (id_array -> empty .)
    MAYOR           reduce using rule 91 (id_array -> empty .)
    MENOR           reduce using rule 91 (id_array -> empty .)
    COMPARA         reduce using rule 91 (id_array -> empty .)
    LPAREN          reduce using rule 91 (id_array -> empty .)
    ID              reduce using rule 91 (id_array -> empty .)
    CTEINT          reduce using rule 91 (id_array -> empty .)
    CTEDEC          reduce using rule 91 (id_array -> empty .)
    SI              reduce using rule 91 (id_array -> empty .)
    MIENTRAS        reduce using rule 91 (id_array -> empty .)
    PARA            reduce using rule 91 (id_array -> empty .)
    IMPRIME         reduce using rule 91 (id_array -> empty .)
    REGRESA         reduce using rule 91 (id_array -> empty .)
    FUNCION         reduce using rule 91 (id_array -> empty .)
    RLLAVE          reduce using rule 91 (id_array -> empty .)
    RPAREN          reduce using rule 91 (id_array -> empty .)
    COMMA           reduce using rule 91 (id_array -> empty .)
    SEMICOL         reduce using rule 91 (id_array -> empty .)


state 169

    (94) id_call -> COMMA expresion . set_value_param id_call
    (89) set_value_param -> .

    COMMA           reduce using rule 89 (set_value_param -> .)
    RPAREN          reduce using rule 89 (set_value_param -> .)

    set_value_param                shift and go to state 188

state 170

    (83) call_or_array -> LPAREN nombre_func param_array id_call RPAREN . push_gosub
    (88) push_gosub -> .

    IGUAL           reduce using rule 88 (push_gosub -> .)
    TIMES           reduce using rule 88 (push_gosub -> .)
    DIVIDE          reduce using rule 88 (push_gosub -> .)
    PLUS            reduce using rule 88 (push_gosub -> .)
    MINUS           reduce using rule 88 (push_gosub -> .)
    MAYOR           reduce using rule 88 (push_gosub -> .)
    MENOR           reduce using rule 88 (push_gosub -> .)
    COMPARA         reduce using rule 88 (push_gosub -> .)
    LPAREN          reduce using rule 88 (push_gosub -> .)
    ID              reduce using rule 88 (push_gosub -> .)
    CTEINT          reduce using rule 88 (push_gosub -> .)
    CTEDEC          reduce using rule 88 (push_gosub -> .)
    SI              reduce using rule 88 (push_gosub -> .)
    MIENTRAS        reduce using rule 88 (push_gosub -> .)
    PARA            reduce using rule 88 (push_gosub -> .)
    IMPRIME         reduce using rule 88 (push_gosub -> .)
    REGRESA         reduce using rule 88 (push_gosub -> .)
    FUNCION         reduce using rule 88 (push_gosub -> .)
    RLLAVE          reduce using rule 88 (push_gosub -> .)
    RPAREN          reduce using rule 88 (push_gosub -> .)
    COMMA           reduce using rule 88 (push_gosub -> .)
    SEMICOL         reduce using rule 88 (push_gosub -> .)

    push_gosub                     shift and go to state 189

state 171

    (51) llamadaparams -> COMMA . llamadaparam
    (49) llamadaparam -> . expresion set_value_param llamadaparams
    (50) llamadaparam -> . empty
    (53) expresion -> . exp expresions
    (54) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (23) empty -> .
    (63) exp -> . termino exps
    (69) termino -> . factor terminos
    (75) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (76) factor -> . valor
    (79) valor -> . ID call_or_array
    (80) valor -> . CTEINT
    (81) valor -> . CTEDEC

    LEE             shift and go to state 56
    RPAREN          reduce using rule 23 (empty -> .)
    LPAREN          shift and go to state 52
    ID              shift and go to state 55
    CTEINT          shift and go to state 50
    CTEDEC          shift and go to state 54

    expresion                      shift and go to state 192
    valor                          shift and go to state 49
    llamadaparam                   shift and go to state 190
    termino                        shift and go to state 51
    exp                            shift and go to state 48
    factor                         shift and go to state 53
    empty                          shift and go to state 191

state 172

    (49) llamadaparam -> expresion set_value_param llamadaparams .

    RPAREN          reduce using rule 49 (llamadaparam -> expresion set_value_param llamadaparams .)


state 173

    (52) llamadaparams -> empty .

    RPAREN          reduce using rule 52 (llamadaparams -> empty .)


state 174

    (45) asignacion -> ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion . SEMICOL

    SEMICOL         shift and go to state 193


state 175

    (29) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN . funparam RPAREN LLLAVE vars bloque RLLAVE
    (33) funparam -> . tipo ID funparam_push_id funparams
    (34) funparam -> . empty
    (19) tipo -> . ENTERO
    (20) tipo -> . DECIMAL
    (21) tipo -> . FRASE
    (22) tipo -> . ESVERDAD
    (23) empty -> .

    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14
    RPAREN          reduce using rule 23 (empty -> .)

    tipo                           shift and go to state 194
    funparam                       shift and go to state 195
    empty                          shift and go to state 196

state 176

    (111) escs -> COMMA esc .

    RPAREN          reduce using rule 111 (escs -> COMMA esc .)


state 177

    (7) dimension -> LBRAK CTEINT push_dim1 RBRAK dimension2 .

    COMMA           reduce using rule 7 (dimension -> LBRAK CTEINT push_dim1 RBRAK dimension2 .)
    SEMICOL         reduce using rule 7 (dimension -> LBRAK CTEINT push_dim1 RBRAK dimension2 .)


state 178

    (10) dimension2 -> LBRAK . CTEINT push_dim2 RBRAK

    CTEINT          shift and go to state 197


state 179

    (11) dimension2 -> empty .

    COMMA           reduce using rule 11 (dimension2 -> empty .)
    SEMICOL         reduce using rule 11 (dimension2 -> empty .)


state 180

    (17) vars4 -> vars2 .

    FUNCION         reduce using rule 17 (vars4 -> vars2 .)
    ID              reduce using rule 17 (vars4 -> vars2 .)
    SI              reduce using rule 17 (vars4 -> vars2 .)
    MIENTRAS        reduce using rule 17 (vars4 -> vars2 .)
    PARA            reduce using rule 17 (vars4 -> vars2 .)
    IMPRIME         reduce using rule 17 (vars4 -> vars2 .)
    REGRESA         reduce using rule 17 (vars4 -> vars2 .)
    RLLAVE          reduce using rule 17 (vars4 -> vars2 .)


state 181

    (6) vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .

    FUNCION         reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    ID              reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    SI              reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    MIENTRAS        reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    PARA            reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    IMPRIME         reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    REGRESA         reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    RLLAVE          reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)


state 182

    (18) vars4 -> empty .

    FUNCION         reduce using rule 18 (vars4 -> empty .)
    ID              reduce using rule 18 (vars4 -> empty .)
    SI              reduce using rule 18 (vars4 -> empty .)
    MIENTRAS        reduce using rule 18 (vars4 -> empty .)
    PARA            reduce using rule 18 (vars4 -> empty .)
    IMPRIME         reduce using rule 18 (vars4 -> empty .)
    REGRESA         reduce using rule 18 (vars4 -> empty .)
    RLLAVE          reduce using rule 18 (vars4 -> empty .)


state 183

    (14) vars3 -> COMMA ID dimension . vars3_push_id vars3
    (16) vars3_push_id -> .

    COMMA           reduce using rule 16 (vars3_push_id -> .)
    SEMICOL         reduce using rule 16 (vars3_push_id -> .)

    vars3_push_id                  shift and go to state 198

state 184

    (101) para -> PARA ID ENRANGO LPAREN param COMMA param . RPAREN LLLAVE estatuto RLLAVE

    RPAREN          shift and go to state 199


state 185

    (96) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto . RLLAVE else

    RLLAVE          shift and go to state 200


state 186

    (104) mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE . estatuto RLLAVE
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

    mientras                       shift and go to state 16
    estatuto                       shift and go to state 201
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 187

    (90) id_array -> LBRAK CTEINT . push_array_dim2 RBRAK
    (93) push_array_dim2 -> .

    RBRAK           reduce using rule 93 (push_array_dim2 -> .)

    push_array_dim2                shift and go to state 202

state 188

    (94) id_call -> COMMA expresion set_value_param . id_call
    (94) id_call -> . COMMA expresion set_value_param id_call
    (95) id_call -> . empty
    (23) empty -> .

    COMMA           shift and go to state 142
    RPAREN          reduce using rule 23 (empty -> .)

    id_call                        shift and go to state 203
    empty                          shift and go to state 144

state 189

    (83) call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .

    IGUAL           reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    TIMES           reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    DIVIDE          reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    PLUS            reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    MINUS           reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    MAYOR           reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    MENOR           reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    COMPARA         reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    LPAREN          reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    ID              reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    CTEINT          reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    CTEDEC          reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    SI              reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    MIENTRAS        reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    PARA            reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    IMPRIME         reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    REGRESA         reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    FUNCION         reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    RLLAVE          reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    RPAREN          reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    COMMA           reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)
    SEMICOL         reduce using rule 83 (call_or_array -> LPAREN nombre_func param_array id_call RPAREN push_gosub .)


state 190

    (51) llamadaparams -> COMMA llamadaparam .

    RPAREN          reduce using rule 51 (llamadaparams -> COMMA llamadaparam .)


state 191

    (50) llamadaparam -> empty .

    RPAREN          reduce using rule 50 (llamadaparam -> empty .)


state 192

    (49) llamadaparam -> expresion . set_value_param llamadaparams
    (89) set_value_param -> .

    COMMA           reduce using rule 89 (set_value_param -> .)
    RPAREN          reduce using rule 89 (set_value_param -> .)

    set_value_param                shift and go to state 204

state 193

    (45) asignacion -> ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL .

    ID              reduce using rule 45 (asignacion -> ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL .)
    SI              reduce using rule 45 (asignacion -> ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL .)
    MIENTRAS        reduce using rule 45 (asignacion -> ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL .)
    PARA            reduce using rule 45 (asignacion -> ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL .)
    IMPRIME         reduce using rule 45 (asignacion -> ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL .)
    REGRESA         reduce using rule 45 (asignacion -> ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL .)
    RLLAVE          reduce using rule 45 (asignacion -> ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL .)
    FUNCION         reduce using rule 45 (asignacion -> ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL .)


state 194

    (33) funparam -> tipo . ID funparam_push_id funparams

    ID              shift and go to state 205


state 195

    (29) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam . RPAREN LLLAVE vars bloque RLLAVE

    RPAREN          shift and go to state 206


state 196

    (34) funparam -> empty .

    RPAREN          reduce using rule 34 (funparam -> empty .)


state 197

    (10) dimension2 -> LBRAK CTEINT . push_dim2 RBRAK
    (12) push_dim2 -> .

    RBRAK           reduce using rule 12 (push_dim2 -> .)

    push_dim2                      shift and go to state 207

state 198

    (14) vars3 -> COMMA ID dimension vars3_push_id . vars3
    (14) vars3 -> . COMMA ID dimension vars3_push_id vars3
    (15) vars3 -> . empty
    (23) empty -> .

    COMMA           shift and go to state 122
    SEMICOL         reduce using rule 23 (empty -> .)

    vars3                          shift and go to state 208
    empty                          shift and go to state 123

state 199

    (101) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN . LLLAVE estatuto RLLAVE

    LLLAVE          shift and go to state 209


state 200

    (96) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE . else
    (98) else -> . SINO else_2 LLLAVE estatuto RLLAVE
    (99) else -> . empty
    (23) empty -> .

    SINO            shift and go to state 211
    ID              reduce using rule 23 (empty -> .)
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    FUNCION         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)

    else                           shift and go to state 210
    empty                          shift and go to state 212

state 201

    (104) mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto . RLLAVE

    RLLAVE          shift and go to state 213


state 202

    (90) id_array -> LBRAK CTEINT push_array_dim2 . RBRAK

    RBRAK           shift and go to state 214


state 203

    (94) id_call -> COMMA expresion set_value_param id_call .

    RPAREN          reduce using rule 94 (id_call -> COMMA expresion set_value_param id_call .)


state 204

    (49) llamadaparam -> expresion set_value_param . llamadaparams
    (51) llamadaparams -> . COMMA llamadaparam
    (52) llamadaparams -> . empty
    (23) empty -> .

    COMMA           shift and go to state 171
    RPAREN          reduce using rule 23 (empty -> .)

    llamadaparams                  shift and go to state 172
    empty                          shift and go to state 173

state 205

    (33) funparam -> tipo ID . funparam_push_id funparams
    (35) funparam_push_id -> .

    COMMA           reduce using rule 35 (funparam_push_id -> .)
    RPAREN          reduce using rule 35 (funparam_push_id -> .)

    funparam_push_id               shift and go to state 215

state 206

    (29) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN . LLLAVE vars bloque RLLAVE

    LLLAVE          shift and go to state 216


state 207

    (10) dimension2 -> LBRAK CTEINT push_dim2 . RBRAK

    RBRAK           shift and go to state 217


state 208

    (14) vars3 -> COMMA ID dimension vars3_push_id vars3 .

    SEMICOL         reduce using rule 14 (vars3 -> COMMA ID dimension vars3_push_id vars3 .)


state 209

    (101) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE . estatuto RLLAVE
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

    mientras                       shift and go to state 16
    estatuto                       shift and go to state 218
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 210

    (96) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .

    ID              reduce using rule 96 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    SI              reduce using rule 96 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    MIENTRAS        reduce using rule 96 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    PARA            reduce using rule 96 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    IMPRIME         reduce using rule 96 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    REGRESA         reduce using rule 96 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    FUNCION         reduce using rule 96 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    RLLAVE          reduce using rule 96 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)


state 211

    (98) else -> SINO . else_2 LLLAVE estatuto RLLAVE
    (100) else_2 -> .

    LLLAVE          reduce using rule 100 (else_2 -> .)

    else_2                         shift and go to state 219

state 212

    (99) else -> empty .

    ID              reduce using rule 99 (else -> empty .)
    SI              reduce using rule 99 (else -> empty .)
    MIENTRAS        reduce using rule 99 (else -> empty .)
    PARA            reduce using rule 99 (else -> empty .)
    IMPRIME         reduce using rule 99 (else -> empty .)
    REGRESA         reduce using rule 99 (else -> empty .)
    FUNCION         reduce using rule 99 (else -> empty .)
    RLLAVE          reduce using rule 99 (else -> empty .)


state 213

    (104) mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE .

    ID              reduce using rule 104 (mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE .)
    SI              reduce using rule 104 (mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE .)
    MIENTRAS        reduce using rule 104 (mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE .)
    PARA            reduce using rule 104 (mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE .)
    IMPRIME         reduce using rule 104 (mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE .)
    REGRESA         reduce using rule 104 (mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE .)
    FUNCION         reduce using rule 104 (mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE .)
    RLLAVE          reduce using rule 104 (mientras -> MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE .)


state 214

    (90) id_array -> LBRAK CTEINT push_array_dim2 RBRAK .

    IGUAL           reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    TIMES           reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    DIVIDE          reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    PLUS            reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    MINUS           reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    MAYOR           reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    MENOR           reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    COMPARA         reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    LPAREN          reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    ID              reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    CTEINT          reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    CTEDEC          reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    SI              reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    MIENTRAS        reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    PARA            reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    IMPRIME         reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    REGRESA         reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    FUNCION         reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    RLLAVE          reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    RPAREN          reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    COMMA           reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)
    SEMICOL         reduce using rule 90 (id_array -> LBRAK CTEINT push_array_dim2 RBRAK .)


state 215

    (33) funparam -> tipo ID funparam_push_id . funparams
    (36) funparams -> . COMMA funparam
    (37) funparams -> . empty
    (23) empty -> .

    COMMA           shift and go to state 220
    RPAREN          reduce using rule 23 (empty -> .)

    funparams                      shift and go to state 221
    empty                          shift and go to state 222

state 216

    (29) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE . vars bloque RLLAVE
    (4) vars -> . VAR vars2
    (5) vars -> . empty
    (23) empty -> .

    VAR             shift and go to state 7
    ID              reduce using rule 23 (empty -> .)
    SI              reduce using rule 23 (empty -> .)
    MIENTRAS        reduce using rule 23 (empty -> .)
    PARA            reduce using rule 23 (empty -> .)
    IMPRIME         reduce using rule 23 (empty -> .)
    REGRESA         reduce using rule 23 (empty -> .)
    RLLAVE          reduce using rule 23 (empty -> .)

    vars                           shift and go to state 223
    empty                          shift and go to state 8

state 217

    (10) dimension2 -> LBRAK CTEINT push_dim2 RBRAK .

    COMMA           reduce using rule 10 (dimension2 -> LBRAK CTEINT push_dim2 RBRAK .)
    SEMICOL         reduce using rule 10 (dimension2 -> LBRAK CTEINT push_dim2 RBRAK .)


state 218

    (101) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto . RLLAVE

    RLLAVE          shift and go to state 224


state 219

    (98) else -> SINO else_2 . LLLAVE estatuto RLLAVE

    LLLAVE          shift and go to state 225


state 220

    (36) funparams -> COMMA . funparam
    (33) funparam -> . tipo ID funparam_push_id funparams
    (34) funparam -> . empty
    (19) tipo -> . ENTERO
    (20) tipo -> . DECIMAL
    (21) tipo -> . FRASE
    (22) tipo -> . ESVERDAD
    (23) empty -> .

    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14
    RPAREN          reduce using rule 23 (empty -> .)

    funparam                       shift and go to state 226
    empty                          shift and go to state 196
    tipo                           shift and go to state 194

state 221

    (33) funparam -> tipo ID funparam_push_id funparams .

    RPAREN          reduce using rule 33 (funparam -> tipo ID funparam_push_id funparams .)


state 222

    (37) funparams -> empty .

    RPAREN          reduce using rule 37 (funparams -> empty .)


state 223

    (29) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars . bloque RLLAVE
    (27) bloque -> . estatuto
    (28) bloque -> . empty
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (23) empty -> .
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

    RLLAVE          reduce using rule 23 (empty -> .)
    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

    mientras                       shift and go to state 16
    bloque                         shift and go to state 227
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 37
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 224

    (101) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .

    ID              reduce using rule 101 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    SI              reduce using rule 101 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    MIENTRAS        reduce using rule 101 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    PARA            reduce using rule 101 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    IMPRIME         reduce using rule 101 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    REGRESA         reduce using rule 101 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    RLLAVE          reduce using rule 101 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    FUNCION         reduce using rule 101 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)


state 225

    (98) else -> SINO else_2 LLLAVE . estatuto RLLAVE
    (38) estatuto -> . asignacion bloque
    (39) estatuto -> . condicion bloque
    (40) estatuto -> . mientras bloque
    (41) estatuto -> . para bloque
    (42) estatuto -> . escritura bloque
    (43) estatuto -> . llamada bloque
    (44) estatuto -> . return bloque
    (45) asignacion -> . ID call_or_array asignacion_push_id IGUAL asignacion_push_igual expresion SEMICOL
    (96) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (104) mientras -> . MIENTRAS mientras_haz_push LPAREN expresion RPAREN mientras_haz_push2 LLLAVE estatuto RLLAVE
    (101) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (107) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (48) llamada -> . ID LPAREN nombre_func llamadaparam RPAREN
    (30) return -> . REGRESA expresion

    ID              shift and go to state 30
    SI              shift and go to state 20
    MIENTRAS        shift and go to state 29
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 32
    REGRESA         shift and go to state 28

    mientras                       shift and go to state 16
    estatuto                       shift and go to state 228
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    return                         shift and go to state 26
    para                           shift and go to state 27
    asignacion                     shift and go to state 33
    escritura                      shift and go to state 34

state 226

    (36) funparams -> COMMA funparam .

    RPAREN          reduce using rule 36 (funparams -> COMMA funparam .)


state 227

    (29) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque . RLLAVE

    RLLAVE          shift and go to state 229


state 228

    (98) else -> SINO else_2 LLLAVE estatuto . RLLAVE

    RLLAVE          shift and go to state 230


state 229

    (29) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .

    FUNCION         reduce using rule 29 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    ID              reduce using rule 29 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    SI              reduce using rule 29 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    MIENTRAS        reduce using rule 29 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    PARA            reduce using rule 29 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    IMPRIME         reduce using rule 29 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    REGRESA         reduce using rule 29 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    RLLAVE          reduce using rule 29 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)


state 230

    (98) else -> SINO else_2 LLLAVE estatuto RLLAVE .

    ID              reduce using rule 98 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    SI              reduce using rule 98 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    MIENTRAS        reduce using rule 98 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    PARA            reduce using rule 98 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    IMPRIME         reduce using rule 98 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    REGRESA         reduce using rule 98 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    FUNCION         reduce using rule 98 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    RLLAVE          reduce using rule 98 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCION in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for SI in state 9 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 9 resolved as shift
WARNING: shift/reduce conflict for PARA in state 9 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 9 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SI in state 16 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 16 resolved as shift
WARNING: shift/reduce conflict for PARA in state 16 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 16 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 16 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 17 resolved as shift
WARNING: shift/reduce conflict for ID in state 17 resolved as shift
WARNING: shift/reduce conflict for SI in state 17 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 17 resolved as shift
WARNING: shift/reduce conflict for PARA in state 17 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 17 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 17 resolved as shift
WARNING: shift/reduce conflict for ID in state 21 resolved as shift
WARNING: shift/reduce conflict for SI in state 21 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 21 resolved as shift
WARNING: shift/reduce conflict for PARA in state 21 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 21 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 21 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for SI in state 22 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 22 resolved as shift
WARNING: shift/reduce conflict for PARA in state 22 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 22 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 22 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 24 resolved as shift
WARNING: shift/reduce conflict for ID in state 24 resolved as shift
WARNING: shift/reduce conflict for SI in state 24 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 24 resolved as shift
WARNING: shift/reduce conflict for PARA in state 24 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 24 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 24 resolved as shift
WARNING: shift/reduce conflict for ID in state 26 resolved as shift
WARNING: shift/reduce conflict for SI in state 26 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 26 resolved as shift
WARNING: shift/reduce conflict for PARA in state 26 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 26 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 26 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for SI in state 27 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 27 resolved as shift
WARNING: shift/reduce conflict for PARA in state 27 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 27 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 27 resolved as shift
WARNING: shift/reduce conflict for ID in state 33 resolved as shift
WARNING: shift/reduce conflict for SI in state 33 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 33 resolved as shift
WARNING: shift/reduce conflict for PARA in state 33 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 33 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 33 resolved as shift
WARNING: shift/reduce conflict for ID in state 34 resolved as shift
WARNING: shift/reduce conflict for SI in state 34 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 34 resolved as shift
WARNING: shift/reduce conflict for PARA in state 34 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 34 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 34 resolved as shift
WARNING: shift/reduce conflict for ID in state 48 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 55 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 145 resolved as shift
WARNING: reduce/reduce conflict in state 23 resolved using rule (body -> empty)
WARNING: rejected rule (bloque -> empty) in state 23
WARNING: reduce/reduce conflict in state 112 resolved using rule (llamadaparam -> empty)
WARNING: rejected rule (param_array -> empty) in state 112
WARNING: reduce/reduce conflict in state 145 resolved using rule (empty -> <empty>)
WARNING: rejected rule (param_array -> expresion set_value_param) in state 145
