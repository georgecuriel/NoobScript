Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    RBRAK
    CLASE
    COLON
    ESVERDAD
    VGLOBAL
    LBRAK

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID body
Rule 2     empty -> <empty>
Rule 3     body -> funcion body
Rule 4     body -> bloque body
Rule 5     body -> empty
Rule 6     bloque -> estatuto
Rule 7     bloque -> empty
Rule 8     funcion -> FUNCION ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE
Rule 9     funparam -> tipo ID funparams
Rule 10    funparam -> empty
Rule 11    funparams -> COMMA funparam
Rule 12    funparams -> empty
Rule 13    tipo -> ENTERO
Rule 14    tipo -> DECIMAL
Rule 15    tipo -> FRASE
Rule 16    estatuto -> asignacion bloque
Rule 17    estatuto -> condicion bloque
Rule 18    estatuto -> mientras bloque
Rule 19    estatuto -> para bloque
Rule 20    estatuto -> escritura bloque
Rule 21    estatuto -> llamada bloque
Rule 22    asignacion -> ID IGUAL expresion
Rule 23    llamada -> ID LPAREN llamadaparam RPAREN
Rule 24    llamadaparam -> valor llamadaparams
Rule 25    llamadaparam -> empty
Rule 26    llamadaparams -> COMMA llamadaparam
Rule 27    llamadaparams -> empty
Rule 28    expresion -> exp expresions
Rule 29    expresion -> LEE LPAREN STRING RPAREN SEMICOL
Rule 30    expresions -> MAYOR exp
Rule 31    expresions -> MENOR exp
Rule 32    expresions -> COMPARA exp
Rule 33    expresions -> empty
Rule 34    exp -> termino exps
Rule 35    exps -> PLUS termino exps
Rule 36    exps -> MINUS termino exps
Rule 37    exps -> empty
Rule 38    termino -> factor terminos
Rule 39    terminos -> TIMES factor terminos
Rule 40    terminos -> DIVIDE factor terminos
Rule 41    terminos -> empty
Rule 42    factor -> LPAREN expresion RPAREN
Rule 43    factor -> valor
Rule 44    valor -> ID
Rule 45    valor -> CTEINT
Rule 46    valor -> CTEDEC
Rule 47    condicion -> SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
Rule 48    else -> SINO LLLAVE estatuto RLLAVE
Rule 49    else -> empty
Rule 50    para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
Rule 51    param -> ID
Rule 52    param -> CTEINT
Rule 53    mientras -> MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
Rule 54    escritura -> IMPRIME LPAREN esc RPAREN
Rule 55    esc -> expresion escs
Rule 56    esc -> STRING escs
Rule 57    escs -> COMMA esc
Rule 58    escs -> empty

Terminals, with rules where they appear

CLASE                : 
COLON                : 
COMMA                : 11 26 50 57
COMPARA              : 32
CTEDEC               : 46
CTEINT               : 45 52
DECIMAL              : 14
DIVIDE               : 40
ENRANGO              : 50
ENTERO               : 13
ESVERDAD             : 
FRASE                : 15
FUNCION              : 8
ID                   : 1 8 9 22 23 44 50 51
IGUAL                : 22
IMPRIME              : 54
LBRAK                : 
LEE                  : 29
LLLAVE               : 8 47 48 50 53
LPAREN               : 8 23 29 42 47 50 53 54
MAYOR                : 30
MENOR                : 31
MIENTRAS             : 53
MINUS                : 36
PARA                 : 50
PLUS                 : 35
PROGRAMA             : 1
RBRAK                : 
RLLAVE               : 8 47 48 50 53
RPAREN               : 8 23 29 42 47 50 53 54
SEMICOL              : 29
SI                   : 47
SINO                 : 48
STRING               : 29 56
TIMES                : 39
VGLOBAL              : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 16
bloque               : 4 8 16 17 18 19 20 21
body                 : 1 3 4
condicion            : 17
else                 : 47
empty                : 5 7 10 12 25 27 33 37 41 49 58
esc                  : 54 57
escritura            : 20
escs                 : 55 56
estatuto             : 6 47 48 50 53
exp                  : 28 30 31 32
expresion            : 22 42 47 53 55
expresions           : 28
exps                 : 34 35 36
factor               : 38 39 40
funcion              : 3
funparam             : 8 11
funparams            : 9
llamada              : 21
llamadaparam         : 23 26
llamadaparams        : 24
mientras             : 18
para                 : 19
param                : 50 50
programa             : 0
termino              : 34 35 36
terminos             : 38 39 40
tipo                 : 9
valor                : 24 43

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID body

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID body

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . body
    (3) body -> . funcion body
    (4) body -> . bloque body
    (5) body -> . empty
    (8) funcion -> . FUNCION ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE
    (6) bloque -> . estatuto
    (7) bloque -> . empty
    (2) empty -> .
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         shift and go to state 16
    $end            reduce using rule 2 (empty -> .)
    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

  ! FUNCION         [ reduce using rule 2 (empty -> .) ]
  ! ID              [ reduce using rule 2 (empty -> .) ]
  ! SI              [ reduce using rule 2 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (empty -> .) ]
  ! PARA            [ reduce using rule 2 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 2 (empty -> .) ]

    body                           shift and go to state 12
    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 7
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    bloque                         shift and go to state 6
    escritura                      shift and go to state 20
    empty                          shift and go to state 10
    funcion                        shift and go to state 11

state 4

    (50) para -> PARA . ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    ID              shift and go to state 21


state 5

    (18) estatuto -> mientras . bloque
    (6) bloque -> . estatuto
    (7) bloque -> . empty
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (2) empty -> .
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

  ! ID              [ reduce using rule 2 (empty -> .) ]
  ! SI              [ reduce using rule 2 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (empty -> .) ]
  ! PARA            [ reduce using rule 2 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 2 (empty -> .) ]

    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 7
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    bloque                         shift and go to state 22
    empty                          shift and go to state 23
    escritura                      shift and go to state 20

state 6

    (4) body -> bloque . body
    (3) body -> . funcion body
    (4) body -> . bloque body
    (5) body -> . empty
    (8) funcion -> . FUNCION ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE
    (6) bloque -> . estatuto
    (7) bloque -> . empty
    (2) empty -> .
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         shift and go to state 16
    $end            reduce using rule 2 (empty -> .)
    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

  ! FUNCION         [ reduce using rule 2 (empty -> .) ]
  ! ID              [ reduce using rule 2 (empty -> .) ]
  ! SI              [ reduce using rule 2 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (empty -> .) ]
  ! PARA            [ reduce using rule 2 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 2 (empty -> .) ]

    body                           shift and go to state 24
    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 7
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    bloque                         shift and go to state 6
    escritura                      shift and go to state 20
    empty                          shift and go to state 10
    funcion                        shift and go to state 11

state 7

    (6) bloque -> estatuto .

    FUNCION         reduce using rule 6 (bloque -> estatuto .)
    ID              reduce using rule 6 (bloque -> estatuto .)
    SI              reduce using rule 6 (bloque -> estatuto .)
    MIENTRAS        reduce using rule 6 (bloque -> estatuto .)
    PARA            reduce using rule 6 (bloque -> estatuto .)
    IMPRIME         reduce using rule 6 (bloque -> estatuto .)
    $end            reduce using rule 6 (bloque -> estatuto .)
    RLLAVE          reduce using rule 6 (bloque -> estatuto .)


state 8

    (21) estatuto -> llamada . bloque
    (6) bloque -> . estatuto
    (7) bloque -> . empty
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (2) empty -> .
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

  ! ID              [ reduce using rule 2 (empty -> .) ]
  ! SI              [ reduce using rule 2 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (empty -> .) ]
  ! PARA            [ reduce using rule 2 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 2 (empty -> .) ]

    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    mientras                       shift and go to state 5
    estatuto                       shift and go to state 7
    llamada                        shift and go to state 8
    condicion                      shift and go to state 9
    bloque                         shift and go to state 25
    empty                          shift and go to state 23
    escritura                      shift and go to state 20

state 9

    (17) estatuto -> condicion . bloque
    (6) bloque -> . estatuto
    (7) bloque -> . empty
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (2) empty -> .
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

  ! ID              [ reduce using rule 2 (empty -> .) ]
  ! SI              [ reduce using rule 2 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (empty -> .) ]
  ! PARA            [ reduce using rule 2 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 2 (empty -> .) ]

    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 7
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    bloque                         shift and go to state 26
    empty                          shift and go to state 23
    escritura                      shift and go to state 20

state 10

    (5) body -> empty .
    (7) bloque -> empty .

  ! reduce/reduce conflict for $end resolved using rule 5 (body -> empty .)
    $end            reduce using rule 5 (body -> empty .)
    FUNCION         reduce using rule 7 (bloque -> empty .)
    ID              reduce using rule 7 (bloque -> empty .)
    SI              reduce using rule 7 (bloque -> empty .)
    MIENTRAS        reduce using rule 7 (bloque -> empty .)
    PARA            reduce using rule 7 (bloque -> empty .)
    IMPRIME         reduce using rule 7 (bloque -> empty .)

  ! $end            [ reduce using rule 7 (bloque -> empty .) ]


state 11

    (3) body -> funcion . body
    (3) body -> . funcion body
    (4) body -> . bloque body
    (5) body -> . empty
    (8) funcion -> . FUNCION ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE
    (6) bloque -> . estatuto
    (7) bloque -> . empty
    (2) empty -> .
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         shift and go to state 16
    $end            reduce using rule 2 (empty -> .)
    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

  ! FUNCION         [ reduce using rule 2 (empty -> .) ]
  ! ID              [ reduce using rule 2 (empty -> .) ]
  ! SI              [ reduce using rule 2 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (empty -> .) ]
  ! PARA            [ reduce using rule 2 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 2 (empty -> .) ]

    body                           shift and go to state 27
    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 7
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    bloque                         shift and go to state 6
    escritura                      shift and go to state 20
    empty                          shift and go to state 10
    funcion                        shift and go to state 11

state 12

    (1) programa -> PROGRAMA ID body .

    $end            reduce using rule 1 (programa -> PROGRAMA ID body .)


state 13

    (19) estatuto -> para . bloque
    (6) bloque -> . estatuto
    (7) bloque -> . empty
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (2) empty -> .
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

  ! ID              [ reduce using rule 2 (empty -> .) ]
  ! SI              [ reduce using rule 2 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (empty -> .) ]
  ! PARA            [ reduce using rule 2 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 2 (empty -> .) ]

    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 7
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    bloque                         shift and go to state 28
    empty                          shift and go to state 23
    escritura                      shift and go to state 20

state 14

    (53) mientras -> MIENTRAS . LPAREN expresion RPAREN LLLAVE estatuto RLLAVE

    LPAREN          shift and go to state 29


state 15

    (22) asignacion -> ID . IGUAL expresion
    (23) llamada -> ID . LPAREN llamadaparam RPAREN

    IGUAL           shift and go to state 30
    LPAREN          shift and go to state 31


state 16

    (8) funcion -> FUNCION . ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE

    ID              shift and go to state 32


state 17

    (54) escritura -> IMPRIME . LPAREN esc RPAREN

    LPAREN          shift and go to state 33


state 18

    (16) estatuto -> asignacion . bloque
    (6) bloque -> . estatuto
    (7) bloque -> . empty
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (2) empty -> .
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

  ! ID              [ reduce using rule 2 (empty -> .) ]
  ! SI              [ reduce using rule 2 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (empty -> .) ]
  ! PARA            [ reduce using rule 2 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 2 (empty -> .) ]

    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 7
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    bloque                         shift and go to state 34
    empty                          shift and go to state 23
    escritura                      shift and go to state 20

state 19

    (47) condicion -> SI . LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else

    LPAREN          shift and go to state 35


state 20

    (20) estatuto -> escritura . bloque
    (6) bloque -> . estatuto
    (7) bloque -> . empty
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (2) empty -> .
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

  ! ID              [ reduce using rule 2 (empty -> .) ]
  ! SI              [ reduce using rule 2 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (empty -> .) ]
  ! PARA            [ reduce using rule 2 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 2 (empty -> .) ]

    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 7
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    bloque                         shift and go to state 36
    empty                          shift and go to state 23
    escritura                      shift and go to state 20

state 21

    (50) para -> PARA ID . ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    ENRANGO         shift and go to state 37


state 22

    (18) estatuto -> mientras bloque .

    FUNCION         reduce using rule 18 (estatuto -> mientras bloque .)
    ID              reduce using rule 18 (estatuto -> mientras bloque .)
    SI              reduce using rule 18 (estatuto -> mientras bloque .)
    MIENTRAS        reduce using rule 18 (estatuto -> mientras bloque .)
    PARA            reduce using rule 18 (estatuto -> mientras bloque .)
    IMPRIME         reduce using rule 18 (estatuto -> mientras bloque .)
    $end            reduce using rule 18 (estatuto -> mientras bloque .)
    RLLAVE          reduce using rule 18 (estatuto -> mientras bloque .)


state 23

    (7) bloque -> empty .

    FUNCION         reduce using rule 7 (bloque -> empty .)
    ID              reduce using rule 7 (bloque -> empty .)
    SI              reduce using rule 7 (bloque -> empty .)
    MIENTRAS        reduce using rule 7 (bloque -> empty .)
    PARA            reduce using rule 7 (bloque -> empty .)
    IMPRIME         reduce using rule 7 (bloque -> empty .)
    $end            reduce using rule 7 (bloque -> empty .)
    RLLAVE          reduce using rule 7 (bloque -> empty .)


state 24

    (4) body -> bloque body .

    $end            reduce using rule 4 (body -> bloque body .)


state 25

    (21) estatuto -> llamada bloque .

    FUNCION         reduce using rule 21 (estatuto -> llamada bloque .)
    ID              reduce using rule 21 (estatuto -> llamada bloque .)
    SI              reduce using rule 21 (estatuto -> llamada bloque .)
    MIENTRAS        reduce using rule 21 (estatuto -> llamada bloque .)
    PARA            reduce using rule 21 (estatuto -> llamada bloque .)
    IMPRIME         reduce using rule 21 (estatuto -> llamada bloque .)
    $end            reduce using rule 21 (estatuto -> llamada bloque .)
    RLLAVE          reduce using rule 21 (estatuto -> llamada bloque .)


state 26

    (17) estatuto -> condicion bloque .

    FUNCION         reduce using rule 17 (estatuto -> condicion bloque .)
    ID              reduce using rule 17 (estatuto -> condicion bloque .)
    SI              reduce using rule 17 (estatuto -> condicion bloque .)
    MIENTRAS        reduce using rule 17 (estatuto -> condicion bloque .)
    PARA            reduce using rule 17 (estatuto -> condicion bloque .)
    IMPRIME         reduce using rule 17 (estatuto -> condicion bloque .)
    $end            reduce using rule 17 (estatuto -> condicion bloque .)
    RLLAVE          reduce using rule 17 (estatuto -> condicion bloque .)


state 27

    (3) body -> funcion body .

    $end            reduce using rule 3 (body -> funcion body .)


state 28

    (19) estatuto -> para bloque .

    FUNCION         reduce using rule 19 (estatuto -> para bloque .)
    ID              reduce using rule 19 (estatuto -> para bloque .)
    SI              reduce using rule 19 (estatuto -> para bloque .)
    MIENTRAS        reduce using rule 19 (estatuto -> para bloque .)
    PARA            reduce using rule 19 (estatuto -> para bloque .)
    IMPRIME         reduce using rule 19 (estatuto -> para bloque .)
    $end            reduce using rule 19 (estatuto -> para bloque .)
    RLLAVE          reduce using rule 19 (estatuto -> para bloque .)


state 29

    (53) mientras -> MIENTRAS LPAREN . expresion RPAREN LLLAVE estatuto RLLAVE
    (28) expresion -> . exp expresions
    (29) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (34) exp -> . termino exps
    (38) termino -> . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    LEE             shift and go to state 47
    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    expresion                      shift and go to state 38
    valor                          shift and go to state 40
    termino                        shift and go to state 41
    exp                            shift and go to state 39
    factor                         shift and go to state 43

state 30

    (22) asignacion -> ID IGUAL . expresion
    (28) expresion -> . exp expresions
    (29) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (34) exp -> . termino exps
    (38) termino -> . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    LEE             shift and go to state 47
    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    expresion                      shift and go to state 48
    valor                          shift and go to state 40
    termino                        shift and go to state 41
    exp                            shift and go to state 39
    factor                         shift and go to state 43

state 31

    (23) llamada -> ID LPAREN . llamadaparam RPAREN
    (24) llamadaparam -> . valor llamadaparams
    (25) llamadaparam -> . empty
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC
    (2) empty -> .

    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45
    RPAREN          reduce using rule 2 (empty -> .)

    llamadaparam                   shift and go to state 49
    empty                          shift and go to state 51
    valor                          shift and go to state 50

state 32

    (8) funcion -> FUNCION ID . LPAREN funparam RPAREN LLLAVE bloque RLLAVE

    LPAREN          shift and go to state 52


state 33

    (54) escritura -> IMPRIME LPAREN . esc RPAREN
    (55) esc -> . expresion escs
    (56) esc -> . STRING escs
    (28) expresion -> . exp expresions
    (29) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (34) exp -> . termino exps
    (38) termino -> . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    STRING          shift and go to state 54
    LEE             shift and go to state 47
    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    expresion                      shift and go to state 53
    valor                          shift and go to state 40
    esc                            shift and go to state 55
    termino                        shift and go to state 41
    exp                            shift and go to state 39
    factor                         shift and go to state 43

state 34

    (16) estatuto -> asignacion bloque .

    FUNCION         reduce using rule 16 (estatuto -> asignacion bloque .)
    ID              reduce using rule 16 (estatuto -> asignacion bloque .)
    SI              reduce using rule 16 (estatuto -> asignacion bloque .)
    MIENTRAS        reduce using rule 16 (estatuto -> asignacion bloque .)
    PARA            reduce using rule 16 (estatuto -> asignacion bloque .)
    IMPRIME         reduce using rule 16 (estatuto -> asignacion bloque .)
    $end            reduce using rule 16 (estatuto -> asignacion bloque .)
    RLLAVE          reduce using rule 16 (estatuto -> asignacion bloque .)


state 35

    (47) condicion -> SI LPAREN . expresion RPAREN LLLAVE estatuto RLLAVE else
    (28) expresion -> . exp expresions
    (29) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (34) exp -> . termino exps
    (38) termino -> . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    LEE             shift and go to state 47
    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    expresion                      shift and go to state 56
    valor                          shift and go to state 40
    termino                        shift and go to state 41
    exp                            shift and go to state 39
    factor                         shift and go to state 43

state 36

    (20) estatuto -> escritura bloque .

    FUNCION         reduce using rule 20 (estatuto -> escritura bloque .)
    ID              reduce using rule 20 (estatuto -> escritura bloque .)
    SI              reduce using rule 20 (estatuto -> escritura bloque .)
    MIENTRAS        reduce using rule 20 (estatuto -> escritura bloque .)
    PARA            reduce using rule 20 (estatuto -> escritura bloque .)
    IMPRIME         reduce using rule 20 (estatuto -> escritura bloque .)
    $end            reduce using rule 20 (estatuto -> escritura bloque .)
    RLLAVE          reduce using rule 20 (estatuto -> escritura bloque .)


state 37

    (50) para -> PARA ID ENRANGO . LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    LPAREN          shift and go to state 57


state 38

    (53) mientras -> MIENTRAS LPAREN expresion . RPAREN LLLAVE estatuto RLLAVE

    RPAREN          shift and go to state 58


state 39

    (28) expresion -> exp . expresions
    (30) expresions -> . MAYOR exp
    (31) expresions -> . MENOR exp
    (32) expresions -> . COMPARA exp
    (33) expresions -> . empty
    (2) empty -> .

    MAYOR           shift and go to state 62
    MENOR           shift and go to state 61
    COMPARA         shift and go to state 60
    RPAREN          reduce using rule 2 (empty -> .)
    ID              reduce using rule 2 (empty -> .)
    SI              reduce using rule 2 (empty -> .)
    MIENTRAS        reduce using rule 2 (empty -> .)
    PARA            reduce using rule 2 (empty -> .)
    IMPRIME         reduce using rule 2 (empty -> .)
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    COMMA           reduce using rule 2 (empty -> .)

    expresions                     shift and go to state 59
    empty                          shift and go to state 63

state 40

    (43) factor -> valor .

    TIMES           reduce using rule 43 (factor -> valor .)
    DIVIDE          reduce using rule 43 (factor -> valor .)
    PLUS            reduce using rule 43 (factor -> valor .)
    MINUS           reduce using rule 43 (factor -> valor .)
    MAYOR           reduce using rule 43 (factor -> valor .)
    MENOR           reduce using rule 43 (factor -> valor .)
    COMPARA         reduce using rule 43 (factor -> valor .)
    COMMA           reduce using rule 43 (factor -> valor .)
    RPAREN          reduce using rule 43 (factor -> valor .)
    ID              reduce using rule 43 (factor -> valor .)
    SI              reduce using rule 43 (factor -> valor .)
    MIENTRAS        reduce using rule 43 (factor -> valor .)
    PARA            reduce using rule 43 (factor -> valor .)
    IMPRIME         reduce using rule 43 (factor -> valor .)
    FUNCION         reduce using rule 43 (factor -> valor .)
    $end            reduce using rule 43 (factor -> valor .)
    RLLAVE          reduce using rule 43 (factor -> valor .)


state 41

    (34) exp -> termino . exps
    (35) exps -> . PLUS termino exps
    (36) exps -> . MINUS termino exps
    (37) exps -> . empty
    (2) empty -> .

    PLUS            shift and go to state 65
    MINUS           shift and go to state 67
    MAYOR           reduce using rule 2 (empty -> .)
    MENOR           reduce using rule 2 (empty -> .)
    COMPARA         reduce using rule 2 (empty -> .)
    RPAREN          reduce using rule 2 (empty -> .)
    ID              reduce using rule 2 (empty -> .)
    SI              reduce using rule 2 (empty -> .)
    MIENTRAS        reduce using rule 2 (empty -> .)
    PARA            reduce using rule 2 (empty -> .)
    IMPRIME         reduce using rule 2 (empty -> .)
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    COMMA           reduce using rule 2 (empty -> .)

    exps                           shift and go to state 64
    empty                          shift and go to state 66

state 42

    (42) factor -> LPAREN . expresion RPAREN
    (28) expresion -> . exp expresions
    (29) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (34) exp -> . termino exps
    (38) termino -> . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    LEE             shift and go to state 47
    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    expresion                      shift and go to state 68
    valor                          shift and go to state 40
    termino                        shift and go to state 41
    exp                            shift and go to state 39
    factor                         shift and go to state 43

state 43

    (38) termino -> factor . terminos
    (39) terminos -> . TIMES factor terminos
    (40) terminos -> . DIVIDE factor terminos
    (41) terminos -> . empty
    (2) empty -> .

    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 69
    PLUS            reduce using rule 2 (empty -> .)
    MINUS           reduce using rule 2 (empty -> .)
    MAYOR           reduce using rule 2 (empty -> .)
    MENOR           reduce using rule 2 (empty -> .)
    COMPARA         reduce using rule 2 (empty -> .)
    RPAREN          reduce using rule 2 (empty -> .)
    ID              reduce using rule 2 (empty -> .)
    SI              reduce using rule 2 (empty -> .)
    MIENTRAS        reduce using rule 2 (empty -> .)
    PARA            reduce using rule 2 (empty -> .)
    IMPRIME         reduce using rule 2 (empty -> .)
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    COMMA           reduce using rule 2 (empty -> .)

    terminos                       shift and go to state 71
    empty                          shift and go to state 72

state 44

    (45) valor -> CTEINT .

    TIMES           reduce using rule 45 (valor -> CTEINT .)
    DIVIDE          reduce using rule 45 (valor -> CTEINT .)
    PLUS            reduce using rule 45 (valor -> CTEINT .)
    MINUS           reduce using rule 45 (valor -> CTEINT .)
    MAYOR           reduce using rule 45 (valor -> CTEINT .)
    MENOR           reduce using rule 45 (valor -> CTEINT .)
    COMPARA         reduce using rule 45 (valor -> CTEINT .)
    COMMA           reduce using rule 45 (valor -> CTEINT .)
    RPAREN          reduce using rule 45 (valor -> CTEINT .)
    ID              reduce using rule 45 (valor -> CTEINT .)
    SI              reduce using rule 45 (valor -> CTEINT .)
    MIENTRAS        reduce using rule 45 (valor -> CTEINT .)
    PARA            reduce using rule 45 (valor -> CTEINT .)
    IMPRIME         reduce using rule 45 (valor -> CTEINT .)
    FUNCION         reduce using rule 45 (valor -> CTEINT .)
    $end            reduce using rule 45 (valor -> CTEINT .)
    RLLAVE          reduce using rule 45 (valor -> CTEINT .)


state 45

    (46) valor -> CTEDEC .

    TIMES           reduce using rule 46 (valor -> CTEDEC .)
    DIVIDE          reduce using rule 46 (valor -> CTEDEC .)
    PLUS            reduce using rule 46 (valor -> CTEDEC .)
    MINUS           reduce using rule 46 (valor -> CTEDEC .)
    MAYOR           reduce using rule 46 (valor -> CTEDEC .)
    MENOR           reduce using rule 46 (valor -> CTEDEC .)
    COMPARA         reduce using rule 46 (valor -> CTEDEC .)
    COMMA           reduce using rule 46 (valor -> CTEDEC .)
    RPAREN          reduce using rule 46 (valor -> CTEDEC .)
    ID              reduce using rule 46 (valor -> CTEDEC .)
    SI              reduce using rule 46 (valor -> CTEDEC .)
    MIENTRAS        reduce using rule 46 (valor -> CTEDEC .)
    PARA            reduce using rule 46 (valor -> CTEDEC .)
    IMPRIME         reduce using rule 46 (valor -> CTEDEC .)
    FUNCION         reduce using rule 46 (valor -> CTEDEC .)
    $end            reduce using rule 46 (valor -> CTEDEC .)
    RLLAVE          reduce using rule 46 (valor -> CTEDEC .)


state 46

    (44) valor -> ID .

    TIMES           reduce using rule 44 (valor -> ID .)
    DIVIDE          reduce using rule 44 (valor -> ID .)
    PLUS            reduce using rule 44 (valor -> ID .)
    MINUS           reduce using rule 44 (valor -> ID .)
    MAYOR           reduce using rule 44 (valor -> ID .)
    MENOR           reduce using rule 44 (valor -> ID .)
    COMPARA         reduce using rule 44 (valor -> ID .)
    COMMA           reduce using rule 44 (valor -> ID .)
    RPAREN          reduce using rule 44 (valor -> ID .)
    ID              reduce using rule 44 (valor -> ID .)
    SI              reduce using rule 44 (valor -> ID .)
    MIENTRAS        reduce using rule 44 (valor -> ID .)
    PARA            reduce using rule 44 (valor -> ID .)
    IMPRIME         reduce using rule 44 (valor -> ID .)
    FUNCION         reduce using rule 44 (valor -> ID .)
    $end            reduce using rule 44 (valor -> ID .)
    RLLAVE          reduce using rule 44 (valor -> ID .)


state 47

    (29) expresion -> LEE . LPAREN STRING RPAREN SEMICOL

    LPAREN          shift and go to state 73


state 48

    (22) asignacion -> ID IGUAL expresion .

    ID              reduce using rule 22 (asignacion -> ID IGUAL expresion .)
    SI              reduce using rule 22 (asignacion -> ID IGUAL expresion .)
    MIENTRAS        reduce using rule 22 (asignacion -> ID IGUAL expresion .)
    PARA            reduce using rule 22 (asignacion -> ID IGUAL expresion .)
    IMPRIME         reduce using rule 22 (asignacion -> ID IGUAL expresion .)
    RLLAVE          reduce using rule 22 (asignacion -> ID IGUAL expresion .)
    FUNCION         reduce using rule 22 (asignacion -> ID IGUAL expresion .)
    $end            reduce using rule 22 (asignacion -> ID IGUAL expresion .)


state 49

    (23) llamada -> ID LPAREN llamadaparam . RPAREN

    RPAREN          shift and go to state 74


state 50

    (24) llamadaparam -> valor . llamadaparams
    (26) llamadaparams -> . COMMA llamadaparam
    (27) llamadaparams -> . empty
    (2) empty -> .

    COMMA           shift and go to state 75
    RPAREN          reduce using rule 2 (empty -> .)

    llamadaparams                  shift and go to state 76
    empty                          shift and go to state 77

state 51

    (25) llamadaparam -> empty .

    RPAREN          reduce using rule 25 (llamadaparam -> empty .)


state 52

    (8) funcion -> FUNCION ID LPAREN . funparam RPAREN LLLAVE bloque RLLAVE
    (9) funparam -> . tipo ID funparams
    (10) funparam -> . empty
    (13) tipo -> . ENTERO
    (14) tipo -> . DECIMAL
    (15) tipo -> . FRASE
    (2) empty -> .

    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 79
    FRASE           shift and go to state 80
    RPAREN          reduce using rule 2 (empty -> .)

    funparam                       shift and go to state 81
    empty                          shift and go to state 83
    tipo                           shift and go to state 78

state 53

    (55) esc -> expresion . escs
    (57) escs -> . COMMA esc
    (58) escs -> . empty
    (2) empty -> .

    COMMA           shift and go to state 85
    RPAREN          reduce using rule 2 (empty -> .)

    escs                           shift and go to state 84
    empty                          shift and go to state 86

state 54

    (56) esc -> STRING . escs
    (57) escs -> . COMMA esc
    (58) escs -> . empty
    (2) empty -> .

    COMMA           shift and go to state 85
    RPAREN          reduce using rule 2 (empty -> .)

    escs                           shift and go to state 87
    empty                          shift and go to state 86

state 55

    (54) escritura -> IMPRIME LPAREN esc . RPAREN

    RPAREN          shift and go to state 88


state 56

    (47) condicion -> SI LPAREN expresion . RPAREN LLLAVE estatuto RLLAVE else

    RPAREN          shift and go to state 89


state 57

    (50) para -> PARA ID ENRANGO LPAREN . param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (51) param -> . ID
    (52) param -> . CTEINT

    ID              shift and go to state 92
    CTEINT          shift and go to state 90

    param                          shift and go to state 91

state 58

    (53) mientras -> MIENTRAS LPAREN expresion RPAREN . LLLAVE estatuto RLLAVE

    LLLAVE          shift and go to state 93


state 59

    (28) expresion -> exp expresions .

    RPAREN          reduce using rule 28 (expresion -> exp expresions .)
    COMMA           reduce using rule 28 (expresion -> exp expresions .)
    ID              reduce using rule 28 (expresion -> exp expresions .)
    SI              reduce using rule 28 (expresion -> exp expresions .)
    MIENTRAS        reduce using rule 28 (expresion -> exp expresions .)
    PARA            reduce using rule 28 (expresion -> exp expresions .)
    IMPRIME         reduce using rule 28 (expresion -> exp expresions .)
    FUNCION         reduce using rule 28 (expresion -> exp expresions .)
    $end            reduce using rule 28 (expresion -> exp expresions .)
    RLLAVE          reduce using rule 28 (expresion -> exp expresions .)


state 60

    (32) expresions -> COMPARA . exp
    (34) exp -> . termino exps
    (38) termino -> . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    valor                          shift and go to state 40
    termino                        shift and go to state 41
    exp                            shift and go to state 94
    factor                         shift and go to state 43

state 61

    (31) expresions -> MENOR . exp
    (34) exp -> . termino exps
    (38) termino -> . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    valor                          shift and go to state 40
    termino                        shift and go to state 41
    exp                            shift and go to state 95
    factor                         shift and go to state 43

state 62

    (30) expresions -> MAYOR . exp
    (34) exp -> . termino exps
    (38) termino -> . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    valor                          shift and go to state 40
    termino                        shift and go to state 41
    exp                            shift and go to state 96
    factor                         shift and go to state 43

state 63

    (33) expresions -> empty .

    RPAREN          reduce using rule 33 (expresions -> empty .)
    ID              reduce using rule 33 (expresions -> empty .)
    SI              reduce using rule 33 (expresions -> empty .)
    MIENTRAS        reduce using rule 33 (expresions -> empty .)
    PARA            reduce using rule 33 (expresions -> empty .)
    IMPRIME         reduce using rule 33 (expresions -> empty .)
    FUNCION         reduce using rule 33 (expresions -> empty .)
    $end            reduce using rule 33 (expresions -> empty .)
    RLLAVE          reduce using rule 33 (expresions -> empty .)
    COMMA           reduce using rule 33 (expresions -> empty .)


state 64

    (34) exp -> termino exps .

    RPAREN          reduce using rule 34 (exp -> termino exps .)
    ID              reduce using rule 34 (exp -> termino exps .)
    SI              reduce using rule 34 (exp -> termino exps .)
    MIENTRAS        reduce using rule 34 (exp -> termino exps .)
    PARA            reduce using rule 34 (exp -> termino exps .)
    IMPRIME         reduce using rule 34 (exp -> termino exps .)
    FUNCION         reduce using rule 34 (exp -> termino exps .)
    $end            reduce using rule 34 (exp -> termino exps .)
    RLLAVE          reduce using rule 34 (exp -> termino exps .)
    COMMA           reduce using rule 34 (exp -> termino exps .)
    MAYOR           reduce using rule 34 (exp -> termino exps .)
    MENOR           reduce using rule 34 (exp -> termino exps .)
    COMPARA         reduce using rule 34 (exp -> termino exps .)


state 65

    (35) exps -> PLUS . termino exps
    (38) termino -> . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    factor                         shift and go to state 43
    termino                        shift and go to state 97
    valor                          shift and go to state 40

state 66

    (37) exps -> empty .

    MAYOR           reduce using rule 37 (exps -> empty .)
    MENOR           reduce using rule 37 (exps -> empty .)
    COMPARA         reduce using rule 37 (exps -> empty .)
    RPAREN          reduce using rule 37 (exps -> empty .)
    ID              reduce using rule 37 (exps -> empty .)
    SI              reduce using rule 37 (exps -> empty .)
    MIENTRAS        reduce using rule 37 (exps -> empty .)
    PARA            reduce using rule 37 (exps -> empty .)
    IMPRIME         reduce using rule 37 (exps -> empty .)
    FUNCION         reduce using rule 37 (exps -> empty .)
    $end            reduce using rule 37 (exps -> empty .)
    RLLAVE          reduce using rule 37 (exps -> empty .)
    COMMA           reduce using rule 37 (exps -> empty .)


state 67

    (36) exps -> MINUS . termino exps
    (38) termino -> . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    factor                         shift and go to state 43
    termino                        shift and go to state 98
    valor                          shift and go to state 40

state 68

    (42) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 99


state 69

    (40) terminos -> DIVIDE . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    valor                          shift and go to state 40
    factor                         shift and go to state 100

state 70

    (39) terminos -> TIMES . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    valor                          shift and go to state 40
    factor                         shift and go to state 101

state 71

    (38) termino -> factor terminos .

    PLUS            reduce using rule 38 (termino -> factor terminos .)
    MINUS           reduce using rule 38 (termino -> factor terminos .)
    MAYOR           reduce using rule 38 (termino -> factor terminos .)
    MENOR           reduce using rule 38 (termino -> factor terminos .)
    COMPARA         reduce using rule 38 (termino -> factor terminos .)
    RPAREN          reduce using rule 38 (termino -> factor terminos .)
    ID              reduce using rule 38 (termino -> factor terminos .)
    SI              reduce using rule 38 (termino -> factor terminos .)
    MIENTRAS        reduce using rule 38 (termino -> factor terminos .)
    PARA            reduce using rule 38 (termino -> factor terminos .)
    IMPRIME         reduce using rule 38 (termino -> factor terminos .)
    FUNCION         reduce using rule 38 (termino -> factor terminos .)
    $end            reduce using rule 38 (termino -> factor terminos .)
    RLLAVE          reduce using rule 38 (termino -> factor terminos .)
    COMMA           reduce using rule 38 (termino -> factor terminos .)


state 72

    (41) terminos -> empty .

    PLUS            reduce using rule 41 (terminos -> empty .)
    MINUS           reduce using rule 41 (terminos -> empty .)
    MAYOR           reduce using rule 41 (terminos -> empty .)
    MENOR           reduce using rule 41 (terminos -> empty .)
    COMPARA         reduce using rule 41 (terminos -> empty .)
    RPAREN          reduce using rule 41 (terminos -> empty .)
    ID              reduce using rule 41 (terminos -> empty .)
    SI              reduce using rule 41 (terminos -> empty .)
    MIENTRAS        reduce using rule 41 (terminos -> empty .)
    PARA            reduce using rule 41 (terminos -> empty .)
    IMPRIME         reduce using rule 41 (terminos -> empty .)
    FUNCION         reduce using rule 41 (terminos -> empty .)
    $end            reduce using rule 41 (terminos -> empty .)
    RLLAVE          reduce using rule 41 (terminos -> empty .)
    COMMA           reduce using rule 41 (terminos -> empty .)


state 73

    (29) expresion -> LEE LPAREN . STRING RPAREN SEMICOL

    STRING          shift and go to state 102


state 74

    (23) llamada -> ID LPAREN llamadaparam RPAREN .

    ID              reduce using rule 23 (llamada -> ID LPAREN llamadaparam RPAREN .)
    SI              reduce using rule 23 (llamada -> ID LPAREN llamadaparam RPAREN .)
    MIENTRAS        reduce using rule 23 (llamada -> ID LPAREN llamadaparam RPAREN .)
    PARA            reduce using rule 23 (llamada -> ID LPAREN llamadaparam RPAREN .)
    IMPRIME         reduce using rule 23 (llamada -> ID LPAREN llamadaparam RPAREN .)
    FUNCION         reduce using rule 23 (llamada -> ID LPAREN llamadaparam RPAREN .)
    $end            reduce using rule 23 (llamada -> ID LPAREN llamadaparam RPAREN .)
    RLLAVE          reduce using rule 23 (llamada -> ID LPAREN llamadaparam RPAREN .)


state 75

    (26) llamadaparams -> COMMA . llamadaparam
    (24) llamadaparam -> . valor llamadaparams
    (25) llamadaparam -> . empty
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC
    (2) empty -> .

    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45
    RPAREN          reduce using rule 2 (empty -> .)

    llamadaparam                   shift and go to state 103
    empty                          shift and go to state 51
    valor                          shift and go to state 50

state 76

    (24) llamadaparam -> valor llamadaparams .

    RPAREN          reduce using rule 24 (llamadaparam -> valor llamadaparams .)


state 77

    (27) llamadaparams -> empty .

    RPAREN          reduce using rule 27 (llamadaparams -> empty .)


state 78

    (9) funparam -> tipo . ID funparams

    ID              shift and go to state 104


state 79

    (14) tipo -> DECIMAL .

    ID              reduce using rule 14 (tipo -> DECIMAL .)


state 80

    (15) tipo -> FRASE .

    ID              reduce using rule 15 (tipo -> FRASE .)


state 81

    (8) funcion -> FUNCION ID LPAREN funparam . RPAREN LLLAVE bloque RLLAVE

    RPAREN          shift and go to state 105


state 82

    (13) tipo -> ENTERO .

    ID              reduce using rule 13 (tipo -> ENTERO .)


state 83

    (10) funparam -> empty .

    RPAREN          reduce using rule 10 (funparam -> empty .)


state 84

    (55) esc -> expresion escs .

    RPAREN          reduce using rule 55 (esc -> expresion escs .)


state 85

    (57) escs -> COMMA . esc
    (55) esc -> . expresion escs
    (56) esc -> . STRING escs
    (28) expresion -> . exp expresions
    (29) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (34) exp -> . termino exps
    (38) termino -> . factor terminos
    (42) factor -> . LPAREN expresion RPAREN
    (43) factor -> . valor
    (44) valor -> . ID
    (45) valor -> . CTEINT
    (46) valor -> . CTEDEC

    STRING          shift and go to state 54
    LEE             shift and go to state 47
    LPAREN          shift and go to state 42
    ID              shift and go to state 46
    CTEINT          shift and go to state 44
    CTEDEC          shift and go to state 45

    expresion                      shift and go to state 53
    valor                          shift and go to state 40
    esc                            shift and go to state 106
    termino                        shift and go to state 41
    exp                            shift and go to state 39
    factor                         shift and go to state 43

state 86

    (58) escs -> empty .

    RPAREN          reduce using rule 58 (escs -> empty .)


state 87

    (56) esc -> STRING escs .

    RPAREN          reduce using rule 56 (esc -> STRING escs .)


state 88

    (54) escritura -> IMPRIME LPAREN esc RPAREN .

    ID              reduce using rule 54 (escritura -> IMPRIME LPAREN esc RPAREN .)
    SI              reduce using rule 54 (escritura -> IMPRIME LPAREN esc RPAREN .)
    MIENTRAS        reduce using rule 54 (escritura -> IMPRIME LPAREN esc RPAREN .)
    PARA            reduce using rule 54 (escritura -> IMPRIME LPAREN esc RPAREN .)
    IMPRIME         reduce using rule 54 (escritura -> IMPRIME LPAREN esc RPAREN .)
    FUNCION         reduce using rule 54 (escritura -> IMPRIME LPAREN esc RPAREN .)
    $end            reduce using rule 54 (escritura -> IMPRIME LPAREN esc RPAREN .)
    RLLAVE          reduce using rule 54 (escritura -> IMPRIME LPAREN esc RPAREN .)


state 89

    (47) condicion -> SI LPAREN expresion RPAREN . LLLAVE estatuto RLLAVE else

    LLLAVE          shift and go to state 107


state 90

    (52) param -> CTEINT .

    RPAREN          reduce using rule 52 (param -> CTEINT .)
    COMMA           reduce using rule 52 (param -> CTEINT .)


state 91

    (50) para -> PARA ID ENRANGO LPAREN param . COMMA param RPAREN LLLAVE estatuto RLLAVE

    COMMA           shift and go to state 108


state 92

    (51) param -> ID .

    RPAREN          reduce using rule 51 (param -> ID .)
    COMMA           reduce using rule 51 (param -> ID .)


state 93

    (53) mientras -> MIENTRAS LPAREN expresion RPAREN LLLAVE . estatuto RLLAVE
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 109
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    escritura                      shift and go to state 20

state 94

    (32) expresions -> COMPARA exp .

    RPAREN          reduce using rule 32 (expresions -> COMPARA exp .)
    ID              reduce using rule 32 (expresions -> COMPARA exp .)
    SI              reduce using rule 32 (expresions -> COMPARA exp .)
    MIENTRAS        reduce using rule 32 (expresions -> COMPARA exp .)
    PARA            reduce using rule 32 (expresions -> COMPARA exp .)
    IMPRIME         reduce using rule 32 (expresions -> COMPARA exp .)
    FUNCION         reduce using rule 32 (expresions -> COMPARA exp .)
    $end            reduce using rule 32 (expresions -> COMPARA exp .)
    RLLAVE          reduce using rule 32 (expresions -> COMPARA exp .)
    COMMA           reduce using rule 32 (expresions -> COMPARA exp .)


state 95

    (31) expresions -> MENOR exp .

    RPAREN          reduce using rule 31 (expresions -> MENOR exp .)
    ID              reduce using rule 31 (expresions -> MENOR exp .)
    SI              reduce using rule 31 (expresions -> MENOR exp .)
    MIENTRAS        reduce using rule 31 (expresions -> MENOR exp .)
    PARA            reduce using rule 31 (expresions -> MENOR exp .)
    IMPRIME         reduce using rule 31 (expresions -> MENOR exp .)
    FUNCION         reduce using rule 31 (expresions -> MENOR exp .)
    $end            reduce using rule 31 (expresions -> MENOR exp .)
    RLLAVE          reduce using rule 31 (expresions -> MENOR exp .)
    COMMA           reduce using rule 31 (expresions -> MENOR exp .)


state 96

    (30) expresions -> MAYOR exp .

    RPAREN          reduce using rule 30 (expresions -> MAYOR exp .)
    ID              reduce using rule 30 (expresions -> MAYOR exp .)
    SI              reduce using rule 30 (expresions -> MAYOR exp .)
    MIENTRAS        reduce using rule 30 (expresions -> MAYOR exp .)
    PARA            reduce using rule 30 (expresions -> MAYOR exp .)
    IMPRIME         reduce using rule 30 (expresions -> MAYOR exp .)
    FUNCION         reduce using rule 30 (expresions -> MAYOR exp .)
    $end            reduce using rule 30 (expresions -> MAYOR exp .)
    RLLAVE          reduce using rule 30 (expresions -> MAYOR exp .)
    COMMA           reduce using rule 30 (expresions -> MAYOR exp .)


state 97

    (35) exps -> PLUS termino . exps
    (35) exps -> . PLUS termino exps
    (36) exps -> . MINUS termino exps
    (37) exps -> . empty
    (2) empty -> .

    PLUS            shift and go to state 65
    MINUS           shift and go to state 67
    MAYOR           reduce using rule 2 (empty -> .)
    MENOR           reduce using rule 2 (empty -> .)
    COMPARA         reduce using rule 2 (empty -> .)
    RPAREN          reduce using rule 2 (empty -> .)
    ID              reduce using rule 2 (empty -> .)
    SI              reduce using rule 2 (empty -> .)
    MIENTRAS        reduce using rule 2 (empty -> .)
    PARA            reduce using rule 2 (empty -> .)
    IMPRIME         reduce using rule 2 (empty -> .)
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    COMMA           reduce using rule 2 (empty -> .)

    exps                           shift and go to state 110
    empty                          shift and go to state 66

state 98

    (36) exps -> MINUS termino . exps
    (35) exps -> . PLUS termino exps
    (36) exps -> . MINUS termino exps
    (37) exps -> . empty
    (2) empty -> .

    PLUS            shift and go to state 65
    MINUS           shift and go to state 67
    MAYOR           reduce using rule 2 (empty -> .)
    MENOR           reduce using rule 2 (empty -> .)
    COMPARA         reduce using rule 2 (empty -> .)
    RPAREN          reduce using rule 2 (empty -> .)
    ID              reduce using rule 2 (empty -> .)
    SI              reduce using rule 2 (empty -> .)
    MIENTRAS        reduce using rule 2 (empty -> .)
    PARA            reduce using rule 2 (empty -> .)
    IMPRIME         reduce using rule 2 (empty -> .)
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    COMMA           reduce using rule 2 (empty -> .)

    exps                           shift and go to state 111
    empty                          shift and go to state 66

state 99

    (42) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    MAYOR           reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    MENOR           reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    COMPARA         reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    SI              reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    MIENTRAS        reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    PARA            reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    IMPRIME         reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    FUNCION         reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    $end            reduce using rule 42 (factor -> LPAREN expresion RPAREN .)
    RLLAVE          reduce using rule 42 (factor -> LPAREN expresion RPAREN .)


state 100

    (40) terminos -> DIVIDE factor . terminos
    (39) terminos -> . TIMES factor terminos
    (40) terminos -> . DIVIDE factor terminos
    (41) terminos -> . empty
    (2) empty -> .

    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 69
    PLUS            reduce using rule 2 (empty -> .)
    MINUS           reduce using rule 2 (empty -> .)
    MAYOR           reduce using rule 2 (empty -> .)
    MENOR           reduce using rule 2 (empty -> .)
    COMPARA         reduce using rule 2 (empty -> .)
    RPAREN          reduce using rule 2 (empty -> .)
    ID              reduce using rule 2 (empty -> .)
    SI              reduce using rule 2 (empty -> .)
    MIENTRAS        reduce using rule 2 (empty -> .)
    PARA            reduce using rule 2 (empty -> .)
    IMPRIME         reduce using rule 2 (empty -> .)
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    COMMA           reduce using rule 2 (empty -> .)

    terminos                       shift and go to state 112
    empty                          shift and go to state 72

state 101

    (39) terminos -> TIMES factor . terminos
    (39) terminos -> . TIMES factor terminos
    (40) terminos -> . DIVIDE factor terminos
    (41) terminos -> . empty
    (2) empty -> .

    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 69
    PLUS            reduce using rule 2 (empty -> .)
    MINUS           reduce using rule 2 (empty -> .)
    MAYOR           reduce using rule 2 (empty -> .)
    MENOR           reduce using rule 2 (empty -> .)
    COMPARA         reduce using rule 2 (empty -> .)
    RPAREN          reduce using rule 2 (empty -> .)
    ID              reduce using rule 2 (empty -> .)
    SI              reduce using rule 2 (empty -> .)
    MIENTRAS        reduce using rule 2 (empty -> .)
    PARA            reduce using rule 2 (empty -> .)
    IMPRIME         reduce using rule 2 (empty -> .)
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)
    COMMA           reduce using rule 2 (empty -> .)

    terminos                       shift and go to state 113
    empty                          shift and go to state 72

state 102

    (29) expresion -> LEE LPAREN STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 114


state 103

    (26) llamadaparams -> COMMA llamadaparam .

    RPAREN          reduce using rule 26 (llamadaparams -> COMMA llamadaparam .)


state 104

    (9) funparam -> tipo ID . funparams
    (11) funparams -> . COMMA funparam
    (12) funparams -> . empty
    (2) empty -> .

    COMMA           shift and go to state 115
    RPAREN          reduce using rule 2 (empty -> .)

    funparams                      shift and go to state 116
    empty                          shift and go to state 117

state 105

    (8) funcion -> FUNCION ID LPAREN funparam RPAREN . LLLAVE bloque RLLAVE

    LLLAVE          shift and go to state 118


state 106

    (57) escs -> COMMA esc .

    RPAREN          reduce using rule 57 (escs -> COMMA esc .)


state 107

    (47) condicion -> SI LPAREN expresion RPAREN LLLAVE . estatuto RLLAVE else
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 119
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    escritura                      shift and go to state 20

state 108

    (50) para -> PARA ID ENRANGO LPAREN param COMMA . param RPAREN LLLAVE estatuto RLLAVE
    (51) param -> . ID
    (52) param -> . CTEINT

    ID              shift and go to state 92
    CTEINT          shift and go to state 90

    param                          shift and go to state 120

state 109

    (53) mientras -> MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto . RLLAVE

    RLLAVE          shift and go to state 121


state 110

    (35) exps -> PLUS termino exps .

    MAYOR           reduce using rule 35 (exps -> PLUS termino exps .)
    MENOR           reduce using rule 35 (exps -> PLUS termino exps .)
    COMPARA         reduce using rule 35 (exps -> PLUS termino exps .)
    RPAREN          reduce using rule 35 (exps -> PLUS termino exps .)
    ID              reduce using rule 35 (exps -> PLUS termino exps .)
    SI              reduce using rule 35 (exps -> PLUS termino exps .)
    MIENTRAS        reduce using rule 35 (exps -> PLUS termino exps .)
    PARA            reduce using rule 35 (exps -> PLUS termino exps .)
    IMPRIME         reduce using rule 35 (exps -> PLUS termino exps .)
    FUNCION         reduce using rule 35 (exps -> PLUS termino exps .)
    $end            reduce using rule 35 (exps -> PLUS termino exps .)
    RLLAVE          reduce using rule 35 (exps -> PLUS termino exps .)
    COMMA           reduce using rule 35 (exps -> PLUS termino exps .)


state 111

    (36) exps -> MINUS termino exps .

    MAYOR           reduce using rule 36 (exps -> MINUS termino exps .)
    MENOR           reduce using rule 36 (exps -> MINUS termino exps .)
    COMPARA         reduce using rule 36 (exps -> MINUS termino exps .)
    RPAREN          reduce using rule 36 (exps -> MINUS termino exps .)
    ID              reduce using rule 36 (exps -> MINUS termino exps .)
    SI              reduce using rule 36 (exps -> MINUS termino exps .)
    MIENTRAS        reduce using rule 36 (exps -> MINUS termino exps .)
    PARA            reduce using rule 36 (exps -> MINUS termino exps .)
    IMPRIME         reduce using rule 36 (exps -> MINUS termino exps .)
    FUNCION         reduce using rule 36 (exps -> MINUS termino exps .)
    $end            reduce using rule 36 (exps -> MINUS termino exps .)
    RLLAVE          reduce using rule 36 (exps -> MINUS termino exps .)
    COMMA           reduce using rule 36 (exps -> MINUS termino exps .)


state 112

    (40) terminos -> DIVIDE factor terminos .

    PLUS            reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    MINUS           reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    MAYOR           reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    MENOR           reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    COMPARA         reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    RPAREN          reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    ID              reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    SI              reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    MIENTRAS        reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    PARA            reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    IMPRIME         reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    FUNCION         reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    $end            reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    RLLAVE          reduce using rule 40 (terminos -> DIVIDE factor terminos .)
    COMMA           reduce using rule 40 (terminos -> DIVIDE factor terminos .)


state 113

    (39) terminos -> TIMES factor terminos .

    PLUS            reduce using rule 39 (terminos -> TIMES factor terminos .)
    MINUS           reduce using rule 39 (terminos -> TIMES factor terminos .)
    MAYOR           reduce using rule 39 (terminos -> TIMES factor terminos .)
    MENOR           reduce using rule 39 (terminos -> TIMES factor terminos .)
    COMPARA         reduce using rule 39 (terminos -> TIMES factor terminos .)
    RPAREN          reduce using rule 39 (terminos -> TIMES factor terminos .)
    ID              reduce using rule 39 (terminos -> TIMES factor terminos .)
    SI              reduce using rule 39 (terminos -> TIMES factor terminos .)
    MIENTRAS        reduce using rule 39 (terminos -> TIMES factor terminos .)
    PARA            reduce using rule 39 (terminos -> TIMES factor terminos .)
    IMPRIME         reduce using rule 39 (terminos -> TIMES factor terminos .)
    FUNCION         reduce using rule 39 (terminos -> TIMES factor terminos .)
    $end            reduce using rule 39 (terminos -> TIMES factor terminos .)
    RLLAVE          reduce using rule 39 (terminos -> TIMES factor terminos .)
    COMMA           reduce using rule 39 (terminos -> TIMES factor terminos .)


state 114

    (29) expresion -> LEE LPAREN STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 122


state 115

    (11) funparams -> COMMA . funparam
    (9) funparam -> . tipo ID funparams
    (10) funparam -> . empty
    (13) tipo -> . ENTERO
    (14) tipo -> . DECIMAL
    (15) tipo -> . FRASE
    (2) empty -> .

    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 79
    FRASE           shift and go to state 80
    RPAREN          reduce using rule 2 (empty -> .)

    funparam                       shift and go to state 123
    empty                          shift and go to state 83
    tipo                           shift and go to state 78

state 116

    (9) funparam -> tipo ID funparams .

    RPAREN          reduce using rule 9 (funparam -> tipo ID funparams .)


state 117

    (12) funparams -> empty .

    RPAREN          reduce using rule 12 (funparams -> empty .)


state 118

    (8) funcion -> FUNCION ID LPAREN funparam RPAREN LLLAVE . bloque RLLAVE
    (6) bloque -> . estatuto
    (7) bloque -> . empty
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (2) empty -> .
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

    RLLAVE          reduce using rule 2 (empty -> .)
    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 7
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    bloque                         shift and go to state 124
    empty                          shift and go to state 23
    escritura                      shift and go to state 20

state 119

    (47) condicion -> SI LPAREN expresion RPAREN LLLAVE estatuto . RLLAVE else

    RLLAVE          shift and go to state 125


state 120

    (50) para -> PARA ID ENRANGO LPAREN param COMMA param . RPAREN LLLAVE estatuto RLLAVE

    RPAREN          shift and go to state 126


state 121

    (53) mientras -> MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE .

    ID              reduce using rule 53 (mientras -> MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE .)
    SI              reduce using rule 53 (mientras -> MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE .)
    MIENTRAS        reduce using rule 53 (mientras -> MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE .)
    PARA            reduce using rule 53 (mientras -> MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE .)
    IMPRIME         reduce using rule 53 (mientras -> MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE .)
    FUNCION         reduce using rule 53 (mientras -> MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE .)
    $end            reduce using rule 53 (mientras -> MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE .)
    RLLAVE          reduce using rule 53 (mientras -> MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE .)


state 122

    (29) expresion -> LEE LPAREN STRING RPAREN SEMICOL .

    RPAREN          reduce using rule 29 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    COMMA           reduce using rule 29 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    ID              reduce using rule 29 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    SI              reduce using rule 29 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    MIENTRAS        reduce using rule 29 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    PARA            reduce using rule 29 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    IMPRIME         reduce using rule 29 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    FUNCION         reduce using rule 29 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    $end            reduce using rule 29 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    RLLAVE          reduce using rule 29 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)


state 123

    (11) funparams -> COMMA funparam .

    RPAREN          reduce using rule 11 (funparams -> COMMA funparam .)


state 124

    (8) funcion -> FUNCION ID LPAREN funparam RPAREN LLLAVE bloque . RLLAVE

    RLLAVE          shift and go to state 127


state 125

    (47) condicion -> SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE . else
    (48) else -> . SINO LLLAVE estatuto RLLAVE
    (49) else -> . empty
    (2) empty -> .

    SINO            shift and go to state 129
    ID              reduce using rule 2 (empty -> .)
    SI              reduce using rule 2 (empty -> .)
    MIENTRAS        reduce using rule 2 (empty -> .)
    PARA            reduce using rule 2 (empty -> .)
    IMPRIME         reduce using rule 2 (empty -> .)
    FUNCION         reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)
    RLLAVE          reduce using rule 2 (empty -> .)

    empty                          shift and go to state 130
    else                           shift and go to state 128

state 126

    (50) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN . LLLAVE estatuto RLLAVE

    LLLAVE          shift and go to state 131


state 127

    (8) funcion -> FUNCION ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE .

    FUNCION         reduce using rule 8 (funcion -> FUNCION ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE .)
    ID              reduce using rule 8 (funcion -> FUNCION ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE .)
    SI              reduce using rule 8 (funcion -> FUNCION ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE .)
    MIENTRAS        reduce using rule 8 (funcion -> FUNCION ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE .)
    PARA            reduce using rule 8 (funcion -> FUNCION ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE .)
    IMPRIME         reduce using rule 8 (funcion -> FUNCION ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE .)
    $end            reduce using rule 8 (funcion -> FUNCION ID LPAREN funparam RPAREN LLLAVE bloque RLLAVE .)


state 128

    (47) condicion -> SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else .

    ID              reduce using rule 47 (condicion -> SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else .)
    SI              reduce using rule 47 (condicion -> SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else .)
    MIENTRAS        reduce using rule 47 (condicion -> SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else .)
    PARA            reduce using rule 47 (condicion -> SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else .)
    IMPRIME         reduce using rule 47 (condicion -> SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else .)
    RLLAVE          reduce using rule 47 (condicion -> SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else .)
    FUNCION         reduce using rule 47 (condicion -> SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else .)
    $end            reduce using rule 47 (condicion -> SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else .)


state 129

    (48) else -> SINO . LLLAVE estatuto RLLAVE

    LLLAVE          shift and go to state 132


state 130

    (49) else -> empty .

    ID              reduce using rule 49 (else -> empty .)
    SI              reduce using rule 49 (else -> empty .)
    MIENTRAS        reduce using rule 49 (else -> empty .)
    PARA            reduce using rule 49 (else -> empty .)
    IMPRIME         reduce using rule 49 (else -> empty .)
    FUNCION         reduce using rule 49 (else -> empty .)
    $end            reduce using rule 49 (else -> empty .)
    RLLAVE          reduce using rule 49 (else -> empty .)


state 131

    (50) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE . estatuto RLLAVE
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

    para                           shift and go to state 13
    asignacion                     shift and go to state 18
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 133
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    escritura                      shift and go to state 20

state 132

    (48) else -> SINO LLLAVE . estatuto RLLAVE
    (16) estatuto -> . asignacion bloque
    (17) estatuto -> . condicion bloque
    (18) estatuto -> . mientras bloque
    (19) estatuto -> . para bloque
    (20) estatuto -> . escritura bloque
    (21) estatuto -> . llamada bloque
    (22) asignacion -> . ID IGUAL expresion
    (47) condicion -> . SI LPAREN expresion RPAREN LLLAVE estatuto RLLAVE else
    (53) mientras -> . MIENTRAS LPAREN expresion RPAREN LLLAVE estatuto RLLAVE
    (50) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (54) escritura -> . IMPRIME LPAREN esc RPAREN
    (23) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 15
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 14
    PARA            shift and go to state 4
    IMPRIME         shift and go to state 17

    asignacion                     shift and go to state 18
    para                           shift and go to state 13
    llamada                        shift and go to state 8
    estatuto                       shift and go to state 134
    mientras                       shift and go to state 5
    condicion                      shift and go to state 9
    escritura                      shift and go to state 20

state 133

    (50) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto . RLLAVE

    RLLAVE          shift and go to state 135


state 134

    (48) else -> SINO LLLAVE estatuto . RLLAVE

    RLLAVE          shift and go to state 136


state 135

    (50) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .

    ID              reduce using rule 50 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    SI              reduce using rule 50 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    MIENTRAS        reduce using rule 50 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    PARA            reduce using rule 50 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    IMPRIME         reduce using rule 50 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    RLLAVE          reduce using rule 50 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    FUNCION         reduce using rule 50 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    $end            reduce using rule 50 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)


state 136

    (48) else -> SINO LLLAVE estatuto RLLAVE .

    ID              reduce using rule 48 (else -> SINO LLLAVE estatuto RLLAVE .)
    SI              reduce using rule 48 (else -> SINO LLLAVE estatuto RLLAVE .)
    MIENTRAS        reduce using rule 48 (else -> SINO LLLAVE estatuto RLLAVE .)
    PARA            reduce using rule 48 (else -> SINO LLLAVE estatuto RLLAVE .)
    IMPRIME         reduce using rule 48 (else -> SINO LLLAVE estatuto RLLAVE .)
    FUNCION         reduce using rule 48 (else -> SINO LLLAVE estatuto RLLAVE .)
    $end            reduce using rule 48 (else -> SINO LLLAVE estatuto RLLAVE .)
    RLLAVE          reduce using rule 48 (else -> SINO LLLAVE estatuto RLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCION in state 3 resolved as shift
WARNING: shift/reduce conflict for ID in state 3 resolved as shift
WARNING: shift/reduce conflict for SI in state 3 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 3 resolved as shift
WARNING: shift/reduce conflict for PARA in state 3 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 3 resolved as shift
WARNING: shift/reduce conflict for ID in state 5 resolved as shift
WARNING: shift/reduce conflict for SI in state 5 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 5 resolved as shift
WARNING: shift/reduce conflict for PARA in state 5 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for SI in state 6 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 6 resolved as shift
WARNING: shift/reduce conflict for PARA in state 6 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for SI in state 8 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 8 resolved as shift
WARNING: shift/reduce conflict for PARA in state 8 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for SI in state 9 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 9 resolved as shift
WARNING: shift/reduce conflict for PARA in state 9 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 9 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for SI in state 11 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 11 resolved as shift
WARNING: shift/reduce conflict for PARA in state 11 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 13 resolved as shift
WARNING: shift/reduce conflict for SI in state 13 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 13 resolved as shift
WARNING: shift/reduce conflict for PARA in state 13 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 13 resolved as shift
WARNING: shift/reduce conflict for ID in state 18 resolved as shift
WARNING: shift/reduce conflict for SI in state 18 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 18 resolved as shift
WARNING: shift/reduce conflict for PARA in state 18 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 18 resolved as shift
WARNING: shift/reduce conflict for ID in state 20 resolved as shift
WARNING: shift/reduce conflict for SI in state 20 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 20 resolved as shift
WARNING: shift/reduce conflict for PARA in state 20 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 20 resolved as shift
WARNING: reduce/reduce conflict in state 10 resolved using rule (body -> empty)
WARNING: rejected rule (bloque -> empty) in state 10
