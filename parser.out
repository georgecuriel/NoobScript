Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    RBRAK
    VGLOBAL
    CLASE
    COLON
    LBRAK

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID programa_push_id vars programa_push_dict body
Rule 2     programa_push_id -> <empty>
Rule 3     programa_push_dict -> <empty>
Rule 4     vars -> VAR vars2
Rule 5     vars -> empty
Rule 6     vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4
Rule 7     vars_push_id -> <empty>
Rule 8     vars3 -> COMMA ID vars3_push_id vars3
Rule 9     vars3 -> empty
Rule 10    vars3_push_id -> <empty>
Rule 11    vars4 -> vars2
Rule 12    vars4 -> empty
Rule 13    tipo -> ENTERO
Rule 14    tipo -> DECIMAL
Rule 15    tipo -> FRASE
Rule 16    tipo -> ESVERDAD
Rule 17    empty -> <empty>
Rule 18    body -> funcion body
Rule 19    body -> bloque body
Rule 20    body -> empty
Rule 21    bloque -> estatuto
Rule 22    bloque -> empty
Rule 23    funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
Rule 24    funcion_increase_func -> <empty>
Rule 25    funcion_push_id -> <empty>
Rule 26    funparam -> tipo ID funparam_push_id funparams
Rule 27    funparam -> empty
Rule 28    funparam_push_id -> <empty>
Rule 29    funparams -> COMMA funparam
Rule 30    funparams -> empty
Rule 31    estatuto -> asignacion bloque
Rule 32    estatuto -> condicion bloque
Rule 33    estatuto -> mientras bloque
Rule 34    estatuto -> para bloque
Rule 35    estatuto -> escritura bloque
Rule 36    estatuto -> llamada bloque
Rule 37    asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion
Rule 38    asignacion_push_id -> <empty>
Rule 39    asignacion_push_igual -> <empty>
Rule 40    llamada -> ID LPAREN llamadaparam RPAREN
Rule 41    llamadaparam -> valor llamadaparams
Rule 42    llamadaparam -> empty
Rule 43    llamadaparams -> COMMA llamadaparam
Rule 44    llamadaparams -> empty
Rule 45    expresion -> exp expresions
Rule 46    expresion -> LEE LPAREN STRING RPAREN SEMICOL
Rule 47    expresions -> MAYOR expresions_push_mayor exp
Rule 48    expresions -> MENOR expresions_push_menor exp
Rule 49    expresions -> COMPARA expresions_push_compara exp
Rule 50    expresions -> empty
Rule 51    expresions_push_mayor -> <empty>
Rule 52    expresions_push_menor -> <empty>
Rule 53    expresions_push_compara -> <empty>
Rule 54    exp -> termino exps
Rule 55    exps -> PLUS exps_push_plus termino exps
Rule 56    exps -> MINUS exps_push_minus termino exps
Rule 57    exps -> empty
Rule 58    exps_push_plus -> <empty>
Rule 59    exps_push_minus -> <empty>
Rule 60    termino -> factor terminos
Rule 61    terminos -> TIMES terminos_push_times factor terminos
Rule 62    terminos -> DIVIDE terminos_push_divide factor terminos
Rule 63    terminos -> empty
Rule 64    terminos_push_times -> <empty>
Rule 65    terminos_push_divide -> <empty>
Rule 66    factor -> LPAREN factor_lparen expresion RPAREN factor_rparen
Rule 67    factor -> valor
Rule 68    factor_lparen -> <empty>
Rule 69    factor_rparen -> <empty>
Rule 70    valor -> ID
Rule 71    valor -> CTEINT
Rule 72    valor -> CTEDEC
Rule 73    valor -> llamada
Rule 74    condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
Rule 75    condicion_if -> <empty>
Rule 76    else -> SINO else_2 LLLAVE estatuto RLLAVE
Rule 77    else -> empty
Rule 78    else_2 -> <empty>
Rule 79    para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
Rule 80    param -> ID
Rule 81    param -> CTEINT
Rule 82    mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
Rule 83    mientras_haz_push -> <empty>
Rule 84    escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN
Rule 85    escritura_escribe -> <empty>
Rule 86    esc -> expresion escs
Rule 87    esc -> STRING escs
Rule 88    escs -> COMMA esc
Rule 89    escs -> empty

Terminals, with rules where they appear

CLASE                : 
COLON                : 
COMMA                : 8 29 43 79 88
COMPARA              : 49
CTEDEC               : 72
CTEINT               : 71 81
DECIMAL              : 14
DIVIDE               : 62
ENRANGO              : 79
ENTERO               : 13
ESVERDAD             : 16
FRASE                : 15
FUNCION              : 23
HAZ                  : 82
ID                   : 1 6 8 23 26 37 40 70 79 80
IGUAL                : 37
IMPRIME              : 84
LBRAK                : 
LEE                  : 46
LLLAVE               : 23 74 76 79 82
LPAREN               : 23 40 46 66 74 79 82 84
MAYOR                : 47
MENOR                : 48
MIENTRAS             : 82
MINUS                : 56
PARA                 : 79
PLUS                 : 55
PROGRAMA             : 1
RBRAK                : 
RLLAVE               : 23 74 76 79 82
RPAREN               : 23 40 46 66 74 79 82 84
SEMICOL              : 6 46
SI                   : 74
SINO                 : 76
STRING               : 46 87
TIMES                : 61
VAR                  : 4
VGLOBAL              : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 31
asignacion_push_id   : 37
asignacion_push_igual : 37
bloque               : 19 23 31 32 33 34 35 36
body                 : 1 18 19
condicion            : 32
condicion_if         : 74
else                 : 74
else_2               : 76
empty                : 5 9 12 20 22 27 30 42 44 50 57 63 77 89
esc                  : 84 88
escritura            : 35
escritura_escribe    : 84
escs                 : 86 87
estatuto             : 21 74 76 79 82
exp                  : 45 47 48 49
expresion            : 37 66 74 82 86
expresions           : 45
expresions_push_compara : 49
expresions_push_mayor : 47
expresions_push_menor : 48
exps                 : 54 55 56
exps_push_minus      : 56
exps_push_plus       : 55
factor               : 60 61 62
factor_lparen        : 66
factor_rparen        : 66
funcion              : 18
funcion_increase_func : 23
funcion_push_id      : 23
funparam             : 23 29
funparam_push_id     : 26
funparams            : 26
llamada              : 36 73
llamadaparam         : 40 43
llamadaparams        : 41
mientras             : 33
mientras_haz_push    : 82
para                 : 34
param                : 79 79
programa             : 0
programa_push_dict   : 1
programa_push_id     : 1
termino              : 54 55 56
terminos             : 60 61 62
terminos_push_divide : 62
terminos_push_times  : 61
tipo                 : 6 23 26
valor                : 41 67
vars                 : 1 23
vars2                : 4 11
vars3                : 6 8
vars3_push_id        : 8
vars4                : 6
vars_push_id         : 6

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID programa_push_id vars programa_push_dict body

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID programa_push_id vars programa_push_dict body

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . programa_push_id vars programa_push_dict body
    (2) programa_push_id -> .

    VAR             reduce using rule 2 (programa_push_id -> .)
    FUNCION         reduce using rule 2 (programa_push_id -> .)
    ID              reduce using rule 2 (programa_push_id -> .)
    SI              reduce using rule 2 (programa_push_id -> .)
    HAZ             reduce using rule 2 (programa_push_id -> .)
    PARA            reduce using rule 2 (programa_push_id -> .)
    IMPRIME         reduce using rule 2 (programa_push_id -> .)
    $end            reduce using rule 2 (programa_push_id -> .)

    programa_push_id               shift and go to state 4

state 4

    (1) programa -> PROGRAMA ID programa_push_id . vars programa_push_dict body
    (4) vars -> . VAR vars2
    (5) vars -> . empty
    (17) empty -> .

    VAR             shift and go to state 6
    FUNCION         reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)

    vars                           shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID programa_push_id vars . programa_push_dict body
    (3) programa_push_dict -> .

    FUNCION         reduce using rule 3 (programa_push_dict -> .)
    ID              reduce using rule 3 (programa_push_dict -> .)
    SI              reduce using rule 3 (programa_push_dict -> .)
    HAZ             reduce using rule 3 (programa_push_dict -> .)
    PARA            reduce using rule 3 (programa_push_dict -> .)
    IMPRIME         reduce using rule 3 (programa_push_dict -> .)
    $end            reduce using rule 3 (programa_push_dict -> .)

    programa_push_dict             shift and go to state 8

state 6

    (4) vars -> VAR . vars2
    (6) vars2 -> . tipo ID vars_push_id vars3 SEMICOL vars4
    (13) tipo -> . ENTERO
    (14) tipo -> . DECIMAL
    (15) tipo -> . FRASE
    (16) tipo -> . ESVERDAD

    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 11
    FRASE           shift and go to state 9
    ESVERDAD        shift and go to state 13

    vars2                          shift and go to state 12
    tipo                           shift and go to state 10

state 7

    (5) vars -> empty .

    ID              reduce using rule 5 (vars -> empty .)
    SI              reduce using rule 5 (vars -> empty .)
    HAZ             reduce using rule 5 (vars -> empty .)
    PARA            reduce using rule 5 (vars -> empty .)
    IMPRIME         reduce using rule 5 (vars -> empty .)
    RLLAVE          reduce using rule 5 (vars -> empty .)
    FUNCION         reduce using rule 5 (vars -> empty .)
    $end            reduce using rule 5 (vars -> empty .)


state 8

    (1) programa -> PROGRAMA ID programa_push_id vars programa_push_dict . body
    (18) body -> . funcion body
    (19) body -> . bloque body
    (20) body -> . empty
    (23) funcion -> . FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (17) empty -> .
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         shift and go to state 28
    $end            reduce using rule 17 (empty -> .)
    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

  ! FUNCION         [ reduce using rule 17 (empty -> .) ]
  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    mientras                       shift and go to state 15
    bloque                         shift and go to state 16
    estatuto                       shift and go to state 18
    llamada                        shift and go to state 20
    condicion                      shift and go to state 21
    empty                          shift and go to state 22
    funcion                        shift and go to state 23
    body                           shift and go to state 24
    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    escritura                      shift and go to state 31

state 9

    (15) tipo -> FRASE .

    ID              reduce using rule 15 (tipo -> FRASE .)


state 10

    (6) vars2 -> tipo . ID vars_push_id vars3 SEMICOL vars4

    ID              shift and go to state 32


state 11

    (14) tipo -> DECIMAL .

    ID              reduce using rule 14 (tipo -> DECIMAL .)


state 12

    (4) vars -> VAR vars2 .

    ID              reduce using rule 4 (vars -> VAR vars2 .)
    SI              reduce using rule 4 (vars -> VAR vars2 .)
    HAZ             reduce using rule 4 (vars -> VAR vars2 .)
    PARA            reduce using rule 4 (vars -> VAR vars2 .)
    IMPRIME         reduce using rule 4 (vars -> VAR vars2 .)
    RLLAVE          reduce using rule 4 (vars -> VAR vars2 .)
    FUNCION         reduce using rule 4 (vars -> VAR vars2 .)
    $end            reduce using rule 4 (vars -> VAR vars2 .)


state 13

    (16) tipo -> ESVERDAD .

    ID              reduce using rule 16 (tipo -> ESVERDAD .)


state 14

    (13) tipo -> ENTERO .

    ID              reduce using rule 13 (tipo -> ENTERO .)


state 15

    (33) estatuto -> mientras . bloque
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    llamada                        shift and go to state 20
    estatuto                       shift and go to state 18
    mientras                       shift and go to state 15
    condicion                      shift and go to state 21
    bloque                         shift and go to state 33
    empty                          shift and go to state 34
    escritura                      shift and go to state 31

state 16

    (19) body -> bloque . body
    (18) body -> . funcion body
    (19) body -> . bloque body
    (20) body -> . empty
    (23) funcion -> . FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (17) empty -> .
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         shift and go to state 28
    $end            reduce using rule 17 (empty -> .)
    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

  ! FUNCION         [ reduce using rule 17 (empty -> .) ]
  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    mientras                       shift and go to state 15
    bloque                         shift and go to state 16
    estatuto                       shift and go to state 18
    llamada                        shift and go to state 20
    condicion                      shift and go to state 21
    empty                          shift and go to state 22
    funcion                        shift and go to state 23
    body                           shift and go to state 35
    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    escritura                      shift and go to state 31

state 17

    (79) para -> PARA . ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    ID              shift and go to state 36


state 18

    (21) bloque -> estatuto .

    FUNCION         reduce using rule 21 (bloque -> estatuto .)
    ID              reduce using rule 21 (bloque -> estatuto .)
    SI              reduce using rule 21 (bloque -> estatuto .)
    HAZ             reduce using rule 21 (bloque -> estatuto .)
    PARA            reduce using rule 21 (bloque -> estatuto .)
    IMPRIME         reduce using rule 21 (bloque -> estatuto .)
    $end            reduce using rule 21 (bloque -> estatuto .)
    RLLAVE          reduce using rule 21 (bloque -> estatuto .)


state 19

    (74) condicion -> SI . LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else

    LPAREN          shift and go to state 37


state 20

    (36) estatuto -> llamada . bloque
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    mientras                       shift and go to state 15
    estatuto                       shift and go to state 18
    llamada                        shift and go to state 20
    condicion                      shift and go to state 21
    bloque                         shift and go to state 38
    empty                          shift and go to state 34
    escritura                      shift and go to state 31

state 21

    (32) estatuto -> condicion . bloque
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    llamada                        shift and go to state 20
    estatuto                       shift and go to state 18
    mientras                       shift and go to state 15
    condicion                      shift and go to state 21
    bloque                         shift and go to state 39
    empty                          shift and go to state 34
    escritura                      shift and go to state 31

state 22

    (20) body -> empty .
    (22) bloque -> empty .

  ! reduce/reduce conflict for $end resolved using rule 20 (body -> empty .)
    $end            reduce using rule 20 (body -> empty .)
    FUNCION         reduce using rule 22 (bloque -> empty .)
    ID              reduce using rule 22 (bloque -> empty .)
    SI              reduce using rule 22 (bloque -> empty .)
    HAZ             reduce using rule 22 (bloque -> empty .)
    PARA            reduce using rule 22 (bloque -> empty .)
    IMPRIME         reduce using rule 22 (bloque -> empty .)

  ! $end            [ reduce using rule 22 (bloque -> empty .) ]


state 23

    (18) body -> funcion . body
    (18) body -> . funcion body
    (19) body -> . bloque body
    (20) body -> . empty
    (23) funcion -> . FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (17) empty -> .
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         shift and go to state 28
    $end            reduce using rule 17 (empty -> .)
    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

  ! FUNCION         [ reduce using rule 17 (empty -> .) ]
  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    mientras                       shift and go to state 15
    bloque                         shift and go to state 16
    estatuto                       shift and go to state 18
    llamada                        shift and go to state 20
    condicion                      shift and go to state 21
    empty                          shift and go to state 22
    funcion                        shift and go to state 23
    body                           shift and go to state 40
    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    escritura                      shift and go to state 31

state 24

    (1) programa -> PROGRAMA ID programa_push_id vars programa_push_dict body .

    $end            reduce using rule 1 (programa -> PROGRAMA ID programa_push_id vars programa_push_dict body .)


state 25

    (34) estatuto -> para . bloque
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    llamada                        shift and go to state 20
    estatuto                       shift and go to state 18
    mientras                       shift and go to state 15
    condicion                      shift and go to state 21
    bloque                         shift and go to state 41
    empty                          shift and go to state 34
    escritura                      shift and go to state 31

state 26

    (82) mientras -> HAZ . mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (83) mientras_haz_push -> .

    LLLAVE          reduce using rule 83 (mientras_haz_push -> .)

    mientras_haz_push              shift and go to state 42

state 27

    (37) asignacion -> ID . asignacion_push_id IGUAL asignacion_push_igual expresion
    (40) llamada -> ID . LPAREN llamadaparam RPAREN
    (38) asignacion_push_id -> .

    LPAREN          shift and go to state 43
    IGUAL           reduce using rule 38 (asignacion_push_id -> .)

    asignacion_push_id             shift and go to state 44

state 28

    (23) funcion -> FUNCION . funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (24) funcion_increase_func -> .

    ENTERO          reduce using rule 24 (funcion_increase_func -> .)
    DECIMAL         reduce using rule 24 (funcion_increase_func -> .)
    FRASE           reduce using rule 24 (funcion_increase_func -> .)
    ESVERDAD        reduce using rule 24 (funcion_increase_func -> .)

    funcion_increase_func          shift and go to state 45

state 29

    (84) escritura -> IMPRIME . escritura_escribe LPAREN esc RPAREN
    (85) escritura_escribe -> .

    LPAREN          reduce using rule 85 (escritura_escribe -> .)

    escritura_escribe              shift and go to state 46

state 30

    (31) estatuto -> asignacion . bloque
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    llamada                        shift and go to state 20
    estatuto                       shift and go to state 18
    mientras                       shift and go to state 15
    condicion                      shift and go to state 21
    bloque                         shift and go to state 47
    empty                          shift and go to state 34
    escritura                      shift and go to state 31

state 31

    (35) estatuto -> escritura . bloque
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    llamada                        shift and go to state 20
    estatuto                       shift and go to state 18
    mientras                       shift and go to state 15
    condicion                      shift and go to state 21
    bloque                         shift and go to state 48
    empty                          shift and go to state 34
    escritura                      shift and go to state 31

state 32

    (6) vars2 -> tipo ID . vars_push_id vars3 SEMICOL vars4
    (7) vars_push_id -> .

    COMMA           reduce using rule 7 (vars_push_id -> .)
    SEMICOL         reduce using rule 7 (vars_push_id -> .)

    vars_push_id                   shift and go to state 49

state 33

    (33) estatuto -> mientras bloque .

    RLLAVE          reduce using rule 33 (estatuto -> mientras bloque .)
    FUNCION         reduce using rule 33 (estatuto -> mientras bloque .)
    ID              reduce using rule 33 (estatuto -> mientras bloque .)
    SI              reduce using rule 33 (estatuto -> mientras bloque .)
    HAZ             reduce using rule 33 (estatuto -> mientras bloque .)
    PARA            reduce using rule 33 (estatuto -> mientras bloque .)
    IMPRIME         reduce using rule 33 (estatuto -> mientras bloque .)
    $end            reduce using rule 33 (estatuto -> mientras bloque .)


state 34

    (22) bloque -> empty .

    FUNCION         reduce using rule 22 (bloque -> empty .)
    ID              reduce using rule 22 (bloque -> empty .)
    SI              reduce using rule 22 (bloque -> empty .)
    HAZ             reduce using rule 22 (bloque -> empty .)
    PARA            reduce using rule 22 (bloque -> empty .)
    IMPRIME         reduce using rule 22 (bloque -> empty .)
    $end            reduce using rule 22 (bloque -> empty .)
    RLLAVE          reduce using rule 22 (bloque -> empty .)


state 35

    (19) body -> bloque body .

    $end            reduce using rule 19 (body -> bloque body .)


state 36

    (79) para -> PARA ID . ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    ENRANGO         shift and go to state 50


state 37

    (74) condicion -> SI LPAREN . expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (45) expresion -> . exp expresions
    (46) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (54) exp -> . termino exps
    (60) termino -> . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LEE             shift and go to state 60
    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    expresion                      shift and go to state 59
    llamada                        shift and go to state 53
    termino                        shift and go to state 51
    exp                            shift and go to state 61
    factor                         shift and go to state 56
    valor                          shift and go to state 54

state 38

    (36) estatuto -> llamada bloque .

    RLLAVE          reduce using rule 36 (estatuto -> llamada bloque .)
    FUNCION         reduce using rule 36 (estatuto -> llamada bloque .)
    ID              reduce using rule 36 (estatuto -> llamada bloque .)
    SI              reduce using rule 36 (estatuto -> llamada bloque .)
    HAZ             reduce using rule 36 (estatuto -> llamada bloque .)
    PARA            reduce using rule 36 (estatuto -> llamada bloque .)
    IMPRIME         reduce using rule 36 (estatuto -> llamada bloque .)
    $end            reduce using rule 36 (estatuto -> llamada bloque .)


state 39

    (32) estatuto -> condicion bloque .

    RLLAVE          reduce using rule 32 (estatuto -> condicion bloque .)
    FUNCION         reduce using rule 32 (estatuto -> condicion bloque .)
    ID              reduce using rule 32 (estatuto -> condicion bloque .)
    SI              reduce using rule 32 (estatuto -> condicion bloque .)
    HAZ             reduce using rule 32 (estatuto -> condicion bloque .)
    PARA            reduce using rule 32 (estatuto -> condicion bloque .)
    IMPRIME         reduce using rule 32 (estatuto -> condicion bloque .)
    $end            reduce using rule 32 (estatuto -> condicion bloque .)


state 40

    (18) body -> funcion body .

    $end            reduce using rule 18 (body -> funcion body .)


state 41

    (34) estatuto -> para bloque .

    RLLAVE          reduce using rule 34 (estatuto -> para bloque .)
    FUNCION         reduce using rule 34 (estatuto -> para bloque .)
    ID              reduce using rule 34 (estatuto -> para bloque .)
    SI              reduce using rule 34 (estatuto -> para bloque .)
    HAZ             reduce using rule 34 (estatuto -> para bloque .)
    PARA            reduce using rule 34 (estatuto -> para bloque .)
    IMPRIME         reduce using rule 34 (estatuto -> para bloque .)
    $end            reduce using rule 34 (estatuto -> para bloque .)


state 42

    (82) mientras -> HAZ mientras_haz_push . LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN

    LLLAVE          shift and go to state 62


state 43

    (40) llamada -> ID LPAREN . llamadaparam RPAREN
    (41) llamadaparam -> . valor llamadaparams
    (42) llamadaparam -> . empty
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (17) empty -> .
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55
    RPAREN          reduce using rule 17 (empty -> .)

    llamada                        shift and go to state 53
    llamadaparam                   shift and go to state 63
    empty                          shift and go to state 65
    valor                          shift and go to state 64

state 44

    (37) asignacion -> ID asignacion_push_id . IGUAL asignacion_push_igual expresion

    IGUAL           shift and go to state 66


state 45

    (23) funcion -> FUNCION funcion_increase_func . tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (13) tipo -> . ENTERO
    (14) tipo -> . DECIMAL
    (15) tipo -> . FRASE
    (16) tipo -> . ESVERDAD

    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 11
    FRASE           shift and go to state 9
    ESVERDAD        shift and go to state 13

    tipo                           shift and go to state 67

state 46

    (84) escritura -> IMPRIME escritura_escribe . LPAREN esc RPAREN

    LPAREN          shift and go to state 68


state 47

    (31) estatuto -> asignacion bloque .

    RLLAVE          reduce using rule 31 (estatuto -> asignacion bloque .)
    FUNCION         reduce using rule 31 (estatuto -> asignacion bloque .)
    ID              reduce using rule 31 (estatuto -> asignacion bloque .)
    SI              reduce using rule 31 (estatuto -> asignacion bloque .)
    HAZ             reduce using rule 31 (estatuto -> asignacion bloque .)
    PARA            reduce using rule 31 (estatuto -> asignacion bloque .)
    IMPRIME         reduce using rule 31 (estatuto -> asignacion bloque .)
    $end            reduce using rule 31 (estatuto -> asignacion bloque .)


state 48

    (35) estatuto -> escritura bloque .

    RLLAVE          reduce using rule 35 (estatuto -> escritura bloque .)
    FUNCION         reduce using rule 35 (estatuto -> escritura bloque .)
    ID              reduce using rule 35 (estatuto -> escritura bloque .)
    SI              reduce using rule 35 (estatuto -> escritura bloque .)
    HAZ             reduce using rule 35 (estatuto -> escritura bloque .)
    PARA            reduce using rule 35 (estatuto -> escritura bloque .)
    IMPRIME         reduce using rule 35 (estatuto -> escritura bloque .)
    $end            reduce using rule 35 (estatuto -> escritura bloque .)


state 49

    (6) vars2 -> tipo ID vars_push_id . vars3 SEMICOL vars4
    (8) vars3 -> . COMMA ID vars3_push_id vars3
    (9) vars3 -> . empty
    (17) empty -> .

    COMMA           shift and go to state 70
    SEMICOL         reduce using rule 17 (empty -> .)

    vars3                          shift and go to state 69
    empty                          shift and go to state 71

state 50

    (79) para -> PARA ID ENRANGO . LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    LPAREN          shift and go to state 72


state 51

    (54) exp -> termino . exps
    (55) exps -> . PLUS exps_push_plus termino exps
    (56) exps -> . MINUS exps_push_minus termino exps
    (57) exps -> . empty
    (17) empty -> .

    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MAYOR           reduce using rule 17 (empty -> .)
    MENOR           reduce using rule 17 (empty -> .)
    COMPARA         reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    exps                           shift and go to state 73
    empty                          shift and go to state 76

state 52

    (71) valor -> CTEINT .

    TIMES           reduce using rule 71 (valor -> CTEINT .)
    DIVIDE          reduce using rule 71 (valor -> CTEINT .)
    PLUS            reduce using rule 71 (valor -> CTEINT .)
    MINUS           reduce using rule 71 (valor -> CTEINT .)
    MAYOR           reduce using rule 71 (valor -> CTEINT .)
    MENOR           reduce using rule 71 (valor -> CTEINT .)
    COMPARA         reduce using rule 71 (valor -> CTEINT .)
    RPAREN          reduce using rule 71 (valor -> CTEINT .)
    COMMA           reduce using rule 71 (valor -> CTEINT .)
    ID              reduce using rule 71 (valor -> CTEINT .)
    SI              reduce using rule 71 (valor -> CTEINT .)
    HAZ             reduce using rule 71 (valor -> CTEINT .)
    PARA            reduce using rule 71 (valor -> CTEINT .)
    IMPRIME         reduce using rule 71 (valor -> CTEINT .)
    FUNCION         reduce using rule 71 (valor -> CTEINT .)
    $end            reduce using rule 71 (valor -> CTEINT .)
    RLLAVE          reduce using rule 71 (valor -> CTEINT .)


state 53

    (73) valor -> llamada .

    TIMES           reduce using rule 73 (valor -> llamada .)
    DIVIDE          reduce using rule 73 (valor -> llamada .)
    PLUS            reduce using rule 73 (valor -> llamada .)
    MINUS           reduce using rule 73 (valor -> llamada .)
    MAYOR           reduce using rule 73 (valor -> llamada .)
    MENOR           reduce using rule 73 (valor -> llamada .)
    COMPARA         reduce using rule 73 (valor -> llamada .)
    RPAREN          reduce using rule 73 (valor -> llamada .)
    COMMA           reduce using rule 73 (valor -> llamada .)
    ID              reduce using rule 73 (valor -> llamada .)
    SI              reduce using rule 73 (valor -> llamada .)
    HAZ             reduce using rule 73 (valor -> llamada .)
    PARA            reduce using rule 73 (valor -> llamada .)
    IMPRIME         reduce using rule 73 (valor -> llamada .)
    FUNCION         reduce using rule 73 (valor -> llamada .)
    $end            reduce using rule 73 (valor -> llamada .)
    RLLAVE          reduce using rule 73 (valor -> llamada .)


state 54

    (67) factor -> valor .

    TIMES           reduce using rule 67 (factor -> valor .)
    DIVIDE          reduce using rule 67 (factor -> valor .)
    PLUS            reduce using rule 67 (factor -> valor .)
    MINUS           reduce using rule 67 (factor -> valor .)
    MAYOR           reduce using rule 67 (factor -> valor .)
    MENOR           reduce using rule 67 (factor -> valor .)
    COMPARA         reduce using rule 67 (factor -> valor .)
    COMMA           reduce using rule 67 (factor -> valor .)
    RPAREN          reduce using rule 67 (factor -> valor .)
    ID              reduce using rule 67 (factor -> valor .)
    SI              reduce using rule 67 (factor -> valor .)
    HAZ             reduce using rule 67 (factor -> valor .)
    PARA            reduce using rule 67 (factor -> valor .)
    IMPRIME         reduce using rule 67 (factor -> valor .)
    FUNCION         reduce using rule 67 (factor -> valor .)
    $end            reduce using rule 67 (factor -> valor .)
    RLLAVE          reduce using rule 67 (factor -> valor .)


state 55

    (72) valor -> CTEDEC .

    TIMES           reduce using rule 72 (valor -> CTEDEC .)
    DIVIDE          reduce using rule 72 (valor -> CTEDEC .)
    PLUS            reduce using rule 72 (valor -> CTEDEC .)
    MINUS           reduce using rule 72 (valor -> CTEDEC .)
    MAYOR           reduce using rule 72 (valor -> CTEDEC .)
    MENOR           reduce using rule 72 (valor -> CTEDEC .)
    COMPARA         reduce using rule 72 (valor -> CTEDEC .)
    RPAREN          reduce using rule 72 (valor -> CTEDEC .)
    COMMA           reduce using rule 72 (valor -> CTEDEC .)
    ID              reduce using rule 72 (valor -> CTEDEC .)
    SI              reduce using rule 72 (valor -> CTEDEC .)
    HAZ             reduce using rule 72 (valor -> CTEDEC .)
    PARA            reduce using rule 72 (valor -> CTEDEC .)
    IMPRIME         reduce using rule 72 (valor -> CTEDEC .)
    FUNCION         reduce using rule 72 (valor -> CTEDEC .)
    $end            reduce using rule 72 (valor -> CTEDEC .)
    RLLAVE          reduce using rule 72 (valor -> CTEDEC .)


state 56

    (60) termino -> factor . terminos
    (61) terminos -> . TIMES terminos_push_times factor terminos
    (62) terminos -> . DIVIDE terminos_push_divide factor terminos
    (63) terminos -> . empty
    (17) empty -> .

    TIMES           shift and go to state 79
    DIVIDE          shift and go to state 77
    PLUS            reduce using rule 17 (empty -> .)
    MINUS           reduce using rule 17 (empty -> .)
    MAYOR           reduce using rule 17 (empty -> .)
    MENOR           reduce using rule 17 (empty -> .)
    COMPARA         reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    terminos                       shift and go to state 78
    empty                          shift and go to state 80

state 57

    (66) factor -> LPAREN . factor_lparen expresion RPAREN factor_rparen
    (68) factor_lparen -> .

    LEE             reduce using rule 68 (factor_lparen -> .)
    LPAREN          reduce using rule 68 (factor_lparen -> .)
    ID              reduce using rule 68 (factor_lparen -> .)
    CTEINT          reduce using rule 68 (factor_lparen -> .)
    CTEDEC          reduce using rule 68 (factor_lparen -> .)

    factor_lparen                  shift and go to state 81

state 58

    (70) valor -> ID .
    (40) llamada -> ID . LPAREN llamadaparam RPAREN

    TIMES           reduce using rule 70 (valor -> ID .)
    DIVIDE          reduce using rule 70 (valor -> ID .)
    PLUS            reduce using rule 70 (valor -> ID .)
    MINUS           reduce using rule 70 (valor -> ID .)
    MAYOR           reduce using rule 70 (valor -> ID .)
    MENOR           reduce using rule 70 (valor -> ID .)
    COMPARA         reduce using rule 70 (valor -> ID .)
    RPAREN          reduce using rule 70 (valor -> ID .)
    COMMA           reduce using rule 70 (valor -> ID .)
    ID              reduce using rule 70 (valor -> ID .)
    SI              reduce using rule 70 (valor -> ID .)
    HAZ             reduce using rule 70 (valor -> ID .)
    PARA            reduce using rule 70 (valor -> ID .)
    IMPRIME         reduce using rule 70 (valor -> ID .)
    FUNCION         reduce using rule 70 (valor -> ID .)
    $end            reduce using rule 70 (valor -> ID .)
    RLLAVE          reduce using rule 70 (valor -> ID .)
    LPAREN          shift and go to state 43


state 59

    (74) condicion -> SI LPAREN expresion . RPAREN condicion_if LLLAVE estatuto RLLAVE else

    RPAREN          shift and go to state 82


state 60

    (46) expresion -> LEE . LPAREN STRING RPAREN SEMICOL

    LPAREN          shift and go to state 83


state 61

    (45) expresion -> exp . expresions
    (47) expresions -> . MAYOR expresions_push_mayor exp
    (48) expresions -> . MENOR expresions_push_menor exp
    (49) expresions -> . COMPARA expresions_push_compara exp
    (50) expresions -> . empty
    (17) empty -> .

    MAYOR           shift and go to state 87
    MENOR           shift and go to state 86
    COMPARA         shift and go to state 85
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    expresions                     shift and go to state 84
    empty                          shift and go to state 88

state 62

    (82) mientras -> HAZ mientras_haz_push LLLAVE . estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    llamada                        shift and go to state 20
    estatuto                       shift and go to state 89
    mientras                       shift and go to state 15
    condicion                      shift and go to state 21
    escritura                      shift and go to state 31

state 63

    (40) llamada -> ID LPAREN llamadaparam . RPAREN

    RPAREN          shift and go to state 90


state 64

    (41) llamadaparam -> valor . llamadaparams
    (43) llamadaparams -> . COMMA llamadaparam
    (44) llamadaparams -> . empty
    (17) empty -> .

    COMMA           shift and go to state 91
    RPAREN          reduce using rule 17 (empty -> .)

    llamadaparams                  shift and go to state 92
    empty                          shift and go to state 93

state 65

    (42) llamadaparam -> empty .

    RPAREN          reduce using rule 42 (llamadaparam -> empty .)


state 66

    (37) asignacion -> ID asignacion_push_id IGUAL . asignacion_push_igual expresion
    (39) asignacion_push_igual -> .

    LEE             reduce using rule 39 (asignacion_push_igual -> .)
    LPAREN          reduce using rule 39 (asignacion_push_igual -> .)
    ID              reduce using rule 39 (asignacion_push_igual -> .)
    CTEINT          reduce using rule 39 (asignacion_push_igual -> .)
    CTEDEC          reduce using rule 39 (asignacion_push_igual -> .)

    asignacion_push_igual          shift and go to state 94

state 67

    (23) funcion -> FUNCION funcion_increase_func tipo . ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE

    ID              shift and go to state 95


state 68

    (84) escritura -> IMPRIME escritura_escribe LPAREN . esc RPAREN
    (86) esc -> . expresion escs
    (87) esc -> . STRING escs
    (45) expresion -> . exp expresions
    (46) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (54) exp -> . termino exps
    (60) termino -> . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    STRING          shift and go to state 97
    LEE             shift and go to state 60
    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    expresion                      shift and go to state 98
    valor                          shift and go to state 54
    llamada                        shift and go to state 53
    esc                            shift and go to state 96
    termino                        shift and go to state 51
    exp                            shift and go to state 61
    factor                         shift and go to state 56

state 69

    (6) vars2 -> tipo ID vars_push_id vars3 . SEMICOL vars4

    SEMICOL         shift and go to state 99


state 70

    (8) vars3 -> COMMA . ID vars3_push_id vars3

    ID              shift and go to state 100


state 71

    (9) vars3 -> empty .

    SEMICOL         reduce using rule 9 (vars3 -> empty .)


state 72

    (79) para -> PARA ID ENRANGO LPAREN . param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (80) param -> . ID
    (81) param -> . CTEINT

    ID              shift and go to state 103
    CTEINT          shift and go to state 101

    param                          shift and go to state 102

state 73

    (54) exp -> termino exps .

    RPAREN          reduce using rule 54 (exp -> termino exps .)
    COMMA           reduce using rule 54 (exp -> termino exps .)
    ID              reduce using rule 54 (exp -> termino exps .)
    SI              reduce using rule 54 (exp -> termino exps .)
    HAZ             reduce using rule 54 (exp -> termino exps .)
    PARA            reduce using rule 54 (exp -> termino exps .)
    IMPRIME         reduce using rule 54 (exp -> termino exps .)
    FUNCION         reduce using rule 54 (exp -> termino exps .)
    $end            reduce using rule 54 (exp -> termino exps .)
    RLLAVE          reduce using rule 54 (exp -> termino exps .)
    MAYOR           reduce using rule 54 (exp -> termino exps .)
    MENOR           reduce using rule 54 (exp -> termino exps .)
    COMPARA         reduce using rule 54 (exp -> termino exps .)


state 74

    (55) exps -> PLUS . exps_push_plus termino exps
    (58) exps_push_plus -> .

    LPAREN          reduce using rule 58 (exps_push_plus -> .)
    ID              reduce using rule 58 (exps_push_plus -> .)
    CTEINT          reduce using rule 58 (exps_push_plus -> .)
    CTEDEC          reduce using rule 58 (exps_push_plus -> .)

    exps_push_plus                 shift and go to state 104

state 75

    (56) exps -> MINUS . exps_push_minus termino exps
    (59) exps_push_minus -> .

    LPAREN          reduce using rule 59 (exps_push_minus -> .)
    ID              reduce using rule 59 (exps_push_minus -> .)
    CTEINT          reduce using rule 59 (exps_push_minus -> .)
    CTEDEC          reduce using rule 59 (exps_push_minus -> .)

    exps_push_minus                shift and go to state 105

state 76

    (57) exps -> empty .

    MAYOR           reduce using rule 57 (exps -> empty .)
    MENOR           reduce using rule 57 (exps -> empty .)
    COMPARA         reduce using rule 57 (exps -> empty .)
    RPAREN          reduce using rule 57 (exps -> empty .)
    COMMA           reduce using rule 57 (exps -> empty .)
    ID              reduce using rule 57 (exps -> empty .)
    SI              reduce using rule 57 (exps -> empty .)
    HAZ             reduce using rule 57 (exps -> empty .)
    PARA            reduce using rule 57 (exps -> empty .)
    IMPRIME         reduce using rule 57 (exps -> empty .)
    FUNCION         reduce using rule 57 (exps -> empty .)
    $end            reduce using rule 57 (exps -> empty .)
    RLLAVE          reduce using rule 57 (exps -> empty .)


state 77

    (62) terminos -> DIVIDE . terminos_push_divide factor terminos
    (65) terminos_push_divide -> .

    LPAREN          reduce using rule 65 (terminos_push_divide -> .)
    ID              reduce using rule 65 (terminos_push_divide -> .)
    CTEINT          reduce using rule 65 (terminos_push_divide -> .)
    CTEDEC          reduce using rule 65 (terminos_push_divide -> .)

    terminos_push_divide           shift and go to state 106

state 78

    (60) termino -> factor terminos .

    PLUS            reduce using rule 60 (termino -> factor terminos .)
    MINUS           reduce using rule 60 (termino -> factor terminos .)
    MAYOR           reduce using rule 60 (termino -> factor terminos .)
    MENOR           reduce using rule 60 (termino -> factor terminos .)
    COMPARA         reduce using rule 60 (termino -> factor terminos .)
    RPAREN          reduce using rule 60 (termino -> factor terminos .)
    COMMA           reduce using rule 60 (termino -> factor terminos .)
    ID              reduce using rule 60 (termino -> factor terminos .)
    SI              reduce using rule 60 (termino -> factor terminos .)
    HAZ             reduce using rule 60 (termino -> factor terminos .)
    PARA            reduce using rule 60 (termino -> factor terminos .)
    IMPRIME         reduce using rule 60 (termino -> factor terminos .)
    FUNCION         reduce using rule 60 (termino -> factor terminos .)
    $end            reduce using rule 60 (termino -> factor terminos .)
    RLLAVE          reduce using rule 60 (termino -> factor terminos .)


state 79

    (61) terminos -> TIMES . terminos_push_times factor terminos
    (64) terminos_push_times -> .

    LPAREN          reduce using rule 64 (terminos_push_times -> .)
    ID              reduce using rule 64 (terminos_push_times -> .)
    CTEINT          reduce using rule 64 (terminos_push_times -> .)
    CTEDEC          reduce using rule 64 (terminos_push_times -> .)

    terminos_push_times            shift and go to state 107

state 80

    (63) terminos -> empty .

    PLUS            reduce using rule 63 (terminos -> empty .)
    MINUS           reduce using rule 63 (terminos -> empty .)
    MAYOR           reduce using rule 63 (terminos -> empty .)
    MENOR           reduce using rule 63 (terminos -> empty .)
    COMPARA         reduce using rule 63 (terminos -> empty .)
    RPAREN          reduce using rule 63 (terminos -> empty .)
    COMMA           reduce using rule 63 (terminos -> empty .)
    ID              reduce using rule 63 (terminos -> empty .)
    SI              reduce using rule 63 (terminos -> empty .)
    HAZ             reduce using rule 63 (terminos -> empty .)
    PARA            reduce using rule 63 (terminos -> empty .)
    IMPRIME         reduce using rule 63 (terminos -> empty .)
    FUNCION         reduce using rule 63 (terminos -> empty .)
    $end            reduce using rule 63 (terminos -> empty .)
    RLLAVE          reduce using rule 63 (terminos -> empty .)


state 81

    (66) factor -> LPAREN factor_lparen . expresion RPAREN factor_rparen
    (45) expresion -> . exp expresions
    (46) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (54) exp -> . termino exps
    (60) termino -> . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LEE             shift and go to state 60
    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    expresion                      shift and go to state 108
    valor                          shift and go to state 54
    llamada                        shift and go to state 53
    termino                        shift and go to state 51
    exp                            shift and go to state 61
    factor                         shift and go to state 56

state 82

    (74) condicion -> SI LPAREN expresion RPAREN . condicion_if LLLAVE estatuto RLLAVE else
    (75) condicion_if -> .

    LLLAVE          reduce using rule 75 (condicion_if -> .)

    condicion_if                   shift and go to state 109

state 83

    (46) expresion -> LEE LPAREN . STRING RPAREN SEMICOL

    STRING          shift and go to state 110


state 84

    (45) expresion -> exp expresions .

    RPAREN          reduce using rule 45 (expresion -> exp expresions .)
    COMMA           reduce using rule 45 (expresion -> exp expresions .)
    ID              reduce using rule 45 (expresion -> exp expresions .)
    SI              reduce using rule 45 (expresion -> exp expresions .)
    HAZ             reduce using rule 45 (expresion -> exp expresions .)
    PARA            reduce using rule 45 (expresion -> exp expresions .)
    IMPRIME         reduce using rule 45 (expresion -> exp expresions .)
    FUNCION         reduce using rule 45 (expresion -> exp expresions .)
    $end            reduce using rule 45 (expresion -> exp expresions .)
    RLLAVE          reduce using rule 45 (expresion -> exp expresions .)


state 85

    (49) expresions -> COMPARA . expresions_push_compara exp
    (53) expresions_push_compara -> .

    LPAREN          reduce using rule 53 (expresions_push_compara -> .)
    ID              reduce using rule 53 (expresions_push_compara -> .)
    CTEINT          reduce using rule 53 (expresions_push_compara -> .)
    CTEDEC          reduce using rule 53 (expresions_push_compara -> .)

    expresions_push_compara        shift and go to state 111

state 86

    (48) expresions -> MENOR . expresions_push_menor exp
    (52) expresions_push_menor -> .

    LPAREN          reduce using rule 52 (expresions_push_menor -> .)
    ID              reduce using rule 52 (expresions_push_menor -> .)
    CTEINT          reduce using rule 52 (expresions_push_menor -> .)
    CTEDEC          reduce using rule 52 (expresions_push_menor -> .)

    expresions_push_menor          shift and go to state 112

state 87

    (47) expresions -> MAYOR . expresions_push_mayor exp
    (51) expresions_push_mayor -> .

    LPAREN          reduce using rule 51 (expresions_push_mayor -> .)
    ID              reduce using rule 51 (expresions_push_mayor -> .)
    CTEINT          reduce using rule 51 (expresions_push_mayor -> .)
    CTEDEC          reduce using rule 51 (expresions_push_mayor -> .)

    expresions_push_mayor          shift and go to state 113

state 88

    (50) expresions -> empty .

    RPAREN          reduce using rule 50 (expresions -> empty .)
    COMMA           reduce using rule 50 (expresions -> empty .)
    ID              reduce using rule 50 (expresions -> empty .)
    SI              reduce using rule 50 (expresions -> empty .)
    HAZ             reduce using rule 50 (expresions -> empty .)
    PARA            reduce using rule 50 (expresions -> empty .)
    IMPRIME         reduce using rule 50 (expresions -> empty .)
    FUNCION         reduce using rule 50 (expresions -> empty .)
    $end            reduce using rule 50 (expresions -> empty .)
    RLLAVE          reduce using rule 50 (expresions -> empty .)


state 89

    (82) mientras -> HAZ mientras_haz_push LLLAVE estatuto . RLLAVE MIENTRAS LPAREN expresion RPAREN

    RLLAVE          shift and go to state 114


state 90

    (40) llamada -> ID LPAREN llamadaparam RPAREN .

    ID              reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    SI              reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    HAZ             reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    PARA            reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    IMPRIME         reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    FUNCION         reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    $end            reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    TIMES           reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    DIVIDE          reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    PLUS            reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    MINUS           reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    MAYOR           reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    MENOR           reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    COMPARA         reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    RPAREN          reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    COMMA           reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    RLLAVE          reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)


state 91

    (43) llamadaparams -> COMMA . llamadaparam
    (41) llamadaparam -> . valor llamadaparams
    (42) llamadaparam -> . empty
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (17) empty -> .
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55
    RPAREN          reduce using rule 17 (empty -> .)

    llamada                        shift and go to state 53
    llamadaparam                   shift and go to state 115
    empty                          shift and go to state 65
    valor                          shift and go to state 64

state 92

    (41) llamadaparam -> valor llamadaparams .

    RPAREN          reduce using rule 41 (llamadaparam -> valor llamadaparams .)


state 93

    (44) llamadaparams -> empty .

    RPAREN          reduce using rule 44 (llamadaparams -> empty .)


state 94

    (37) asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual . expresion
    (45) expresion -> . exp expresions
    (46) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (54) exp -> . termino exps
    (60) termino -> . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LEE             shift and go to state 60
    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    expresion                      shift and go to state 116
    valor                          shift and go to state 54
    llamada                        shift and go to state 53
    termino                        shift and go to state 51
    exp                            shift and go to state 61
    factor                         shift and go to state 56

state 95

    (23) funcion -> FUNCION funcion_increase_func tipo ID . funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (25) funcion_push_id -> .

    LPAREN          reduce using rule 25 (funcion_push_id -> .)

    funcion_push_id                shift and go to state 117

state 96

    (84) escritura -> IMPRIME escritura_escribe LPAREN esc . RPAREN

    RPAREN          shift and go to state 118


state 97

    (87) esc -> STRING . escs
    (88) escs -> . COMMA esc
    (89) escs -> . empty
    (17) empty -> .

    COMMA           shift and go to state 120
    RPAREN          reduce using rule 17 (empty -> .)

    escs                           shift and go to state 119
    empty                          shift and go to state 121

state 98

    (86) esc -> expresion . escs
    (88) escs -> . COMMA esc
    (89) escs -> . empty
    (17) empty -> .

    COMMA           shift and go to state 120
    RPAREN          reduce using rule 17 (empty -> .)

    escs                           shift and go to state 122
    empty                          shift and go to state 121

state 99

    (6) vars2 -> tipo ID vars_push_id vars3 SEMICOL . vars4
    (11) vars4 -> . vars2
    (12) vars4 -> . empty
    (6) vars2 -> . tipo ID vars_push_id vars3 SEMICOL vars4
    (17) empty -> .
    (13) tipo -> . ENTERO
    (14) tipo -> . DECIMAL
    (15) tipo -> . FRASE
    (16) tipo -> . ESVERDAD

    FUNCION         reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 11
    FRASE           shift and go to state 9
    ESVERDAD        shift and go to state 13

    tipo                           shift and go to state 10
    vars2                          shift and go to state 123
    vars4                          shift and go to state 124
    empty                          shift and go to state 125

state 100

    (8) vars3 -> COMMA ID . vars3_push_id vars3
    (10) vars3_push_id -> .

    COMMA           reduce using rule 10 (vars3_push_id -> .)
    SEMICOL         reduce using rule 10 (vars3_push_id -> .)

    vars3_push_id                  shift and go to state 126

state 101

    (81) param -> CTEINT .

    COMMA           reduce using rule 81 (param -> CTEINT .)
    RPAREN          reduce using rule 81 (param -> CTEINT .)


state 102

    (79) para -> PARA ID ENRANGO LPAREN param . COMMA param RPAREN LLLAVE estatuto RLLAVE

    COMMA           shift and go to state 127


state 103

    (80) param -> ID .

    COMMA           reduce using rule 80 (param -> ID .)
    RPAREN          reduce using rule 80 (param -> ID .)


state 104

    (55) exps -> PLUS exps_push_plus . termino exps
    (60) termino -> . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    valor                          shift and go to state 54
    llamada                        shift and go to state 53
    termino                        shift and go to state 128
    factor                         shift and go to state 56

state 105

    (56) exps -> MINUS exps_push_minus . termino exps
    (60) termino -> . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    valor                          shift and go to state 54
    llamada                        shift and go to state 53
    termino                        shift and go to state 129
    factor                         shift and go to state 56

state 106

    (62) terminos -> DIVIDE terminos_push_divide . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    valor                          shift and go to state 54
    llamada                        shift and go to state 53
    factor                         shift and go to state 130

state 107

    (61) terminos -> TIMES terminos_push_times . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    valor                          shift and go to state 54
    llamada                        shift and go to state 53
    factor                         shift and go to state 131

state 108

    (66) factor -> LPAREN factor_lparen expresion . RPAREN factor_rparen

    RPAREN          shift and go to state 132


state 109

    (74) condicion -> SI LPAREN expresion RPAREN condicion_if . LLLAVE estatuto RLLAVE else

    LLLAVE          shift and go to state 133


state 110

    (46) expresion -> LEE LPAREN STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 134


state 111

    (49) expresions -> COMPARA expresions_push_compara . exp
    (54) exp -> . termino exps
    (60) termino -> . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    valor                          shift and go to state 54
    llamada                        shift and go to state 53
    termino                        shift and go to state 51
    exp                            shift and go to state 135
    factor                         shift and go to state 56

state 112

    (48) expresions -> MENOR expresions_push_menor . exp
    (54) exp -> . termino exps
    (60) termino -> . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    valor                          shift and go to state 54
    llamada                        shift and go to state 53
    termino                        shift and go to state 51
    exp                            shift and go to state 136
    factor                         shift and go to state 56

state 113

    (47) expresions -> MAYOR expresions_push_mayor . exp
    (54) exp -> . termino exps
    (60) termino -> . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    llamada                        shift and go to state 53
    termino                        shift and go to state 51
    exp                            shift and go to state 137
    factor                         shift and go to state 56
    valor                          shift and go to state 54

state 114

    (82) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE . MIENTRAS LPAREN expresion RPAREN

    MIENTRAS        shift and go to state 138


state 115

    (43) llamadaparams -> COMMA llamadaparam .

    RPAREN          reduce using rule 43 (llamadaparams -> COMMA llamadaparam .)


state 116

    (37) asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .

    ID              reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    SI              reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    HAZ             reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    PARA            reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    IMPRIME         reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    FUNCION         reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    $end            reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    RLLAVE          reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)


state 117

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id . LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE

    LPAREN          shift and go to state 139


state 118

    (84) escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .

    ID              reduce using rule 84 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    SI              reduce using rule 84 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    HAZ             reduce using rule 84 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    PARA            reduce using rule 84 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    IMPRIME         reduce using rule 84 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    FUNCION         reduce using rule 84 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    $end            reduce using rule 84 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    RLLAVE          reduce using rule 84 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)


state 119

    (87) esc -> STRING escs .

    RPAREN          reduce using rule 87 (esc -> STRING escs .)


state 120

    (88) escs -> COMMA . esc
    (86) esc -> . expresion escs
    (87) esc -> . STRING escs
    (45) expresion -> . exp expresions
    (46) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (54) exp -> . termino exps
    (60) termino -> . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    STRING          shift and go to state 97
    LEE             shift and go to state 60
    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    expresion                      shift and go to state 98
    valor                          shift and go to state 54
    llamada                        shift and go to state 53
    esc                            shift and go to state 140
    termino                        shift and go to state 51
    exp                            shift and go to state 61
    factor                         shift and go to state 56

state 121

    (89) escs -> empty .

    RPAREN          reduce using rule 89 (escs -> empty .)


state 122

    (86) esc -> expresion escs .

    RPAREN          reduce using rule 86 (esc -> expresion escs .)


state 123

    (11) vars4 -> vars2 .

    FUNCION         reduce using rule 11 (vars4 -> vars2 .)
    ID              reduce using rule 11 (vars4 -> vars2 .)
    SI              reduce using rule 11 (vars4 -> vars2 .)
    HAZ             reduce using rule 11 (vars4 -> vars2 .)
    PARA            reduce using rule 11 (vars4 -> vars2 .)
    IMPRIME         reduce using rule 11 (vars4 -> vars2 .)
    $end            reduce using rule 11 (vars4 -> vars2 .)
    RLLAVE          reduce using rule 11 (vars4 -> vars2 .)


state 124

    (6) vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .

    FUNCION         reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    ID              reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    SI              reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    HAZ             reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    PARA            reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    IMPRIME         reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    $end            reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    RLLAVE          reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)


state 125

    (12) vars4 -> empty .

    FUNCION         reduce using rule 12 (vars4 -> empty .)
    ID              reduce using rule 12 (vars4 -> empty .)
    SI              reduce using rule 12 (vars4 -> empty .)
    HAZ             reduce using rule 12 (vars4 -> empty .)
    PARA            reduce using rule 12 (vars4 -> empty .)
    IMPRIME         reduce using rule 12 (vars4 -> empty .)
    $end            reduce using rule 12 (vars4 -> empty .)
    RLLAVE          reduce using rule 12 (vars4 -> empty .)


state 126

    (8) vars3 -> COMMA ID vars3_push_id . vars3
    (8) vars3 -> . COMMA ID vars3_push_id vars3
    (9) vars3 -> . empty
    (17) empty -> .

    COMMA           shift and go to state 70
    SEMICOL         reduce using rule 17 (empty -> .)

    vars3                          shift and go to state 141
    empty                          shift and go to state 71

state 127

    (79) para -> PARA ID ENRANGO LPAREN param COMMA . param RPAREN LLLAVE estatuto RLLAVE
    (80) param -> . ID
    (81) param -> . CTEINT

    ID              shift and go to state 103
    CTEINT          shift and go to state 101

    param                          shift and go to state 142

state 128

    (55) exps -> PLUS exps_push_plus termino . exps
    (55) exps -> . PLUS exps_push_plus termino exps
    (56) exps -> . MINUS exps_push_minus termino exps
    (57) exps -> . empty
    (17) empty -> .

    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MAYOR           reduce using rule 17 (empty -> .)
    MENOR           reduce using rule 17 (empty -> .)
    COMPARA         reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    exps                           shift and go to state 143
    empty                          shift and go to state 76

state 129

    (56) exps -> MINUS exps_push_minus termino . exps
    (55) exps -> . PLUS exps_push_plus termino exps
    (56) exps -> . MINUS exps_push_minus termino exps
    (57) exps -> . empty
    (17) empty -> .

    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MAYOR           reduce using rule 17 (empty -> .)
    MENOR           reduce using rule 17 (empty -> .)
    COMPARA         reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    exps                           shift and go to state 144
    empty                          shift and go to state 76

state 130

    (62) terminos -> DIVIDE terminos_push_divide factor . terminos
    (61) terminos -> . TIMES terminos_push_times factor terminos
    (62) terminos -> . DIVIDE terminos_push_divide factor terminos
    (63) terminos -> . empty
    (17) empty -> .

    TIMES           shift and go to state 79
    DIVIDE          shift and go to state 77
    PLUS            reduce using rule 17 (empty -> .)
    MINUS           reduce using rule 17 (empty -> .)
    MAYOR           reduce using rule 17 (empty -> .)
    MENOR           reduce using rule 17 (empty -> .)
    COMPARA         reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    terminos                       shift and go to state 145
    empty                          shift and go to state 80

state 131

    (61) terminos -> TIMES terminos_push_times factor . terminos
    (61) terminos -> . TIMES terminos_push_times factor terminos
    (62) terminos -> . DIVIDE terminos_push_divide factor terminos
    (63) terminos -> . empty
    (17) empty -> .

    TIMES           shift and go to state 79
    DIVIDE          shift and go to state 77
    PLUS            reduce using rule 17 (empty -> .)
    MINUS           reduce using rule 17 (empty -> .)
    MAYOR           reduce using rule 17 (empty -> .)
    MENOR           reduce using rule 17 (empty -> .)
    COMPARA         reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    terminos                       shift and go to state 146
    empty                          shift and go to state 80

state 132

    (66) factor -> LPAREN factor_lparen expresion RPAREN . factor_rparen
    (69) factor_rparen -> .

    TIMES           reduce using rule 69 (factor_rparen -> .)
    DIVIDE          reduce using rule 69 (factor_rparen -> .)
    PLUS            reduce using rule 69 (factor_rparen -> .)
    MINUS           reduce using rule 69 (factor_rparen -> .)
    MAYOR           reduce using rule 69 (factor_rparen -> .)
    MENOR           reduce using rule 69 (factor_rparen -> .)
    COMPARA         reduce using rule 69 (factor_rparen -> .)
    RPAREN          reduce using rule 69 (factor_rparen -> .)
    COMMA           reduce using rule 69 (factor_rparen -> .)
    ID              reduce using rule 69 (factor_rparen -> .)
    SI              reduce using rule 69 (factor_rparen -> .)
    HAZ             reduce using rule 69 (factor_rparen -> .)
    PARA            reduce using rule 69 (factor_rparen -> .)
    IMPRIME         reduce using rule 69 (factor_rparen -> .)
    FUNCION         reduce using rule 69 (factor_rparen -> .)
    $end            reduce using rule 69 (factor_rparen -> .)
    RLLAVE          reduce using rule 69 (factor_rparen -> .)

    factor_rparen                  shift and go to state 147

state 133

    (74) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE . estatuto RLLAVE else
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    llamada                        shift and go to state 20
    estatuto                       shift and go to state 148
    mientras                       shift and go to state 15
    condicion                      shift and go to state 21
    escritura                      shift and go to state 31

state 134

    (46) expresion -> LEE LPAREN STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 149


state 135

    (49) expresions -> COMPARA expresions_push_compara exp .

    RPAREN          reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    COMMA           reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    ID              reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    SI              reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    HAZ             reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    PARA            reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    IMPRIME         reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    FUNCION         reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    $end            reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    RLLAVE          reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)


state 136

    (48) expresions -> MENOR expresions_push_menor exp .

    RPAREN          reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    COMMA           reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    ID              reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    SI              reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    HAZ             reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    PARA            reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    IMPRIME         reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    FUNCION         reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    $end            reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    RLLAVE          reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)


state 137

    (47) expresions -> MAYOR expresions_push_mayor exp .

    RPAREN          reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    COMMA           reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    ID              reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    SI              reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    HAZ             reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    PARA            reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    IMPRIME         reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    FUNCION         reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    $end            reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    RLLAVE          reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)


state 138

    (82) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS . LPAREN expresion RPAREN

    LPAREN          shift and go to state 150


state 139

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN . funparam RPAREN LLLAVE vars bloque RLLAVE
    (26) funparam -> . tipo ID funparam_push_id funparams
    (27) funparam -> . empty
    (13) tipo -> . ENTERO
    (14) tipo -> . DECIMAL
    (15) tipo -> . FRASE
    (16) tipo -> . ESVERDAD
    (17) empty -> .

    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 11
    FRASE           shift and go to state 9
    ESVERDAD        shift and go to state 13
    RPAREN          reduce using rule 17 (empty -> .)

    tipo                           shift and go to state 151
    funparam                       shift and go to state 152
    empty                          shift and go to state 153

state 140

    (88) escs -> COMMA esc .

    RPAREN          reduce using rule 88 (escs -> COMMA esc .)


state 141

    (8) vars3 -> COMMA ID vars3_push_id vars3 .

    SEMICOL         reduce using rule 8 (vars3 -> COMMA ID vars3_push_id vars3 .)


state 142

    (79) para -> PARA ID ENRANGO LPAREN param COMMA param . RPAREN LLLAVE estatuto RLLAVE

    RPAREN          shift and go to state 154


state 143

    (55) exps -> PLUS exps_push_plus termino exps .

    MAYOR           reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)
    MENOR           reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)
    COMPARA         reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)
    RPAREN          reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)
    COMMA           reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)
    ID              reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)
    SI              reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)
    HAZ             reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)
    PARA            reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)
    IMPRIME         reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)
    FUNCION         reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)
    $end            reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)
    RLLAVE          reduce using rule 55 (exps -> PLUS exps_push_plus termino exps .)


state 144

    (56) exps -> MINUS exps_push_minus termino exps .

    MAYOR           reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)
    MENOR           reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)
    COMPARA         reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)
    RPAREN          reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)
    COMMA           reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)
    ID              reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)
    SI              reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)
    HAZ             reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)
    PARA            reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)
    IMPRIME         reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)
    FUNCION         reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)
    $end            reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)
    RLLAVE          reduce using rule 56 (exps -> MINUS exps_push_minus termino exps .)


state 145

    (62) terminos -> DIVIDE terminos_push_divide factor terminos .

    PLUS            reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MINUS           reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MAYOR           reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MENOR           reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    COMPARA         reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    RPAREN          reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    COMMA           reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    ID              reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    SI              reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    HAZ             reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    PARA            reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    IMPRIME         reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    FUNCION         reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    $end            reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    RLLAVE          reduce using rule 62 (terminos -> DIVIDE terminos_push_divide factor terminos .)


state 146

    (61) terminos -> TIMES terminos_push_times factor terminos .

    PLUS            reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    MINUS           reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    MAYOR           reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    MENOR           reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    COMPARA         reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    RPAREN          reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    COMMA           reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    ID              reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    SI              reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    HAZ             reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    PARA            reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    IMPRIME         reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    FUNCION         reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    $end            reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)
    RLLAVE          reduce using rule 61 (terminos -> TIMES terminos_push_times factor terminos .)


state 147

    (66) factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .

    TIMES           reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    DIVIDE          reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    PLUS            reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MINUS           reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MAYOR           reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MENOR           reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    COMPARA         reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    COMMA           reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    RPAREN          reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    ID              reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    SI              reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    HAZ             reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    PARA            reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    IMPRIME         reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    FUNCION         reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    $end            reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    RLLAVE          reduce using rule 66 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)


state 148

    (74) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto . RLLAVE else

    RLLAVE          shift and go to state 155


state 149

    (46) expresion -> LEE LPAREN STRING RPAREN SEMICOL .

    RPAREN          reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    COMMA           reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    ID              reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    SI              reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    HAZ             reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    PARA            reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    IMPRIME         reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    FUNCION         reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    $end            reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    RLLAVE          reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)


state 150

    (82) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN . expresion RPAREN
    (45) expresion -> . exp expresions
    (46) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (54) exp -> . termino exps
    (60) termino -> . factor terminos
    (66) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (67) factor -> . valor
    (70) valor -> . ID
    (71) valor -> . CTEINT
    (72) valor -> . CTEDEC
    (73) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LEE             shift and go to state 60
    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    CTEINT          shift and go to state 52
    CTEDEC          shift and go to state 55

    expresion                      shift and go to state 156
    valor                          shift and go to state 54
    llamada                        shift and go to state 53
    exp                            shift and go to state 61
    factor                         shift and go to state 56
    termino                        shift and go to state 51

state 151

    (26) funparam -> tipo . ID funparam_push_id funparams

    ID              shift and go to state 157


state 152

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam . RPAREN LLLAVE vars bloque RLLAVE

    RPAREN          shift and go to state 158


state 153

    (27) funparam -> empty .

    RPAREN          reduce using rule 27 (funparam -> empty .)


state 154

    (79) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN . LLLAVE estatuto RLLAVE

    LLLAVE          shift and go to state 159


state 155

    (74) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE . else
    (76) else -> . SINO else_2 LLLAVE estatuto RLLAVE
    (77) else -> . empty
    (17) empty -> .

    SINO            shift and go to state 161
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    else                           shift and go to state 160
    empty                          shift and go to state 162

state 156

    (82) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion . RPAREN

    RPAREN          shift and go to state 163


state 157

    (26) funparam -> tipo ID . funparam_push_id funparams
    (28) funparam_push_id -> .

    COMMA           reduce using rule 28 (funparam_push_id -> .)
    RPAREN          reduce using rule 28 (funparam_push_id -> .)

    funparam_push_id               shift and go to state 164

state 158

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN . LLLAVE vars bloque RLLAVE

    LLLAVE          shift and go to state 165


state 159

    (79) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE . estatuto RLLAVE
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    llamada                        shift and go to state 20
    estatuto                       shift and go to state 166
    mientras                       shift and go to state 15
    condicion                      shift and go to state 21
    escritura                      shift and go to state 31

state 160

    (74) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .

    ID              reduce using rule 74 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    SI              reduce using rule 74 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    HAZ             reduce using rule 74 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    PARA            reduce using rule 74 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    IMPRIME         reduce using rule 74 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    RLLAVE          reduce using rule 74 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    FUNCION         reduce using rule 74 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    $end            reduce using rule 74 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)


state 161

    (76) else -> SINO . else_2 LLLAVE estatuto RLLAVE
    (78) else_2 -> .

    LLLAVE          reduce using rule 78 (else_2 -> .)

    else_2                         shift and go to state 167

state 162

    (77) else -> empty .

    ID              reduce using rule 77 (else -> empty .)
    SI              reduce using rule 77 (else -> empty .)
    HAZ             reduce using rule 77 (else -> empty .)
    PARA            reduce using rule 77 (else -> empty .)
    IMPRIME         reduce using rule 77 (else -> empty .)
    FUNCION         reduce using rule 77 (else -> empty .)
    $end            reduce using rule 77 (else -> empty .)
    RLLAVE          reduce using rule 77 (else -> empty .)


state 163

    (82) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .

    ID              reduce using rule 82 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    SI              reduce using rule 82 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    HAZ             reduce using rule 82 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    PARA            reduce using rule 82 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    IMPRIME         reduce using rule 82 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    RLLAVE          reduce using rule 82 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    FUNCION         reduce using rule 82 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    $end            reduce using rule 82 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)


state 164

    (26) funparam -> tipo ID funparam_push_id . funparams
    (29) funparams -> . COMMA funparam
    (30) funparams -> . empty
    (17) empty -> .

    COMMA           shift and go to state 168
    RPAREN          reduce using rule 17 (empty -> .)

    funparams                      shift and go to state 169
    empty                          shift and go to state 170

state 165

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE . vars bloque RLLAVE
    (4) vars -> . VAR vars2
    (5) vars -> . empty
    (17) empty -> .

    VAR             shift and go to state 6
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    vars                           shift and go to state 171
    empty                          shift and go to state 7

state 166

    (79) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto . RLLAVE

    RLLAVE          shift and go to state 172


state 167

    (76) else -> SINO else_2 . LLLAVE estatuto RLLAVE

    LLLAVE          shift and go to state 173


state 168

    (29) funparams -> COMMA . funparam
    (26) funparam -> . tipo ID funparam_push_id funparams
    (27) funparam -> . empty
    (13) tipo -> . ENTERO
    (14) tipo -> . DECIMAL
    (15) tipo -> . FRASE
    (16) tipo -> . ESVERDAD
    (17) empty -> .

    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 11
    FRASE           shift and go to state 9
    ESVERDAD        shift and go to state 13
    RPAREN          reduce using rule 17 (empty -> .)

    funparam                       shift and go to state 174
    empty                          shift and go to state 153
    tipo                           shift and go to state 151

state 169

    (26) funparam -> tipo ID funparam_push_id funparams .

    RPAREN          reduce using rule 26 (funparam -> tipo ID funparam_push_id funparams .)


state 170

    (30) funparams -> empty .

    RPAREN          reduce using rule 30 (funparams -> empty .)


state 171

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars . bloque RLLAVE
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

    mientras                       shift and go to state 15
    bloque                         shift and go to state 175
    estatuto                       shift and go to state 18
    llamada                        shift and go to state 20
    condicion                      shift and go to state 21
    empty                          shift and go to state 34
    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    escritura                      shift and go to state 31

state 172

    (79) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .

    ID              reduce using rule 79 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    SI              reduce using rule 79 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    HAZ             reduce using rule 79 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    PARA            reduce using rule 79 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    IMPRIME         reduce using rule 79 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    RLLAVE          reduce using rule 79 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    FUNCION         reduce using rule 79 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    $end            reduce using rule 79 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)


state 173

    (76) else -> SINO else_2 LLLAVE . estatuto RLLAVE
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (74) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (82) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (79) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (84) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 27
    SI              shift and go to state 19
    HAZ             shift and go to state 26
    PARA            shift and go to state 17
    IMPRIME         shift and go to state 29

    para                           shift and go to state 25
    asignacion                     shift and go to state 30
    llamada                        shift and go to state 20
    estatuto                       shift and go to state 176
    mientras                       shift and go to state 15
    condicion                      shift and go to state 21
    escritura                      shift and go to state 31

state 174

    (29) funparams -> COMMA funparam .

    RPAREN          reduce using rule 29 (funparams -> COMMA funparam .)


state 175

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque . RLLAVE

    RLLAVE          shift and go to state 177


state 176

    (76) else -> SINO else_2 LLLAVE estatuto . RLLAVE

    RLLAVE          shift and go to state 178


state 177

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .

    FUNCION         reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    ID              reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    SI              reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    HAZ             reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    PARA            reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    IMPRIME         reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    $end            reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)


state 178

    (76) else -> SINO else_2 LLLAVE estatuto RLLAVE .

    ID              reduce using rule 76 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    SI              reduce using rule 76 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    HAZ             reduce using rule 76 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    PARA            reduce using rule 76 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    IMPRIME         reduce using rule 76 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    FUNCION         reduce using rule 76 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    $end            reduce using rule 76 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    RLLAVE          reduce using rule 76 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCION in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for SI in state 8 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 8 resolved as shift
WARNING: shift/reduce conflict for PARA in state 8 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 15 resolved as shift
WARNING: shift/reduce conflict for SI in state 15 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 15 resolved as shift
WARNING: shift/reduce conflict for PARA in state 15 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 15 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 16 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SI in state 16 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 16 resolved as shift
WARNING: shift/reduce conflict for PARA in state 16 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 16 resolved as shift
WARNING: shift/reduce conflict for ID in state 20 resolved as shift
WARNING: shift/reduce conflict for SI in state 20 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 20 resolved as shift
WARNING: shift/reduce conflict for PARA in state 20 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 20 resolved as shift
WARNING: shift/reduce conflict for ID in state 21 resolved as shift
WARNING: shift/reduce conflict for SI in state 21 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 21 resolved as shift
WARNING: shift/reduce conflict for PARA in state 21 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 21 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 23 resolved as shift
WARNING: shift/reduce conflict for ID in state 23 resolved as shift
WARNING: shift/reduce conflict for SI in state 23 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 23 resolved as shift
WARNING: shift/reduce conflict for PARA in state 23 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 23 resolved as shift
WARNING: shift/reduce conflict for ID in state 25 resolved as shift
WARNING: shift/reduce conflict for SI in state 25 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 25 resolved as shift
WARNING: shift/reduce conflict for PARA in state 25 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 25 resolved as shift
WARNING: shift/reduce conflict for ID in state 30 resolved as shift
WARNING: shift/reduce conflict for SI in state 30 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 30 resolved as shift
WARNING: shift/reduce conflict for PARA in state 30 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 30 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for SI in state 31 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 31 resolved as shift
WARNING: shift/reduce conflict for PARA in state 31 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 31 resolved as shift
WARNING: reduce/reduce conflict in state 22 resolved using rule (body -> empty)
WARNING: rejected rule (bloque -> empty) in state 22
