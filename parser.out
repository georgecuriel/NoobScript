Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    VGLOBAL
    CLASE
    COLON

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE
Rule 2     programa_push_id -> <empty>
Rule 3     programa_push_dict -> <empty>
Rule 4     vars -> VAR vars2
Rule 5     vars -> empty
Rule 6     vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4
Rule 7     dimension -> LBRAK CTEINT RBRAK dimension
Rule 8     dimension -> empty
Rule 9     vars_push_id -> <empty>
Rule 10    vars3 -> COMMA ID dimension vars3_push_id vars3
Rule 11    vars3 -> empty
Rule 12    vars3_push_id -> <empty>
Rule 13    vars4 -> vars2
Rule 14    vars4 -> empty
Rule 15    tipo -> ENTERO
Rule 16    tipo -> DECIMAL
Rule 17    tipo -> FRASE
Rule 18    tipo -> ESVERDAD
Rule 19    empty -> <empty>
Rule 20    body -> funcion body
Rule 21    body -> bloque body
Rule 22    body -> empty
Rule 23    bloque -> estatuto
Rule 24    bloque -> empty
Rule 25    funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
Rule 26    funcion_increase_func -> <empty>
Rule 27    funcion_push_id -> <empty>
Rule 28    funparam -> tipo ID funparam_push_id funparams
Rule 29    funparam -> empty
Rule 30    funparam_push_id -> <empty>
Rule 31    funparams -> COMMA funparam
Rule 32    funparams -> empty
Rule 33    estatuto -> asignacion bloque
Rule 34    estatuto -> condicion bloque
Rule 35    estatuto -> mientras bloque
Rule 36    estatuto -> para bloque
Rule 37    estatuto -> escritura bloque
Rule 38    estatuto -> llamada bloque
Rule 39    asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion
Rule 40    asignacion_push_id -> <empty>
Rule 41    asignacion_push_igual -> <empty>
Rule 42    llamada -> ID LPAREN llamadaparam RPAREN
Rule 43    llamadaparam -> expresion llamadaparams
Rule 44    llamadaparam -> empty
Rule 45    llamadaparams -> COMMA llamadaparam
Rule 46    llamadaparams -> empty
Rule 47    expresion -> exp expresions
Rule 48    expresion -> LEE LPAREN STRING RPAREN SEMICOL
Rule 49    expresions -> MAYOR expresions_push_mayor exp
Rule 50    expresions -> MENOR expresions_push_menor exp
Rule 51    expresions -> COMPARA expresions_push_compara exp
Rule 52    expresions -> exp
Rule 53    expresions -> empty
Rule 54    expresions_push_mayor -> <empty>
Rule 55    expresions_push_menor -> <empty>
Rule 56    expresions_push_compara -> <empty>
Rule 57    exp -> termino exps
Rule 58    exps -> PLUS exps_push_plus termino exps
Rule 59    exps -> MINUS exps_push_minus termino exps
Rule 60    exps -> empty
Rule 61    exps_push_plus -> <empty>
Rule 62    exps_push_minus -> <empty>
Rule 63    termino -> factor terminos
Rule 64    terminos -> TIMES terminos_push_times factor terminos
Rule 65    terminos -> DIVIDE terminos_push_divide factor terminos
Rule 66    terminos -> empty
Rule 67    terminos_push_times -> <empty>
Rule 68    terminos_push_divide -> <empty>
Rule 69    factor -> LPAREN factor_lparen expresion RPAREN factor_rparen
Rule 70    factor -> valor
Rule 71    factor_lparen -> <empty>
Rule 72    factor_rparen -> <empty>
Rule 73    valor -> ID call_or_array
Rule 74    valor -> CTEINT
Rule 75    valor -> CTEDEC
Rule 76    call_or_array -> LBRAK CTEINT RBRAK id_array
Rule 77    call_or_array -> LPAREN expresion id_call RPAREN
Rule 78    call_or_array -> empty
Rule 79    id_array -> call_or_array
Rule 80    id_call -> COMMA expresion id_call
Rule 81    id_call -> empty
Rule 82    condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
Rule 83    condicion_if -> <empty>
Rule 84    else -> SINO else_2 LLLAVE estatuto RLLAVE
Rule 85    else -> empty
Rule 86    else_2 -> <empty>
Rule 87    para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
Rule 88    param -> ID
Rule 89    param -> CTEINT
Rule 90    mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
Rule 91    mientras_haz_push -> <empty>
Rule 92    escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN
Rule 93    escritura_escribe -> <empty>
Rule 94    esc -> expresion escs
Rule 95    esc -> STRING escs
Rule 96    escs -> COMMA esc
Rule 97    escs -> empty

Terminals, with rules where they appear

CLASE                : 
COLON                : 
COMMA                : 10 31 45 80 87 96
COMPARA              : 51
CTEDEC               : 75
CTEINT               : 7 74 76 89
DECIMAL              : 16
DIVIDE               : 65
ENRANGO              : 87
ENTERO               : 15
ESVERDAD             : 18
FRASE                : 17
FUNCION              : 25
HAZ                  : 90
ID                   : 1 6 10 25 28 39 42 73 87 88
IGUAL                : 39
IMPRIME              : 92
LBRAK                : 7 76
LEE                  : 48
LLLAVE               : 1 25 82 84 87 90
LPAREN               : 25 42 48 69 77 82 87 90 92
MAYOR                : 49
MENOR                : 50
MIENTRAS             : 90
MINUS                : 59
PARA                 : 87
PLUS                 : 58
PROGRAMA             : 1
RBRAK                : 7 76
RLLAVE               : 1 25 82 84 87 90
RPAREN               : 25 42 48 69 77 82 87 90 92
SEMICOL              : 6 48
SI                   : 82
SINO                 : 84
STRING               : 48 95
TIMES                : 64
VAR                  : 4
VGLOBAL              : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 33
asignacion_push_id   : 39
asignacion_push_igual : 39
bloque               : 21 25 33 34 35 36 37 38
body                 : 1 20 21
call_or_array        : 73 79
condicion            : 34
condicion_if         : 82
dimension            : 6 7 10
else                 : 82
else_2               : 84
empty                : 5 8 11 14 22 24 29 32 44 46 53 60 66 78 81 85 97
esc                  : 92 96
escritura            : 37
escritura_escribe    : 92
escs                 : 94 95
estatuto             : 23 82 84 87 90
exp                  : 47 49 50 51 52
expresion            : 39 43 69 77 80 82 90 94
expresions           : 47
expresions_push_compara : 51
expresions_push_mayor : 49
expresions_push_menor : 50
exps                 : 57 58 59
exps_push_minus      : 59
exps_push_plus       : 58
factor               : 63 64 65
factor_lparen        : 69
factor_rparen        : 69
funcion              : 20
funcion_increase_func : 25
funcion_push_id      : 25
funparam             : 25 31
funparam_push_id     : 28
funparams            : 28
id_array             : 76
id_call              : 77 80
llamada              : 38
llamadaparam         : 42 45
llamadaparams        : 43
mientras             : 35
mientras_haz_push    : 90
para                 : 36
param                : 87 87
programa             : 0
programa_push_dict   : 1
programa_push_id     : 1
termino              : 57 58 59
terminos             : 63 64 65
terminos_push_divide : 65
terminos_push_times  : 64
tipo                 : 6 25 28
valor                : 70
vars                 : 1 25
vars2                : 4 13
vars3                : 6 10
vars3_push_id        : 10
vars4                : 6
vars_push_id         : 6

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . LLLAVE programa_push_id vars programa_push_dict body RLLAVE

    LLLAVE          shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID LLLAVE . programa_push_id vars programa_push_dict body RLLAVE
    (2) programa_push_id -> .

    VAR             reduce using rule 2 (programa_push_id -> .)
    FUNCION         reduce using rule 2 (programa_push_id -> .)
    ID              reduce using rule 2 (programa_push_id -> .)
    SI              reduce using rule 2 (programa_push_id -> .)
    HAZ             reduce using rule 2 (programa_push_id -> .)
    PARA            reduce using rule 2 (programa_push_id -> .)
    IMPRIME         reduce using rule 2 (programa_push_id -> .)
    RLLAVE          reduce using rule 2 (programa_push_id -> .)

    programa_push_id               shift and go to state 5

state 5

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id . vars programa_push_dict body RLLAVE
    (4) vars -> . VAR vars2
    (5) vars -> . empty
    (19) empty -> .

    VAR             shift and go to state 7
    FUNCION         reduce using rule 19 (empty -> .)
    ID              reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)

    vars                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id vars . programa_push_dict body RLLAVE
    (3) programa_push_dict -> .

    FUNCION         reduce using rule 3 (programa_push_dict -> .)
    ID              reduce using rule 3 (programa_push_dict -> .)
    SI              reduce using rule 3 (programa_push_dict -> .)
    HAZ             reduce using rule 3 (programa_push_dict -> .)
    PARA            reduce using rule 3 (programa_push_dict -> .)
    IMPRIME         reduce using rule 3 (programa_push_dict -> .)
    RLLAVE          reduce using rule 3 (programa_push_dict -> .)

    programa_push_dict             shift and go to state 9

state 7

    (4) vars -> VAR . vars2
    (6) vars2 -> . tipo ID dimension vars_push_id vars3 SEMICOL vars4
    (15) tipo -> . ENTERO
    (16) tipo -> . DECIMAL
    (17) tipo -> . FRASE
    (18) tipo -> . ESVERDAD

    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14

    tipo                           shift and go to state 11
    vars2                          shift and go to state 13

state 8

    (5) vars -> empty .

    ID              reduce using rule 5 (vars -> empty .)
    SI              reduce using rule 5 (vars -> empty .)
    HAZ             reduce using rule 5 (vars -> empty .)
    PARA            reduce using rule 5 (vars -> empty .)
    IMPRIME         reduce using rule 5 (vars -> empty .)
    RLLAVE          reduce using rule 5 (vars -> empty .)
    FUNCION         reduce using rule 5 (vars -> empty .)


state 9

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict . body RLLAVE
    (20) body -> . funcion body
    (21) body -> . bloque body
    (22) body -> . empty
    (25) funcion -> . FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (23) bloque -> . estatuto
    (24) bloque -> . empty
    (19) empty -> .
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         shift and go to state 29
    RLLAVE          reduce using rule 19 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! FUNCION         [ reduce using rule 19 (empty -> .) ]
  ! ID              [ reduce using rule 19 (empty -> .) ]
  ! SI              [ reduce using rule 19 (empty -> .) ]
  ! HAZ             [ reduce using rule 19 (empty -> .) ]
  ! PARA            [ reduce using rule 19 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 19 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 17
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 23
    funcion                        shift and go to state 24
    body                           shift and go to state 25
    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    escritura                      shift and go to state 32

state 10

    (17) tipo -> FRASE .

    ID              reduce using rule 17 (tipo -> FRASE .)


state 11

    (6) vars2 -> tipo . ID dimension vars_push_id vars3 SEMICOL vars4

    ID              shift and go to state 33


state 12

    (16) tipo -> DECIMAL .

    ID              reduce using rule 16 (tipo -> DECIMAL .)


state 13

    (4) vars -> VAR vars2 .

    ID              reduce using rule 4 (vars -> VAR vars2 .)
    SI              reduce using rule 4 (vars -> VAR vars2 .)
    HAZ             reduce using rule 4 (vars -> VAR vars2 .)
    PARA            reduce using rule 4 (vars -> VAR vars2 .)
    IMPRIME         reduce using rule 4 (vars -> VAR vars2 .)
    RLLAVE          reduce using rule 4 (vars -> VAR vars2 .)
    FUNCION         reduce using rule 4 (vars -> VAR vars2 .)


state 14

    (18) tipo -> ESVERDAD .

    ID              reduce using rule 18 (tipo -> ESVERDAD .)


state 15

    (15) tipo -> ENTERO .

    ID              reduce using rule 15 (tipo -> ENTERO .)


state 16

    (35) estatuto -> mientras . bloque
    (23) bloque -> . estatuto
    (24) bloque -> . empty
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (19) empty -> .
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! ID              [ reduce using rule 19 (empty -> .) ]
  ! SI              [ reduce using rule 19 (empty -> .) ]
  ! HAZ             [ reduce using rule 19 (empty -> .) ]
  ! PARA            [ reduce using rule 19 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 19 (empty -> .) ]

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 19
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    bloque                         shift and go to state 34
    empty                          shift and go to state 35
    escritura                      shift and go to state 32

state 17

    (21) body -> bloque . body
    (20) body -> . funcion body
    (21) body -> . bloque body
    (22) body -> . empty
    (25) funcion -> . FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (23) bloque -> . estatuto
    (24) bloque -> . empty
    (19) empty -> .
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         shift and go to state 29
    RLLAVE          reduce using rule 19 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! FUNCION         [ reduce using rule 19 (empty -> .) ]
  ! ID              [ reduce using rule 19 (empty -> .) ]
  ! SI              [ reduce using rule 19 (empty -> .) ]
  ! HAZ             [ reduce using rule 19 (empty -> .) ]
  ! PARA            [ reduce using rule 19 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 19 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 17
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 23
    funcion                        shift and go to state 24
    body                           shift and go to state 36
    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    escritura                      shift and go to state 32

state 18

    (87) para -> PARA . ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    ID              shift and go to state 37


state 19

    (23) bloque -> estatuto .

    FUNCION         reduce using rule 23 (bloque -> estatuto .)
    ID              reduce using rule 23 (bloque -> estatuto .)
    SI              reduce using rule 23 (bloque -> estatuto .)
    HAZ             reduce using rule 23 (bloque -> estatuto .)
    PARA            reduce using rule 23 (bloque -> estatuto .)
    IMPRIME         reduce using rule 23 (bloque -> estatuto .)
    RLLAVE          reduce using rule 23 (bloque -> estatuto .)


state 20

    (82) condicion -> SI . LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else

    LPAREN          shift and go to state 38


state 21

    (38) estatuto -> llamada . bloque
    (23) bloque -> . estatuto
    (24) bloque -> . empty
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (19) empty -> .
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! ID              [ reduce using rule 19 (empty -> .) ]
  ! SI              [ reduce using rule 19 (empty -> .) ]
  ! HAZ             [ reduce using rule 19 (empty -> .) ]
  ! PARA            [ reduce using rule 19 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 19 (empty -> .) ]

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    mientras                       shift and go to state 16
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    bloque                         shift and go to state 39
    empty                          shift and go to state 35
    escritura                      shift and go to state 32

state 22

    (34) estatuto -> condicion . bloque
    (23) bloque -> . estatuto
    (24) bloque -> . empty
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (19) empty -> .
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! ID              [ reduce using rule 19 (empty -> .) ]
  ! SI              [ reduce using rule 19 (empty -> .) ]
  ! HAZ             [ reduce using rule 19 (empty -> .) ]
  ! PARA            [ reduce using rule 19 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 19 (empty -> .) ]

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 19
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    bloque                         shift and go to state 40
    empty                          shift and go to state 35
    escritura                      shift and go to state 32

state 23

    (22) body -> empty .
    (24) bloque -> empty .

  ! reduce/reduce conflict for RLLAVE resolved using rule 22 (body -> empty .)
    RLLAVE          reduce using rule 22 (body -> empty .)
    FUNCION         reduce using rule 24 (bloque -> empty .)
    ID              reduce using rule 24 (bloque -> empty .)
    SI              reduce using rule 24 (bloque -> empty .)
    HAZ             reduce using rule 24 (bloque -> empty .)
    PARA            reduce using rule 24 (bloque -> empty .)
    IMPRIME         reduce using rule 24 (bloque -> empty .)

  ! RLLAVE          [ reduce using rule 24 (bloque -> empty .) ]


state 24

    (20) body -> funcion . body
    (20) body -> . funcion body
    (21) body -> . bloque body
    (22) body -> . empty
    (25) funcion -> . FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (23) bloque -> . estatuto
    (24) bloque -> . empty
    (19) empty -> .
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         shift and go to state 29
    RLLAVE          reduce using rule 19 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! FUNCION         [ reduce using rule 19 (empty -> .) ]
  ! ID              [ reduce using rule 19 (empty -> .) ]
  ! SI              [ reduce using rule 19 (empty -> .) ]
  ! HAZ             [ reduce using rule 19 (empty -> .) ]
  ! PARA            [ reduce using rule 19 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 19 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 17
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 23
    funcion                        shift and go to state 24
    body                           shift and go to state 41
    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    escritura                      shift and go to state 32

state 25

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body . RLLAVE

    RLLAVE          shift and go to state 42


state 26

    (36) estatuto -> para . bloque
    (23) bloque -> . estatuto
    (24) bloque -> . empty
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (19) empty -> .
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! ID              [ reduce using rule 19 (empty -> .) ]
  ! SI              [ reduce using rule 19 (empty -> .) ]
  ! HAZ             [ reduce using rule 19 (empty -> .) ]
  ! PARA            [ reduce using rule 19 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 19 (empty -> .) ]

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 19
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    bloque                         shift and go to state 43
    empty                          shift and go to state 35
    escritura                      shift and go to state 32

state 27

    (90) mientras -> HAZ . mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (91) mientras_haz_push -> .

    LLLAVE          reduce using rule 91 (mientras_haz_push -> .)

    mientras_haz_push              shift and go to state 44

state 28

    (39) asignacion -> ID . asignacion_push_id IGUAL asignacion_push_igual expresion
    (42) llamada -> ID . LPAREN llamadaparam RPAREN
    (40) asignacion_push_id -> .

    LPAREN          shift and go to state 45
    IGUAL           reduce using rule 40 (asignacion_push_id -> .)

    asignacion_push_id             shift and go to state 46

state 29

    (25) funcion -> FUNCION . funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (26) funcion_increase_func -> .

    ENTERO          reduce using rule 26 (funcion_increase_func -> .)
    DECIMAL         reduce using rule 26 (funcion_increase_func -> .)
    FRASE           reduce using rule 26 (funcion_increase_func -> .)
    ESVERDAD        reduce using rule 26 (funcion_increase_func -> .)

    funcion_increase_func          shift and go to state 47

state 30

    (92) escritura -> IMPRIME . escritura_escribe LPAREN esc RPAREN
    (93) escritura_escribe -> .

    LPAREN          reduce using rule 93 (escritura_escribe -> .)

    escritura_escribe              shift and go to state 48

state 31

    (33) estatuto -> asignacion . bloque
    (23) bloque -> . estatuto
    (24) bloque -> . empty
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (19) empty -> .
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! ID              [ reduce using rule 19 (empty -> .) ]
  ! SI              [ reduce using rule 19 (empty -> .) ]
  ! HAZ             [ reduce using rule 19 (empty -> .) ]
  ! PARA            [ reduce using rule 19 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 19 (empty -> .) ]

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 19
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    bloque                         shift and go to state 49
    empty                          shift and go to state 35
    escritura                      shift and go to state 32

state 32

    (37) estatuto -> escritura . bloque
    (23) bloque -> . estatuto
    (24) bloque -> . empty
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (19) empty -> .
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! ID              [ reduce using rule 19 (empty -> .) ]
  ! SI              [ reduce using rule 19 (empty -> .) ]
  ! HAZ             [ reduce using rule 19 (empty -> .) ]
  ! PARA            [ reduce using rule 19 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 19 (empty -> .) ]

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 19
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    bloque                         shift and go to state 50
    empty                          shift and go to state 35
    escritura                      shift and go to state 32

state 33

    (6) vars2 -> tipo ID . dimension vars_push_id vars3 SEMICOL vars4
    (7) dimension -> . LBRAK CTEINT RBRAK dimension
    (8) dimension -> . empty
    (19) empty -> .

    LBRAK           shift and go to state 51
    COMMA           reduce using rule 19 (empty -> .)
    SEMICOL         reduce using rule 19 (empty -> .)

    dimension                      shift and go to state 52
    empty                          shift and go to state 53

state 34

    (35) estatuto -> mientras bloque .

    FUNCION         reduce using rule 35 (estatuto -> mientras bloque .)
    ID              reduce using rule 35 (estatuto -> mientras bloque .)
    SI              reduce using rule 35 (estatuto -> mientras bloque .)
    HAZ             reduce using rule 35 (estatuto -> mientras bloque .)
    PARA            reduce using rule 35 (estatuto -> mientras bloque .)
    IMPRIME         reduce using rule 35 (estatuto -> mientras bloque .)
    RLLAVE          reduce using rule 35 (estatuto -> mientras bloque .)


state 35

    (24) bloque -> empty .

    FUNCION         reduce using rule 24 (bloque -> empty .)
    ID              reduce using rule 24 (bloque -> empty .)
    SI              reduce using rule 24 (bloque -> empty .)
    HAZ             reduce using rule 24 (bloque -> empty .)
    PARA            reduce using rule 24 (bloque -> empty .)
    IMPRIME         reduce using rule 24 (bloque -> empty .)
    RLLAVE          reduce using rule 24 (bloque -> empty .)


state 36

    (21) body -> bloque body .

    RLLAVE          reduce using rule 21 (body -> bloque body .)


state 37

    (87) para -> PARA ID . ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    ENRANGO         shift and go to state 54


state 38

    (82) condicion -> SI LPAREN . expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (47) expresion -> . exp expresions
    (48) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LEE             shift and go to state 63
    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    expresion                      shift and go to state 62
    termino                        shift and go to state 55
    exp                            shift and go to state 64
    factor                         shift and go to state 59
    valor                          shift and go to state 57

state 39

    (38) estatuto -> llamada bloque .

    FUNCION         reduce using rule 38 (estatuto -> llamada bloque .)
    ID              reduce using rule 38 (estatuto -> llamada bloque .)
    SI              reduce using rule 38 (estatuto -> llamada bloque .)
    HAZ             reduce using rule 38 (estatuto -> llamada bloque .)
    PARA            reduce using rule 38 (estatuto -> llamada bloque .)
    IMPRIME         reduce using rule 38 (estatuto -> llamada bloque .)
    RLLAVE          reduce using rule 38 (estatuto -> llamada bloque .)


state 40

    (34) estatuto -> condicion bloque .

    FUNCION         reduce using rule 34 (estatuto -> condicion bloque .)
    ID              reduce using rule 34 (estatuto -> condicion bloque .)
    SI              reduce using rule 34 (estatuto -> condicion bloque .)
    HAZ             reduce using rule 34 (estatuto -> condicion bloque .)
    PARA            reduce using rule 34 (estatuto -> condicion bloque .)
    IMPRIME         reduce using rule 34 (estatuto -> condicion bloque .)
    RLLAVE          reduce using rule 34 (estatuto -> condicion bloque .)


state 41

    (20) body -> funcion body .

    RLLAVE          reduce using rule 20 (body -> funcion body .)


state 42

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE .

    $end            reduce using rule 1 (programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE .)


state 43

    (36) estatuto -> para bloque .

    FUNCION         reduce using rule 36 (estatuto -> para bloque .)
    ID              reduce using rule 36 (estatuto -> para bloque .)
    SI              reduce using rule 36 (estatuto -> para bloque .)
    HAZ             reduce using rule 36 (estatuto -> para bloque .)
    PARA            reduce using rule 36 (estatuto -> para bloque .)
    IMPRIME         reduce using rule 36 (estatuto -> para bloque .)
    RLLAVE          reduce using rule 36 (estatuto -> para bloque .)


state 44

    (90) mientras -> HAZ mientras_haz_push . LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN

    LLLAVE          shift and go to state 65


state 45

    (42) llamada -> ID LPAREN . llamadaparam RPAREN
    (43) llamadaparam -> . expresion llamadaparams
    (44) llamadaparam -> . empty
    (47) expresion -> . exp expresions
    (48) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (19) empty -> .
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LEE             shift and go to state 63
    RPAREN          reduce using rule 19 (empty -> .)
    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    expresion                      shift and go to state 68
    valor                          shift and go to state 57
    llamadaparam                   shift and go to state 66
    termino                        shift and go to state 55
    exp                            shift and go to state 64
    factor                         shift and go to state 59
    empty                          shift and go to state 67

state 46

    (39) asignacion -> ID asignacion_push_id . IGUAL asignacion_push_igual expresion

    IGUAL           shift and go to state 69


state 47

    (25) funcion -> FUNCION funcion_increase_func . tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (15) tipo -> . ENTERO
    (16) tipo -> . DECIMAL
    (17) tipo -> . FRASE
    (18) tipo -> . ESVERDAD

    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14

    tipo                           shift and go to state 70

state 48

    (92) escritura -> IMPRIME escritura_escribe . LPAREN esc RPAREN

    LPAREN          shift and go to state 71


state 49

    (33) estatuto -> asignacion bloque .

    FUNCION         reduce using rule 33 (estatuto -> asignacion bloque .)
    ID              reduce using rule 33 (estatuto -> asignacion bloque .)
    SI              reduce using rule 33 (estatuto -> asignacion bloque .)
    HAZ             reduce using rule 33 (estatuto -> asignacion bloque .)
    PARA            reduce using rule 33 (estatuto -> asignacion bloque .)
    IMPRIME         reduce using rule 33 (estatuto -> asignacion bloque .)
    RLLAVE          reduce using rule 33 (estatuto -> asignacion bloque .)


state 50

    (37) estatuto -> escritura bloque .

    FUNCION         reduce using rule 37 (estatuto -> escritura bloque .)
    ID              reduce using rule 37 (estatuto -> escritura bloque .)
    SI              reduce using rule 37 (estatuto -> escritura bloque .)
    HAZ             reduce using rule 37 (estatuto -> escritura bloque .)
    PARA            reduce using rule 37 (estatuto -> escritura bloque .)
    IMPRIME         reduce using rule 37 (estatuto -> escritura bloque .)
    RLLAVE          reduce using rule 37 (estatuto -> escritura bloque .)


state 51

    (7) dimension -> LBRAK . CTEINT RBRAK dimension

    CTEINT          shift and go to state 72


state 52

    (6) vars2 -> tipo ID dimension . vars_push_id vars3 SEMICOL vars4
    (9) vars_push_id -> .

    COMMA           reduce using rule 9 (vars_push_id -> .)
    SEMICOL         reduce using rule 9 (vars_push_id -> .)

    vars_push_id                   shift and go to state 73

state 53

    (8) dimension -> empty .

    COMMA           reduce using rule 8 (dimension -> empty .)
    SEMICOL         reduce using rule 8 (dimension -> empty .)


state 54

    (87) para -> PARA ID ENRANGO . LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    LPAREN          shift and go to state 74


state 55

    (57) exp -> termino . exps
    (58) exps -> . PLUS exps_push_plus termino exps
    (59) exps -> . MINUS exps_push_minus termino exps
    (60) exps -> . empty
    (19) empty -> .

    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    MAYOR           reduce using rule 19 (empty -> .)
    MENOR           reduce using rule 19 (empty -> .)
    COMPARA         reduce using rule 19 (empty -> .)
    LPAREN          reduce using rule 19 (empty -> .)
    ID              reduce using rule 19 (empty -> .)
    CTEINT          reduce using rule 19 (empty -> .)
    CTEDEC          reduce using rule 19 (empty -> .)
    RPAREN          reduce using rule 19 (empty -> .)
    COMMA           reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)

    exps                           shift and go to state 75
    empty                          shift and go to state 78

state 56

    (74) valor -> CTEINT .

    TIMES           reduce using rule 74 (valor -> CTEINT .)
    DIVIDE          reduce using rule 74 (valor -> CTEINT .)
    PLUS            reduce using rule 74 (valor -> CTEINT .)
    MINUS           reduce using rule 74 (valor -> CTEINT .)
    RPAREN          reduce using rule 74 (valor -> CTEINT .)
    COMMA           reduce using rule 74 (valor -> CTEINT .)
    ID              reduce using rule 74 (valor -> CTEINT .)
    SI              reduce using rule 74 (valor -> CTEINT .)
    HAZ             reduce using rule 74 (valor -> CTEINT .)
    PARA            reduce using rule 74 (valor -> CTEINT .)
    IMPRIME         reduce using rule 74 (valor -> CTEINT .)
    FUNCION         reduce using rule 74 (valor -> CTEINT .)
    RLLAVE          reduce using rule 74 (valor -> CTEINT .)
    MAYOR           reduce using rule 74 (valor -> CTEINT .)
    MENOR           reduce using rule 74 (valor -> CTEINT .)
    COMPARA         reduce using rule 74 (valor -> CTEINT .)
    LPAREN          reduce using rule 74 (valor -> CTEINT .)
    CTEINT          reduce using rule 74 (valor -> CTEINT .)
    CTEDEC          reduce using rule 74 (valor -> CTEINT .)


state 57

    (70) factor -> valor .

    TIMES           reduce using rule 70 (factor -> valor .)
    DIVIDE          reduce using rule 70 (factor -> valor .)
    PLUS            reduce using rule 70 (factor -> valor .)
    MINUS           reduce using rule 70 (factor -> valor .)
    MAYOR           reduce using rule 70 (factor -> valor .)
    MENOR           reduce using rule 70 (factor -> valor .)
    COMPARA         reduce using rule 70 (factor -> valor .)
    LPAREN          reduce using rule 70 (factor -> valor .)
    ID              reduce using rule 70 (factor -> valor .)
    CTEINT          reduce using rule 70 (factor -> valor .)
    CTEDEC          reduce using rule 70 (factor -> valor .)
    COMMA           reduce using rule 70 (factor -> valor .)
    RPAREN          reduce using rule 70 (factor -> valor .)
    SI              reduce using rule 70 (factor -> valor .)
    HAZ             reduce using rule 70 (factor -> valor .)
    PARA            reduce using rule 70 (factor -> valor .)
    IMPRIME         reduce using rule 70 (factor -> valor .)
    FUNCION         reduce using rule 70 (factor -> valor .)
    RLLAVE          reduce using rule 70 (factor -> valor .)


state 58

    (75) valor -> CTEDEC .

    TIMES           reduce using rule 75 (valor -> CTEDEC .)
    DIVIDE          reduce using rule 75 (valor -> CTEDEC .)
    PLUS            reduce using rule 75 (valor -> CTEDEC .)
    MINUS           reduce using rule 75 (valor -> CTEDEC .)
    RPAREN          reduce using rule 75 (valor -> CTEDEC .)
    COMMA           reduce using rule 75 (valor -> CTEDEC .)
    ID              reduce using rule 75 (valor -> CTEDEC .)
    SI              reduce using rule 75 (valor -> CTEDEC .)
    HAZ             reduce using rule 75 (valor -> CTEDEC .)
    PARA            reduce using rule 75 (valor -> CTEDEC .)
    IMPRIME         reduce using rule 75 (valor -> CTEDEC .)
    FUNCION         reduce using rule 75 (valor -> CTEDEC .)
    RLLAVE          reduce using rule 75 (valor -> CTEDEC .)
    MAYOR           reduce using rule 75 (valor -> CTEDEC .)
    MENOR           reduce using rule 75 (valor -> CTEDEC .)
    COMPARA         reduce using rule 75 (valor -> CTEDEC .)
    LPAREN          reduce using rule 75 (valor -> CTEDEC .)
    CTEINT          reduce using rule 75 (valor -> CTEDEC .)
    CTEDEC          reduce using rule 75 (valor -> CTEDEC .)


state 59

    (63) termino -> factor . terminos
    (64) terminos -> . TIMES terminos_push_times factor terminos
    (65) terminos -> . DIVIDE terminos_push_divide factor terminos
    (66) terminos -> . empty
    (19) empty -> .

    TIMES           shift and go to state 81
    DIVIDE          shift and go to state 79
    PLUS            reduce using rule 19 (empty -> .)
    MINUS           reduce using rule 19 (empty -> .)
    MAYOR           reduce using rule 19 (empty -> .)
    MENOR           reduce using rule 19 (empty -> .)
    COMPARA         reduce using rule 19 (empty -> .)
    LPAREN          reduce using rule 19 (empty -> .)
    ID              reduce using rule 19 (empty -> .)
    CTEINT          reduce using rule 19 (empty -> .)
    CTEDEC          reduce using rule 19 (empty -> .)
    RPAREN          reduce using rule 19 (empty -> .)
    COMMA           reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)

    terminos                       shift and go to state 80
    empty                          shift and go to state 82

state 60

    (69) factor -> LPAREN . factor_lparen expresion RPAREN factor_rparen
    (71) factor_lparen -> .

    LEE             reduce using rule 71 (factor_lparen -> .)
    LPAREN          reduce using rule 71 (factor_lparen -> .)
    ID              reduce using rule 71 (factor_lparen -> .)
    CTEINT          reduce using rule 71 (factor_lparen -> .)
    CTEDEC          reduce using rule 71 (factor_lparen -> .)

    factor_lparen                  shift and go to state 83

state 61

    (73) valor -> ID . call_or_array
    (76) call_or_array -> . LBRAK CTEINT RBRAK id_array
    (77) call_or_array -> . LPAREN expresion id_call RPAREN
    (78) call_or_array -> . empty
    (19) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LBRAK           shift and go to state 84
    LPAREN          shift and go to state 85
    TIMES           reduce using rule 19 (empty -> .)
    DIVIDE          reduce using rule 19 (empty -> .)
    PLUS            reduce using rule 19 (empty -> .)
    MINUS           reduce using rule 19 (empty -> .)
    MAYOR           reduce using rule 19 (empty -> .)
    MENOR           reduce using rule 19 (empty -> .)
    COMPARA         reduce using rule 19 (empty -> .)
    ID              reduce using rule 19 (empty -> .)
    CTEINT          reduce using rule 19 (empty -> .)
    CTEDEC          reduce using rule 19 (empty -> .)
    RPAREN          reduce using rule 19 (empty -> .)
    COMMA           reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)

  ! LPAREN          [ reduce using rule 19 (empty -> .) ]

    call_or_array                  shift and go to state 86
    empty                          shift and go to state 87

state 62

    (82) condicion -> SI LPAREN expresion . RPAREN condicion_if LLLAVE estatuto RLLAVE else

    RPAREN          shift and go to state 88


state 63

    (48) expresion -> LEE . LPAREN STRING RPAREN SEMICOL

    LPAREN          shift and go to state 89


state 64

    (47) expresion -> exp . expresions
    (49) expresions -> . MAYOR expresions_push_mayor exp
    (50) expresions -> . MENOR expresions_push_menor exp
    (51) expresions -> . COMPARA expresions_push_compara exp
    (52) expresions -> . exp
    (53) expresions -> . empty
    (57) exp -> . termino exps
    (19) empty -> .
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

  ! shift/reduce conflict for ID resolved as shift
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 94
    COMPARA         shift and go to state 93
    RPAREN          reduce using rule 19 (empty -> .)
    COMMA           reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)
    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

  ! ID              [ reduce using rule 19 (empty -> .) ]

    expresions                     shift and go to state 90
    termino                        shift and go to state 55
    exp                            shift and go to state 95
    factor                         shift and go to state 59
    empty                          shift and go to state 92
    valor                          shift and go to state 57

state 65

    (90) mientras -> HAZ mientras_haz_push LLLAVE . estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 96
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    escritura                      shift and go to state 32

state 66

    (42) llamada -> ID LPAREN llamadaparam . RPAREN

    RPAREN          shift and go to state 97


state 67

    (44) llamadaparam -> empty .

    RPAREN          reduce using rule 44 (llamadaparam -> empty .)


state 68

    (43) llamadaparam -> expresion . llamadaparams
    (45) llamadaparams -> . COMMA llamadaparam
    (46) llamadaparams -> . empty
    (19) empty -> .

    COMMA           shift and go to state 98
    RPAREN          reduce using rule 19 (empty -> .)

    llamadaparams                  shift and go to state 99
    empty                          shift and go to state 100

state 69

    (39) asignacion -> ID asignacion_push_id IGUAL . asignacion_push_igual expresion
    (41) asignacion_push_igual -> .

    LEE             reduce using rule 41 (asignacion_push_igual -> .)
    LPAREN          reduce using rule 41 (asignacion_push_igual -> .)
    ID              reduce using rule 41 (asignacion_push_igual -> .)
    CTEINT          reduce using rule 41 (asignacion_push_igual -> .)
    CTEDEC          reduce using rule 41 (asignacion_push_igual -> .)

    asignacion_push_igual          shift and go to state 101

state 70

    (25) funcion -> FUNCION funcion_increase_func tipo . ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE

    ID              shift and go to state 102


state 71

    (92) escritura -> IMPRIME escritura_escribe LPAREN . esc RPAREN
    (94) esc -> . expresion escs
    (95) esc -> . STRING escs
    (47) expresion -> . exp expresions
    (48) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    STRING          shift and go to state 104
    LEE             shift and go to state 63
    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    expresion                      shift and go to state 105
    valor                          shift and go to state 57
    esc                            shift and go to state 103
    termino                        shift and go to state 55
    exp                            shift and go to state 64
    factor                         shift and go to state 59

state 72

    (7) dimension -> LBRAK CTEINT . RBRAK dimension

    RBRAK           shift and go to state 106


state 73

    (6) vars2 -> tipo ID dimension vars_push_id . vars3 SEMICOL vars4
    (10) vars3 -> . COMMA ID dimension vars3_push_id vars3
    (11) vars3 -> . empty
    (19) empty -> .

    COMMA           shift and go to state 108
    SEMICOL         reduce using rule 19 (empty -> .)

    vars3                          shift and go to state 107
    empty                          shift and go to state 109

state 74

    (87) para -> PARA ID ENRANGO LPAREN . param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (88) param -> . ID
    (89) param -> . CTEINT

    ID              shift and go to state 112
    CTEINT          shift and go to state 110

    param                          shift and go to state 111

state 75

    (57) exp -> termino exps .

    MAYOR           reduce using rule 57 (exp -> termino exps .)
    MENOR           reduce using rule 57 (exp -> termino exps .)
    COMPARA         reduce using rule 57 (exp -> termino exps .)
    LPAREN          reduce using rule 57 (exp -> termino exps .)
    ID              reduce using rule 57 (exp -> termino exps .)
    CTEINT          reduce using rule 57 (exp -> termino exps .)
    CTEDEC          reduce using rule 57 (exp -> termino exps .)
    SI              reduce using rule 57 (exp -> termino exps .)
    HAZ             reduce using rule 57 (exp -> termino exps .)
    PARA            reduce using rule 57 (exp -> termino exps .)
    IMPRIME         reduce using rule 57 (exp -> termino exps .)
    FUNCION         reduce using rule 57 (exp -> termino exps .)
    RLLAVE          reduce using rule 57 (exp -> termino exps .)
    COMMA           reduce using rule 57 (exp -> termino exps .)
    RPAREN          reduce using rule 57 (exp -> termino exps .)


state 76

    (58) exps -> PLUS . exps_push_plus termino exps
    (61) exps_push_plus -> .

    LPAREN          reduce using rule 61 (exps_push_plus -> .)
    ID              reduce using rule 61 (exps_push_plus -> .)
    CTEINT          reduce using rule 61 (exps_push_plus -> .)
    CTEDEC          reduce using rule 61 (exps_push_plus -> .)

    exps_push_plus                 shift and go to state 113

state 77

    (59) exps -> MINUS . exps_push_minus termino exps
    (62) exps_push_minus -> .

    LPAREN          reduce using rule 62 (exps_push_minus -> .)
    ID              reduce using rule 62 (exps_push_minus -> .)
    CTEINT          reduce using rule 62 (exps_push_minus -> .)
    CTEDEC          reduce using rule 62 (exps_push_minus -> .)

    exps_push_minus                shift and go to state 114

state 78

    (60) exps -> empty .

    MAYOR           reduce using rule 60 (exps -> empty .)
    MENOR           reduce using rule 60 (exps -> empty .)
    COMPARA         reduce using rule 60 (exps -> empty .)
    LPAREN          reduce using rule 60 (exps -> empty .)
    ID              reduce using rule 60 (exps -> empty .)
    CTEINT          reduce using rule 60 (exps -> empty .)
    CTEDEC          reduce using rule 60 (exps -> empty .)
    RPAREN          reduce using rule 60 (exps -> empty .)
    COMMA           reduce using rule 60 (exps -> empty .)
    SI              reduce using rule 60 (exps -> empty .)
    HAZ             reduce using rule 60 (exps -> empty .)
    PARA            reduce using rule 60 (exps -> empty .)
    IMPRIME         reduce using rule 60 (exps -> empty .)
    FUNCION         reduce using rule 60 (exps -> empty .)
    RLLAVE          reduce using rule 60 (exps -> empty .)


state 79

    (65) terminos -> DIVIDE . terminos_push_divide factor terminos
    (68) terminos_push_divide -> .

    LPAREN          reduce using rule 68 (terminos_push_divide -> .)
    ID              reduce using rule 68 (terminos_push_divide -> .)
    CTEINT          reduce using rule 68 (terminos_push_divide -> .)
    CTEDEC          reduce using rule 68 (terminos_push_divide -> .)

    terminos_push_divide           shift and go to state 115

state 80

    (63) termino -> factor terminos .

    PLUS            reduce using rule 63 (termino -> factor terminos .)
    MINUS           reduce using rule 63 (termino -> factor terminos .)
    MAYOR           reduce using rule 63 (termino -> factor terminos .)
    MENOR           reduce using rule 63 (termino -> factor terminos .)
    COMPARA         reduce using rule 63 (termino -> factor terminos .)
    LPAREN          reduce using rule 63 (termino -> factor terminos .)
    ID              reduce using rule 63 (termino -> factor terminos .)
    CTEINT          reduce using rule 63 (termino -> factor terminos .)
    CTEDEC          reduce using rule 63 (termino -> factor terminos .)
    COMMA           reduce using rule 63 (termino -> factor terminos .)
    RPAREN          reduce using rule 63 (termino -> factor terminos .)
    SI              reduce using rule 63 (termino -> factor terminos .)
    HAZ             reduce using rule 63 (termino -> factor terminos .)
    PARA            reduce using rule 63 (termino -> factor terminos .)
    IMPRIME         reduce using rule 63 (termino -> factor terminos .)
    FUNCION         reduce using rule 63 (termino -> factor terminos .)
    RLLAVE          reduce using rule 63 (termino -> factor terminos .)


state 81

    (64) terminos -> TIMES . terminos_push_times factor terminos
    (67) terminos_push_times -> .

    LPAREN          reduce using rule 67 (terminos_push_times -> .)
    ID              reduce using rule 67 (terminos_push_times -> .)
    CTEINT          reduce using rule 67 (terminos_push_times -> .)
    CTEDEC          reduce using rule 67 (terminos_push_times -> .)

    terminos_push_times            shift and go to state 116

state 82

    (66) terminos -> empty .

    PLUS            reduce using rule 66 (terminos -> empty .)
    MINUS           reduce using rule 66 (terminos -> empty .)
    MAYOR           reduce using rule 66 (terminos -> empty .)
    MENOR           reduce using rule 66 (terminos -> empty .)
    COMPARA         reduce using rule 66 (terminos -> empty .)
    LPAREN          reduce using rule 66 (terminos -> empty .)
    ID              reduce using rule 66 (terminos -> empty .)
    CTEINT          reduce using rule 66 (terminos -> empty .)
    CTEDEC          reduce using rule 66 (terminos -> empty .)
    RPAREN          reduce using rule 66 (terminos -> empty .)
    COMMA           reduce using rule 66 (terminos -> empty .)
    SI              reduce using rule 66 (terminos -> empty .)
    HAZ             reduce using rule 66 (terminos -> empty .)
    PARA            reduce using rule 66 (terminos -> empty .)
    IMPRIME         reduce using rule 66 (terminos -> empty .)
    FUNCION         reduce using rule 66 (terminos -> empty .)
    RLLAVE          reduce using rule 66 (terminos -> empty .)


state 83

    (69) factor -> LPAREN factor_lparen . expresion RPAREN factor_rparen
    (47) expresion -> . exp expresions
    (48) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LEE             shift and go to state 63
    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    expresion                      shift and go to state 117
    valor                          shift and go to state 57
    termino                        shift and go to state 55
    exp                            shift and go to state 64
    factor                         shift and go to state 59

state 84

    (76) call_or_array -> LBRAK . CTEINT RBRAK id_array

    CTEINT          shift and go to state 118


state 85

    (77) call_or_array -> LPAREN . expresion id_call RPAREN
    (47) expresion -> . exp expresions
    (48) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LEE             shift and go to state 63
    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    expresion                      shift and go to state 119
    valor                          shift and go to state 57
    termino                        shift and go to state 55
    exp                            shift and go to state 64
    factor                         shift and go to state 59

state 86

    (73) valor -> ID call_or_array .

    TIMES           reduce using rule 73 (valor -> ID call_or_array .)
    DIVIDE          reduce using rule 73 (valor -> ID call_or_array .)
    PLUS            reduce using rule 73 (valor -> ID call_or_array .)
    MINUS           reduce using rule 73 (valor -> ID call_or_array .)
    RPAREN          reduce using rule 73 (valor -> ID call_or_array .)
    COMMA           reduce using rule 73 (valor -> ID call_or_array .)
    ID              reduce using rule 73 (valor -> ID call_or_array .)
    SI              reduce using rule 73 (valor -> ID call_or_array .)
    HAZ             reduce using rule 73 (valor -> ID call_or_array .)
    PARA            reduce using rule 73 (valor -> ID call_or_array .)
    IMPRIME         reduce using rule 73 (valor -> ID call_or_array .)
    FUNCION         reduce using rule 73 (valor -> ID call_or_array .)
    RLLAVE          reduce using rule 73 (valor -> ID call_or_array .)
    MAYOR           reduce using rule 73 (valor -> ID call_or_array .)
    MENOR           reduce using rule 73 (valor -> ID call_or_array .)
    COMPARA         reduce using rule 73 (valor -> ID call_or_array .)
    LPAREN          reduce using rule 73 (valor -> ID call_or_array .)
    CTEINT          reduce using rule 73 (valor -> ID call_or_array .)
    CTEDEC          reduce using rule 73 (valor -> ID call_or_array .)


state 87

    (78) call_or_array -> empty .

    TIMES           reduce using rule 78 (call_or_array -> empty .)
    DIVIDE          reduce using rule 78 (call_or_array -> empty .)
    PLUS            reduce using rule 78 (call_or_array -> empty .)
    MINUS           reduce using rule 78 (call_or_array -> empty .)
    MAYOR           reduce using rule 78 (call_or_array -> empty .)
    MENOR           reduce using rule 78 (call_or_array -> empty .)
    COMPARA         reduce using rule 78 (call_or_array -> empty .)
    LPAREN          reduce using rule 78 (call_or_array -> empty .)
    ID              reduce using rule 78 (call_or_array -> empty .)
    CTEINT          reduce using rule 78 (call_or_array -> empty .)
    CTEDEC          reduce using rule 78 (call_or_array -> empty .)
    RPAREN          reduce using rule 78 (call_or_array -> empty .)
    COMMA           reduce using rule 78 (call_or_array -> empty .)
    SI              reduce using rule 78 (call_or_array -> empty .)
    HAZ             reduce using rule 78 (call_or_array -> empty .)
    PARA            reduce using rule 78 (call_or_array -> empty .)
    IMPRIME         reduce using rule 78 (call_or_array -> empty .)
    FUNCION         reduce using rule 78 (call_or_array -> empty .)
    RLLAVE          reduce using rule 78 (call_or_array -> empty .)


state 88

    (82) condicion -> SI LPAREN expresion RPAREN . condicion_if LLLAVE estatuto RLLAVE else
    (83) condicion_if -> .

    LLLAVE          reduce using rule 83 (condicion_if -> .)

    condicion_if                   shift and go to state 120

state 89

    (48) expresion -> LEE LPAREN . STRING RPAREN SEMICOL

    STRING          shift and go to state 121


state 90

    (47) expresion -> exp expresions .

    COMMA           reduce using rule 47 (expresion -> exp expresions .)
    RPAREN          reduce using rule 47 (expresion -> exp expresions .)
    ID              reduce using rule 47 (expresion -> exp expresions .)
    SI              reduce using rule 47 (expresion -> exp expresions .)
    HAZ             reduce using rule 47 (expresion -> exp expresions .)
    PARA            reduce using rule 47 (expresion -> exp expresions .)
    IMPRIME         reduce using rule 47 (expresion -> exp expresions .)
    FUNCION         reduce using rule 47 (expresion -> exp expresions .)
    RLLAVE          reduce using rule 47 (expresion -> exp expresions .)


state 91

    (49) expresions -> MAYOR . expresions_push_mayor exp
    (54) expresions_push_mayor -> .

    LPAREN          reduce using rule 54 (expresions_push_mayor -> .)
    ID              reduce using rule 54 (expresions_push_mayor -> .)
    CTEINT          reduce using rule 54 (expresions_push_mayor -> .)
    CTEDEC          reduce using rule 54 (expresions_push_mayor -> .)

    expresions_push_mayor          shift and go to state 122

state 92

    (53) expresions -> empty .

    RPAREN          reduce using rule 53 (expresions -> empty .)
    COMMA           reduce using rule 53 (expresions -> empty .)
    ID              reduce using rule 53 (expresions -> empty .)
    SI              reduce using rule 53 (expresions -> empty .)
    HAZ             reduce using rule 53 (expresions -> empty .)
    PARA            reduce using rule 53 (expresions -> empty .)
    IMPRIME         reduce using rule 53 (expresions -> empty .)
    FUNCION         reduce using rule 53 (expresions -> empty .)
    RLLAVE          reduce using rule 53 (expresions -> empty .)


state 93

    (51) expresions -> COMPARA . expresions_push_compara exp
    (56) expresions_push_compara -> .

    LPAREN          reduce using rule 56 (expresions_push_compara -> .)
    ID              reduce using rule 56 (expresions_push_compara -> .)
    CTEINT          reduce using rule 56 (expresions_push_compara -> .)
    CTEDEC          reduce using rule 56 (expresions_push_compara -> .)

    expresions_push_compara        shift and go to state 123

state 94

    (50) expresions -> MENOR . expresions_push_menor exp
    (55) expresions_push_menor -> .

    LPAREN          reduce using rule 55 (expresions_push_menor -> .)
    ID              reduce using rule 55 (expresions_push_menor -> .)
    CTEINT          reduce using rule 55 (expresions_push_menor -> .)
    CTEDEC          reduce using rule 55 (expresions_push_menor -> .)

    expresions_push_menor          shift and go to state 124

state 95

    (52) expresions -> exp .

    RPAREN          reduce using rule 52 (expresions -> exp .)
    COMMA           reduce using rule 52 (expresions -> exp .)
    ID              reduce using rule 52 (expresions -> exp .)
    SI              reduce using rule 52 (expresions -> exp .)
    HAZ             reduce using rule 52 (expresions -> exp .)
    PARA            reduce using rule 52 (expresions -> exp .)
    IMPRIME         reduce using rule 52 (expresions -> exp .)
    FUNCION         reduce using rule 52 (expresions -> exp .)
    RLLAVE          reduce using rule 52 (expresions -> exp .)


state 96

    (90) mientras -> HAZ mientras_haz_push LLLAVE estatuto . RLLAVE MIENTRAS LPAREN expresion RPAREN

    RLLAVE          shift and go to state 125


state 97

    (42) llamada -> ID LPAREN llamadaparam RPAREN .

    ID              reduce using rule 42 (llamada -> ID LPAREN llamadaparam RPAREN .)
    SI              reduce using rule 42 (llamada -> ID LPAREN llamadaparam RPAREN .)
    HAZ             reduce using rule 42 (llamada -> ID LPAREN llamadaparam RPAREN .)
    PARA            reduce using rule 42 (llamada -> ID LPAREN llamadaparam RPAREN .)
    IMPRIME         reduce using rule 42 (llamada -> ID LPAREN llamadaparam RPAREN .)
    FUNCION         reduce using rule 42 (llamada -> ID LPAREN llamadaparam RPAREN .)
    RLLAVE          reduce using rule 42 (llamada -> ID LPAREN llamadaparam RPAREN .)


state 98

    (45) llamadaparams -> COMMA . llamadaparam
    (43) llamadaparam -> . expresion llamadaparams
    (44) llamadaparam -> . empty
    (47) expresion -> . exp expresions
    (48) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (19) empty -> .
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LEE             shift and go to state 63
    RPAREN          reduce using rule 19 (empty -> .)
    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    expresion                      shift and go to state 68
    valor                          shift and go to state 57
    llamadaparam                   shift and go to state 126
    termino                        shift and go to state 55
    exp                            shift and go to state 64
    factor                         shift and go to state 59
    empty                          shift and go to state 67

state 99

    (43) llamadaparam -> expresion llamadaparams .

    RPAREN          reduce using rule 43 (llamadaparam -> expresion llamadaparams .)


state 100

    (46) llamadaparams -> empty .

    RPAREN          reduce using rule 46 (llamadaparams -> empty .)


state 101

    (39) asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual . expresion
    (47) expresion -> . exp expresions
    (48) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LEE             shift and go to state 63
    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    expresion                      shift and go to state 127
    valor                          shift and go to state 57
    termino                        shift and go to state 55
    exp                            shift and go to state 64
    factor                         shift and go to state 59

state 102

    (25) funcion -> FUNCION funcion_increase_func tipo ID . funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (27) funcion_push_id -> .

    LPAREN          reduce using rule 27 (funcion_push_id -> .)

    funcion_push_id                shift and go to state 128

state 103

    (92) escritura -> IMPRIME escritura_escribe LPAREN esc . RPAREN

    RPAREN          shift and go to state 129


state 104

    (95) esc -> STRING . escs
    (96) escs -> . COMMA esc
    (97) escs -> . empty
    (19) empty -> .

    COMMA           shift and go to state 131
    RPAREN          reduce using rule 19 (empty -> .)

    escs                           shift and go to state 130
    empty                          shift and go to state 132

state 105

    (94) esc -> expresion . escs
    (96) escs -> . COMMA esc
    (97) escs -> . empty
    (19) empty -> .

    COMMA           shift and go to state 131
    RPAREN          reduce using rule 19 (empty -> .)

    escs                           shift and go to state 133
    empty                          shift and go to state 132

state 106

    (7) dimension -> LBRAK CTEINT RBRAK . dimension
    (7) dimension -> . LBRAK CTEINT RBRAK dimension
    (8) dimension -> . empty
    (19) empty -> .

    LBRAK           shift and go to state 51
    COMMA           reduce using rule 19 (empty -> .)
    SEMICOL         reduce using rule 19 (empty -> .)

    dimension                      shift and go to state 134
    empty                          shift and go to state 53

state 107

    (6) vars2 -> tipo ID dimension vars_push_id vars3 . SEMICOL vars4

    SEMICOL         shift and go to state 135


state 108

    (10) vars3 -> COMMA . ID dimension vars3_push_id vars3

    ID              shift and go to state 136


state 109

    (11) vars3 -> empty .

    SEMICOL         reduce using rule 11 (vars3 -> empty .)


state 110

    (89) param -> CTEINT .

    COMMA           reduce using rule 89 (param -> CTEINT .)
    RPAREN          reduce using rule 89 (param -> CTEINT .)


state 111

    (87) para -> PARA ID ENRANGO LPAREN param . COMMA param RPAREN LLLAVE estatuto RLLAVE

    COMMA           shift and go to state 137


state 112

    (88) param -> ID .

    COMMA           reduce using rule 88 (param -> ID .)
    RPAREN          reduce using rule 88 (param -> ID .)


state 113

    (58) exps -> PLUS exps_push_plus . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    valor                          shift and go to state 57
    termino                        shift and go to state 138
    factor                         shift and go to state 59

state 114

    (59) exps -> MINUS exps_push_minus . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    valor                          shift and go to state 57
    termino                        shift and go to state 139
    factor                         shift and go to state 59

state 115

    (65) terminos -> DIVIDE terminos_push_divide . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    valor                          shift and go to state 57
    factor                         shift and go to state 140

state 116

    (64) terminos -> TIMES terminos_push_times . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    valor                          shift and go to state 57
    factor                         shift and go to state 141

state 117

    (69) factor -> LPAREN factor_lparen expresion . RPAREN factor_rparen

    RPAREN          shift and go to state 142


state 118

    (76) call_or_array -> LBRAK CTEINT . RBRAK id_array

    RBRAK           shift and go to state 143


state 119

    (77) call_or_array -> LPAREN expresion . id_call RPAREN
    (80) id_call -> . COMMA expresion id_call
    (81) id_call -> . empty
    (19) empty -> .

    COMMA           shift and go to state 144
    RPAREN          reduce using rule 19 (empty -> .)

    id_call                        shift and go to state 145
    empty                          shift and go to state 146

state 120

    (82) condicion -> SI LPAREN expresion RPAREN condicion_if . LLLAVE estatuto RLLAVE else

    LLLAVE          shift and go to state 147


state 121

    (48) expresion -> LEE LPAREN STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 148


state 122

    (49) expresions -> MAYOR expresions_push_mayor . exp
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    termino                        shift and go to state 55
    exp                            shift and go to state 149
    factor                         shift and go to state 59
    valor                          shift and go to state 57

state 123

    (51) expresions -> COMPARA expresions_push_compara . exp
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    valor                          shift and go to state 57
    termino                        shift and go to state 55
    exp                            shift and go to state 150
    factor                         shift and go to state 59

state 124

    (50) expresions -> MENOR expresions_push_menor . exp
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    valor                          shift and go to state 57
    termino                        shift and go to state 55
    exp                            shift and go to state 151
    factor                         shift and go to state 59

state 125

    (90) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE . MIENTRAS LPAREN expresion RPAREN

    MIENTRAS        shift and go to state 152


state 126

    (45) llamadaparams -> COMMA llamadaparam .

    RPAREN          reduce using rule 45 (llamadaparams -> COMMA llamadaparam .)


state 127

    (39) asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .

    ID              reduce using rule 39 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    SI              reduce using rule 39 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    HAZ             reduce using rule 39 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    PARA            reduce using rule 39 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    IMPRIME         reduce using rule 39 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    RLLAVE          reduce using rule 39 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    FUNCION         reduce using rule 39 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)


state 128

    (25) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id . LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE

    LPAREN          shift and go to state 153


state 129

    (92) escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .

    ID              reduce using rule 92 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    SI              reduce using rule 92 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    HAZ             reduce using rule 92 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    PARA            reduce using rule 92 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    IMPRIME         reduce using rule 92 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    FUNCION         reduce using rule 92 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    RLLAVE          reduce using rule 92 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)


state 130

    (95) esc -> STRING escs .

    RPAREN          reduce using rule 95 (esc -> STRING escs .)


state 131

    (96) escs -> COMMA . esc
    (94) esc -> . expresion escs
    (95) esc -> . STRING escs
    (47) expresion -> . exp expresions
    (48) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    STRING          shift and go to state 104
    LEE             shift and go to state 63
    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    expresion                      shift and go to state 105
    valor                          shift and go to state 57
    esc                            shift and go to state 154
    termino                        shift and go to state 55
    exp                            shift and go to state 64
    factor                         shift and go to state 59

state 132

    (97) escs -> empty .

    RPAREN          reduce using rule 97 (escs -> empty .)


state 133

    (94) esc -> expresion escs .

    RPAREN          reduce using rule 94 (esc -> expresion escs .)


state 134

    (7) dimension -> LBRAK CTEINT RBRAK dimension .

    COMMA           reduce using rule 7 (dimension -> LBRAK CTEINT RBRAK dimension .)
    SEMICOL         reduce using rule 7 (dimension -> LBRAK CTEINT RBRAK dimension .)


state 135

    (6) vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL . vars4
    (13) vars4 -> . vars2
    (14) vars4 -> . empty
    (6) vars2 -> . tipo ID dimension vars_push_id vars3 SEMICOL vars4
    (19) empty -> .
    (15) tipo -> . ENTERO
    (16) tipo -> . DECIMAL
    (17) tipo -> . FRASE
    (18) tipo -> . ESVERDAD

    FUNCION         reduce using rule 19 (empty -> .)
    ID              reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)
    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14

    tipo                           shift and go to state 11
    vars2                          shift and go to state 155
    vars4                          shift and go to state 156
    empty                          shift and go to state 157

state 136

    (10) vars3 -> COMMA ID . dimension vars3_push_id vars3
    (7) dimension -> . LBRAK CTEINT RBRAK dimension
    (8) dimension -> . empty
    (19) empty -> .

    LBRAK           shift and go to state 51
    COMMA           reduce using rule 19 (empty -> .)
    SEMICOL         reduce using rule 19 (empty -> .)

    dimension                      shift and go to state 158
    empty                          shift and go to state 53

state 137

    (87) para -> PARA ID ENRANGO LPAREN param COMMA . param RPAREN LLLAVE estatuto RLLAVE
    (88) param -> . ID
    (89) param -> . CTEINT

    ID              shift and go to state 112
    CTEINT          shift and go to state 110

    param                          shift and go to state 159

state 138

    (58) exps -> PLUS exps_push_plus termino . exps
    (58) exps -> . PLUS exps_push_plus termino exps
    (59) exps -> . MINUS exps_push_minus termino exps
    (60) exps -> . empty
    (19) empty -> .

    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    MAYOR           reduce using rule 19 (empty -> .)
    MENOR           reduce using rule 19 (empty -> .)
    COMPARA         reduce using rule 19 (empty -> .)
    LPAREN          reduce using rule 19 (empty -> .)
    ID              reduce using rule 19 (empty -> .)
    CTEINT          reduce using rule 19 (empty -> .)
    CTEDEC          reduce using rule 19 (empty -> .)
    RPAREN          reduce using rule 19 (empty -> .)
    COMMA           reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)

    exps                           shift and go to state 160
    empty                          shift and go to state 78

state 139

    (59) exps -> MINUS exps_push_minus termino . exps
    (58) exps -> . PLUS exps_push_plus termino exps
    (59) exps -> . MINUS exps_push_minus termino exps
    (60) exps -> . empty
    (19) empty -> .

    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    MAYOR           reduce using rule 19 (empty -> .)
    MENOR           reduce using rule 19 (empty -> .)
    COMPARA         reduce using rule 19 (empty -> .)
    LPAREN          reduce using rule 19 (empty -> .)
    ID              reduce using rule 19 (empty -> .)
    CTEINT          reduce using rule 19 (empty -> .)
    CTEDEC          reduce using rule 19 (empty -> .)
    RPAREN          reduce using rule 19 (empty -> .)
    COMMA           reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)

    exps                           shift and go to state 161
    empty                          shift and go to state 78

state 140

    (65) terminos -> DIVIDE terminos_push_divide factor . terminos
    (64) terminos -> . TIMES terminos_push_times factor terminos
    (65) terminos -> . DIVIDE terminos_push_divide factor terminos
    (66) terminos -> . empty
    (19) empty -> .

    TIMES           shift and go to state 81
    DIVIDE          shift and go to state 79
    PLUS            reduce using rule 19 (empty -> .)
    MINUS           reduce using rule 19 (empty -> .)
    MAYOR           reduce using rule 19 (empty -> .)
    MENOR           reduce using rule 19 (empty -> .)
    COMPARA         reduce using rule 19 (empty -> .)
    LPAREN          reduce using rule 19 (empty -> .)
    ID              reduce using rule 19 (empty -> .)
    CTEINT          reduce using rule 19 (empty -> .)
    CTEDEC          reduce using rule 19 (empty -> .)
    RPAREN          reduce using rule 19 (empty -> .)
    COMMA           reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)

    terminos                       shift and go to state 162
    empty                          shift and go to state 82

state 141

    (64) terminos -> TIMES terminos_push_times factor . terminos
    (64) terminos -> . TIMES terminos_push_times factor terminos
    (65) terminos -> . DIVIDE terminos_push_divide factor terminos
    (66) terminos -> . empty
    (19) empty -> .

    TIMES           shift and go to state 81
    DIVIDE          shift and go to state 79
    PLUS            reduce using rule 19 (empty -> .)
    MINUS           reduce using rule 19 (empty -> .)
    MAYOR           reduce using rule 19 (empty -> .)
    MENOR           reduce using rule 19 (empty -> .)
    COMPARA         reduce using rule 19 (empty -> .)
    LPAREN          reduce using rule 19 (empty -> .)
    ID              reduce using rule 19 (empty -> .)
    CTEINT          reduce using rule 19 (empty -> .)
    CTEDEC          reduce using rule 19 (empty -> .)
    RPAREN          reduce using rule 19 (empty -> .)
    COMMA           reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)

    terminos                       shift and go to state 163
    empty                          shift and go to state 82

state 142

    (69) factor -> LPAREN factor_lparen expresion RPAREN . factor_rparen
    (72) factor_rparen -> .

    TIMES           reduce using rule 72 (factor_rparen -> .)
    DIVIDE          reduce using rule 72 (factor_rparen -> .)
    PLUS            reduce using rule 72 (factor_rparen -> .)
    MINUS           reduce using rule 72 (factor_rparen -> .)
    MAYOR           reduce using rule 72 (factor_rparen -> .)
    MENOR           reduce using rule 72 (factor_rparen -> .)
    COMPARA         reduce using rule 72 (factor_rparen -> .)
    LPAREN          reduce using rule 72 (factor_rparen -> .)
    ID              reduce using rule 72 (factor_rparen -> .)
    CTEINT          reduce using rule 72 (factor_rparen -> .)
    CTEDEC          reduce using rule 72 (factor_rparen -> .)
    RPAREN          reduce using rule 72 (factor_rparen -> .)
    COMMA           reduce using rule 72 (factor_rparen -> .)
    SI              reduce using rule 72 (factor_rparen -> .)
    HAZ             reduce using rule 72 (factor_rparen -> .)
    PARA            reduce using rule 72 (factor_rparen -> .)
    IMPRIME         reduce using rule 72 (factor_rparen -> .)
    FUNCION         reduce using rule 72 (factor_rparen -> .)
    RLLAVE          reduce using rule 72 (factor_rparen -> .)

    factor_rparen                  shift and go to state 164

state 143

    (76) call_or_array -> LBRAK CTEINT RBRAK . id_array
    (79) id_array -> . call_or_array
    (76) call_or_array -> . LBRAK CTEINT RBRAK id_array
    (77) call_or_array -> . LPAREN expresion id_call RPAREN
    (78) call_or_array -> . empty
    (19) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LBRAK           shift and go to state 84
    LPAREN          shift and go to state 85
    TIMES           reduce using rule 19 (empty -> .)
    DIVIDE          reduce using rule 19 (empty -> .)
    PLUS            reduce using rule 19 (empty -> .)
    MINUS           reduce using rule 19 (empty -> .)
    MAYOR           reduce using rule 19 (empty -> .)
    MENOR           reduce using rule 19 (empty -> .)
    COMPARA         reduce using rule 19 (empty -> .)
    ID              reduce using rule 19 (empty -> .)
    CTEINT          reduce using rule 19 (empty -> .)
    CTEDEC          reduce using rule 19 (empty -> .)
    RPAREN          reduce using rule 19 (empty -> .)
    COMMA           reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)

  ! LPAREN          [ reduce using rule 19 (empty -> .) ]

    call_or_array                  shift and go to state 166
    id_array                       shift and go to state 165
    empty                          shift and go to state 87

state 144

    (80) id_call -> COMMA . expresion id_call
    (47) expresion -> . exp expresions
    (48) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LEE             shift and go to state 63
    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    expresion                      shift and go to state 167
    valor                          shift and go to state 57
    termino                        shift and go to state 55
    exp                            shift and go to state 64
    factor                         shift and go to state 59

state 145

    (77) call_or_array -> LPAREN expresion id_call . RPAREN

    RPAREN          shift and go to state 168


state 146

    (81) id_call -> empty .

    RPAREN          reduce using rule 81 (id_call -> empty .)


state 147

    (82) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE . estatuto RLLAVE else
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 169
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    escritura                      shift and go to state 32

state 148

    (48) expresion -> LEE LPAREN STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 170


state 149

    (49) expresions -> MAYOR expresions_push_mayor exp .

    RPAREN          reduce using rule 49 (expresions -> MAYOR expresions_push_mayor exp .)
    COMMA           reduce using rule 49 (expresions -> MAYOR expresions_push_mayor exp .)
    ID              reduce using rule 49 (expresions -> MAYOR expresions_push_mayor exp .)
    SI              reduce using rule 49 (expresions -> MAYOR expresions_push_mayor exp .)
    HAZ             reduce using rule 49 (expresions -> MAYOR expresions_push_mayor exp .)
    PARA            reduce using rule 49 (expresions -> MAYOR expresions_push_mayor exp .)
    IMPRIME         reduce using rule 49 (expresions -> MAYOR expresions_push_mayor exp .)
    FUNCION         reduce using rule 49 (expresions -> MAYOR expresions_push_mayor exp .)
    RLLAVE          reduce using rule 49 (expresions -> MAYOR expresions_push_mayor exp .)


state 150

    (51) expresions -> COMPARA expresions_push_compara exp .

    RPAREN          reduce using rule 51 (expresions -> COMPARA expresions_push_compara exp .)
    COMMA           reduce using rule 51 (expresions -> COMPARA expresions_push_compara exp .)
    ID              reduce using rule 51 (expresions -> COMPARA expresions_push_compara exp .)
    SI              reduce using rule 51 (expresions -> COMPARA expresions_push_compara exp .)
    HAZ             reduce using rule 51 (expresions -> COMPARA expresions_push_compara exp .)
    PARA            reduce using rule 51 (expresions -> COMPARA expresions_push_compara exp .)
    IMPRIME         reduce using rule 51 (expresions -> COMPARA expresions_push_compara exp .)
    FUNCION         reduce using rule 51 (expresions -> COMPARA expresions_push_compara exp .)
    RLLAVE          reduce using rule 51 (expresions -> COMPARA expresions_push_compara exp .)


state 151

    (50) expresions -> MENOR expresions_push_menor exp .

    RPAREN          reduce using rule 50 (expresions -> MENOR expresions_push_menor exp .)
    COMMA           reduce using rule 50 (expresions -> MENOR expresions_push_menor exp .)
    ID              reduce using rule 50 (expresions -> MENOR expresions_push_menor exp .)
    SI              reduce using rule 50 (expresions -> MENOR expresions_push_menor exp .)
    HAZ             reduce using rule 50 (expresions -> MENOR expresions_push_menor exp .)
    PARA            reduce using rule 50 (expresions -> MENOR expresions_push_menor exp .)
    IMPRIME         reduce using rule 50 (expresions -> MENOR expresions_push_menor exp .)
    FUNCION         reduce using rule 50 (expresions -> MENOR expresions_push_menor exp .)
    RLLAVE          reduce using rule 50 (expresions -> MENOR expresions_push_menor exp .)


state 152

    (90) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS . LPAREN expresion RPAREN

    LPAREN          shift and go to state 171


state 153

    (25) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN . funparam RPAREN LLLAVE vars bloque RLLAVE
    (28) funparam -> . tipo ID funparam_push_id funparams
    (29) funparam -> . empty
    (15) tipo -> . ENTERO
    (16) tipo -> . DECIMAL
    (17) tipo -> . FRASE
    (18) tipo -> . ESVERDAD
    (19) empty -> .

    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14
    RPAREN          reduce using rule 19 (empty -> .)

    tipo                           shift and go to state 172
    funparam                       shift and go to state 173
    empty                          shift and go to state 174

state 154

    (96) escs -> COMMA esc .

    RPAREN          reduce using rule 96 (escs -> COMMA esc .)


state 155

    (13) vars4 -> vars2 .

    FUNCION         reduce using rule 13 (vars4 -> vars2 .)
    ID              reduce using rule 13 (vars4 -> vars2 .)
    SI              reduce using rule 13 (vars4 -> vars2 .)
    HAZ             reduce using rule 13 (vars4 -> vars2 .)
    PARA            reduce using rule 13 (vars4 -> vars2 .)
    IMPRIME         reduce using rule 13 (vars4 -> vars2 .)
    RLLAVE          reduce using rule 13 (vars4 -> vars2 .)


state 156

    (6) vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .

    FUNCION         reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    ID              reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    SI              reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    HAZ             reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    PARA            reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    IMPRIME         reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)
    RLLAVE          reduce using rule 6 (vars2 -> tipo ID dimension vars_push_id vars3 SEMICOL vars4 .)


state 157

    (14) vars4 -> empty .

    FUNCION         reduce using rule 14 (vars4 -> empty .)
    ID              reduce using rule 14 (vars4 -> empty .)
    SI              reduce using rule 14 (vars4 -> empty .)
    HAZ             reduce using rule 14 (vars4 -> empty .)
    PARA            reduce using rule 14 (vars4 -> empty .)
    IMPRIME         reduce using rule 14 (vars4 -> empty .)
    RLLAVE          reduce using rule 14 (vars4 -> empty .)


state 158

    (10) vars3 -> COMMA ID dimension . vars3_push_id vars3
    (12) vars3_push_id -> .

    COMMA           reduce using rule 12 (vars3_push_id -> .)
    SEMICOL         reduce using rule 12 (vars3_push_id -> .)

    vars3_push_id                  shift and go to state 175

state 159

    (87) para -> PARA ID ENRANGO LPAREN param COMMA param . RPAREN LLLAVE estatuto RLLAVE

    RPAREN          shift and go to state 176


state 160

    (58) exps -> PLUS exps_push_plus termino exps .

    MAYOR           reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    MENOR           reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    COMPARA         reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    LPAREN          reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    ID              reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    CTEINT          reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    CTEDEC          reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    RPAREN          reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    COMMA           reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    SI              reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    HAZ             reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    PARA            reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    IMPRIME         reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    FUNCION         reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)
    RLLAVE          reduce using rule 58 (exps -> PLUS exps_push_plus termino exps .)


state 161

    (59) exps -> MINUS exps_push_minus termino exps .

    MAYOR           reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    MENOR           reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    COMPARA         reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    LPAREN          reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    ID              reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    CTEINT          reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    CTEDEC          reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    RPAREN          reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    COMMA           reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    SI              reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    HAZ             reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    PARA            reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    IMPRIME         reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    FUNCION         reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)
    RLLAVE          reduce using rule 59 (exps -> MINUS exps_push_minus termino exps .)


state 162

    (65) terminos -> DIVIDE terminos_push_divide factor terminos .

    PLUS            reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MINUS           reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MAYOR           reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MENOR           reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    COMPARA         reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    LPAREN          reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    ID              reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    CTEINT          reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    CTEDEC          reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    RPAREN          reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    COMMA           reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    SI              reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    HAZ             reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    PARA            reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    IMPRIME         reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    FUNCION         reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    RLLAVE          reduce using rule 65 (terminos -> DIVIDE terminos_push_divide factor terminos .)


state 163

    (64) terminos -> TIMES terminos_push_times factor terminos .

    PLUS            reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    MINUS           reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    MAYOR           reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    MENOR           reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    COMPARA         reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    LPAREN          reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    ID              reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    CTEINT          reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    CTEDEC          reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    RPAREN          reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    COMMA           reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    SI              reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    HAZ             reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    PARA            reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    IMPRIME         reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    FUNCION         reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)
    RLLAVE          reduce using rule 64 (terminos -> TIMES terminos_push_times factor terminos .)


state 164

    (69) factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .

    TIMES           reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    DIVIDE          reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    PLUS            reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MINUS           reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MAYOR           reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MENOR           reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    COMPARA         reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    LPAREN          reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    ID              reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    CTEINT          reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    CTEDEC          reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    COMMA           reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    RPAREN          reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    SI              reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    HAZ             reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    PARA            reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    IMPRIME         reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    FUNCION         reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    RLLAVE          reduce using rule 69 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)


state 165

    (76) call_or_array -> LBRAK CTEINT RBRAK id_array .

    TIMES           reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    DIVIDE          reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    PLUS            reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    MINUS           reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    MAYOR           reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    MENOR           reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    COMPARA         reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    LPAREN          reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    ID              reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    CTEINT          reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    CTEDEC          reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    RPAREN          reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    COMMA           reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    SI              reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    HAZ             reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    PARA            reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    IMPRIME         reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    FUNCION         reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)
    RLLAVE          reduce using rule 76 (call_or_array -> LBRAK CTEINT RBRAK id_array .)


state 166

    (79) id_array -> call_or_array .

    TIMES           reduce using rule 79 (id_array -> call_or_array .)
    DIVIDE          reduce using rule 79 (id_array -> call_or_array .)
    PLUS            reduce using rule 79 (id_array -> call_or_array .)
    MINUS           reduce using rule 79 (id_array -> call_or_array .)
    MAYOR           reduce using rule 79 (id_array -> call_or_array .)
    MENOR           reduce using rule 79 (id_array -> call_or_array .)
    COMPARA         reduce using rule 79 (id_array -> call_or_array .)
    LPAREN          reduce using rule 79 (id_array -> call_or_array .)
    ID              reduce using rule 79 (id_array -> call_or_array .)
    CTEINT          reduce using rule 79 (id_array -> call_or_array .)
    CTEDEC          reduce using rule 79 (id_array -> call_or_array .)
    RPAREN          reduce using rule 79 (id_array -> call_or_array .)
    COMMA           reduce using rule 79 (id_array -> call_or_array .)
    SI              reduce using rule 79 (id_array -> call_or_array .)
    HAZ             reduce using rule 79 (id_array -> call_or_array .)
    PARA            reduce using rule 79 (id_array -> call_or_array .)
    IMPRIME         reduce using rule 79 (id_array -> call_or_array .)
    FUNCION         reduce using rule 79 (id_array -> call_or_array .)
    RLLAVE          reduce using rule 79 (id_array -> call_or_array .)


state 167

    (80) id_call -> COMMA expresion . id_call
    (80) id_call -> . COMMA expresion id_call
    (81) id_call -> . empty
    (19) empty -> .

    COMMA           shift and go to state 144
    RPAREN          reduce using rule 19 (empty -> .)

    id_call                        shift and go to state 177
    empty                          shift and go to state 146

state 168

    (77) call_or_array -> LPAREN expresion id_call RPAREN .

    TIMES           reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    DIVIDE          reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    PLUS            reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    MINUS           reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    MAYOR           reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    MENOR           reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    COMPARA         reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    LPAREN          reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    ID              reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    CTEINT          reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    CTEDEC          reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    RPAREN          reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    COMMA           reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    SI              reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    HAZ             reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    PARA            reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    IMPRIME         reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    FUNCION         reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)
    RLLAVE          reduce using rule 77 (call_or_array -> LPAREN expresion id_call RPAREN .)


state 169

    (82) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto . RLLAVE else

    RLLAVE          shift and go to state 178


state 170

    (48) expresion -> LEE LPAREN STRING RPAREN SEMICOL .

    COMMA           reduce using rule 48 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    RPAREN          reduce using rule 48 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    ID              reduce using rule 48 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    SI              reduce using rule 48 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    HAZ             reduce using rule 48 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    PARA            reduce using rule 48 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    IMPRIME         reduce using rule 48 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    FUNCION         reduce using rule 48 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    RLLAVE          reduce using rule 48 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)


state 171

    (90) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN . expresion RPAREN
    (47) expresion -> . exp expresions
    (48) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (57) exp -> . termino exps
    (63) termino -> . factor terminos
    (69) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (70) factor -> . valor
    (73) valor -> . ID call_or_array
    (74) valor -> . CTEINT
    (75) valor -> . CTEDEC

    LEE             shift and go to state 63
    LPAREN          shift and go to state 60
    ID              shift and go to state 61
    CTEINT          shift and go to state 56
    CTEDEC          shift and go to state 58

    expresion                      shift and go to state 179
    valor                          shift and go to state 57
    exp                            shift and go to state 64
    factor                         shift and go to state 59
    termino                        shift and go to state 55

state 172

    (28) funparam -> tipo . ID funparam_push_id funparams

    ID              shift and go to state 180


state 173

    (25) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam . RPAREN LLLAVE vars bloque RLLAVE

    RPAREN          shift and go to state 181


state 174

    (29) funparam -> empty .

    RPAREN          reduce using rule 29 (funparam -> empty .)


state 175

    (10) vars3 -> COMMA ID dimension vars3_push_id . vars3
    (10) vars3 -> . COMMA ID dimension vars3_push_id vars3
    (11) vars3 -> . empty
    (19) empty -> .

    COMMA           shift and go to state 108
    SEMICOL         reduce using rule 19 (empty -> .)

    vars3                          shift and go to state 182
    empty                          shift and go to state 109

state 176

    (87) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN . LLLAVE estatuto RLLAVE

    LLLAVE          shift and go to state 183


state 177

    (80) id_call -> COMMA expresion id_call .

    RPAREN          reduce using rule 80 (id_call -> COMMA expresion id_call .)


state 178

    (82) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE . else
    (84) else -> . SINO else_2 LLLAVE estatuto RLLAVE
    (85) else -> . empty
    (19) empty -> .

    SINO            shift and go to state 185
    ID              reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    FUNCION         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)

    else                           shift and go to state 184
    empty                          shift and go to state 186

state 179

    (90) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion . RPAREN

    RPAREN          shift and go to state 187


state 180

    (28) funparam -> tipo ID . funparam_push_id funparams
    (30) funparam_push_id -> .

    COMMA           reduce using rule 30 (funparam_push_id -> .)
    RPAREN          reduce using rule 30 (funparam_push_id -> .)

    funparam_push_id               shift and go to state 188

state 181

    (25) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN . LLLAVE vars bloque RLLAVE

    LLLAVE          shift and go to state 189


state 182

    (10) vars3 -> COMMA ID dimension vars3_push_id vars3 .

    SEMICOL         reduce using rule 10 (vars3 -> COMMA ID dimension vars3_push_id vars3 .)


state 183

    (87) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE . estatuto RLLAVE
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 190
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    escritura                      shift and go to state 32

state 184

    (82) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .

    ID              reduce using rule 82 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    SI              reduce using rule 82 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    HAZ             reduce using rule 82 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    PARA            reduce using rule 82 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    IMPRIME         reduce using rule 82 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    RLLAVE          reduce using rule 82 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    FUNCION         reduce using rule 82 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)


state 185

    (84) else -> SINO . else_2 LLLAVE estatuto RLLAVE
    (86) else_2 -> .

    LLLAVE          reduce using rule 86 (else_2 -> .)

    else_2                         shift and go to state 191

state 186

    (85) else -> empty .

    ID              reduce using rule 85 (else -> empty .)
    SI              reduce using rule 85 (else -> empty .)
    HAZ             reduce using rule 85 (else -> empty .)
    PARA            reduce using rule 85 (else -> empty .)
    IMPRIME         reduce using rule 85 (else -> empty .)
    FUNCION         reduce using rule 85 (else -> empty .)
    RLLAVE          reduce using rule 85 (else -> empty .)


state 187

    (90) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .

    ID              reduce using rule 90 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    SI              reduce using rule 90 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    HAZ             reduce using rule 90 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    PARA            reduce using rule 90 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    IMPRIME         reduce using rule 90 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    FUNCION         reduce using rule 90 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    RLLAVE          reduce using rule 90 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)


state 188

    (28) funparam -> tipo ID funparam_push_id . funparams
    (31) funparams -> . COMMA funparam
    (32) funparams -> . empty
    (19) empty -> .

    COMMA           shift and go to state 192
    RPAREN          reduce using rule 19 (empty -> .)

    funparams                      shift and go to state 193
    empty                          shift and go to state 194

state 189

    (25) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE . vars bloque RLLAVE
    (4) vars -> . VAR vars2
    (5) vars -> . empty
    (19) empty -> .

    VAR             shift and go to state 7
    ID              reduce using rule 19 (empty -> .)
    SI              reduce using rule 19 (empty -> .)
    HAZ             reduce using rule 19 (empty -> .)
    PARA            reduce using rule 19 (empty -> .)
    IMPRIME         reduce using rule 19 (empty -> .)
    RLLAVE          reduce using rule 19 (empty -> .)

    vars                           shift and go to state 195
    empty                          shift and go to state 8

state 190

    (87) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto . RLLAVE

    RLLAVE          shift and go to state 196


state 191

    (84) else -> SINO else_2 . LLLAVE estatuto RLLAVE

    LLLAVE          shift and go to state 197


state 192

    (31) funparams -> COMMA . funparam
    (28) funparam -> . tipo ID funparam_push_id funparams
    (29) funparam -> . empty
    (15) tipo -> . ENTERO
    (16) tipo -> . DECIMAL
    (17) tipo -> . FRASE
    (18) tipo -> . ESVERDAD
    (19) empty -> .

    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14
    RPAREN          reduce using rule 19 (empty -> .)

    funparam                       shift and go to state 198
    empty                          shift and go to state 174
    tipo                           shift and go to state 172

state 193

    (28) funparam -> tipo ID funparam_push_id funparams .

    RPAREN          reduce using rule 28 (funparam -> tipo ID funparam_push_id funparams .)


state 194

    (32) funparams -> empty .

    RPAREN          reduce using rule 32 (funparams -> empty .)


state 195

    (25) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars . bloque RLLAVE
    (23) bloque -> . estatuto
    (24) bloque -> . empty
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (19) empty -> .
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

    RLLAVE          reduce using rule 19 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

    mientras                       shift and go to state 16
    bloque                         shift and go to state 199
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 35
    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    escritura                      shift and go to state 32

state 196

    (87) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .

    ID              reduce using rule 87 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    SI              reduce using rule 87 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    HAZ             reduce using rule 87 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    PARA            reduce using rule 87 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    IMPRIME         reduce using rule 87 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    RLLAVE          reduce using rule 87 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    FUNCION         reduce using rule 87 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)


state 197

    (84) else -> SINO else_2 LLLAVE . estatuto RLLAVE
    (33) estatuto -> . asignacion bloque
    (34) estatuto -> . condicion bloque
    (35) estatuto -> . mientras bloque
    (36) estatuto -> . para bloque
    (37) estatuto -> . escritura bloque
    (38) estatuto -> . llamada bloque
    (39) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (82) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (90) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (87) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (92) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (42) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 200
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    escritura                      shift and go to state 32

state 198

    (31) funparams -> COMMA funparam .

    RPAREN          reduce using rule 31 (funparams -> COMMA funparam .)


state 199

    (25) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque . RLLAVE

    RLLAVE          shift and go to state 201


state 200

    (84) else -> SINO else_2 LLLAVE estatuto . RLLAVE

    RLLAVE          shift and go to state 202


state 201

    (25) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .

    FUNCION         reduce using rule 25 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    ID              reduce using rule 25 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    SI              reduce using rule 25 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    HAZ             reduce using rule 25 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    PARA            reduce using rule 25 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    IMPRIME         reduce using rule 25 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    RLLAVE          reduce using rule 25 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)


state 202

    (84) else -> SINO else_2 LLLAVE estatuto RLLAVE .

    ID              reduce using rule 84 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    SI              reduce using rule 84 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    HAZ             reduce using rule 84 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    PARA            reduce using rule 84 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    IMPRIME         reduce using rule 84 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    FUNCION         reduce using rule 84 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    RLLAVE          reduce using rule 84 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCION in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for SI in state 9 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 9 resolved as shift
WARNING: shift/reduce conflict for PARA in state 9 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SI in state 16 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 16 resolved as shift
WARNING: shift/reduce conflict for PARA in state 16 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 16 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 17 resolved as shift
WARNING: shift/reduce conflict for ID in state 17 resolved as shift
WARNING: shift/reduce conflict for SI in state 17 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 17 resolved as shift
WARNING: shift/reduce conflict for PARA in state 17 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 17 resolved as shift
WARNING: shift/reduce conflict for ID in state 21 resolved as shift
WARNING: shift/reduce conflict for SI in state 21 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 21 resolved as shift
WARNING: shift/reduce conflict for PARA in state 21 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 21 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for SI in state 22 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 22 resolved as shift
WARNING: shift/reduce conflict for PARA in state 22 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 22 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 24 resolved as shift
WARNING: shift/reduce conflict for ID in state 24 resolved as shift
WARNING: shift/reduce conflict for SI in state 24 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 24 resolved as shift
WARNING: shift/reduce conflict for PARA in state 24 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 24 resolved as shift
WARNING: shift/reduce conflict for ID in state 26 resolved as shift
WARNING: shift/reduce conflict for SI in state 26 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 26 resolved as shift
WARNING: shift/reduce conflict for PARA in state 26 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 26 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for SI in state 31 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 31 resolved as shift
WARNING: shift/reduce conflict for PARA in state 31 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for SI in state 32 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 32 resolved as shift
WARNING: shift/reduce conflict for PARA in state 32 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 32 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 61 resolved as shift
WARNING: shift/reduce conflict for ID in state 64 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 143 resolved as shift
WARNING: reduce/reduce conflict in state 23 resolved using rule (body -> empty)
WARNING: rejected rule (bloque -> empty) in state 23
