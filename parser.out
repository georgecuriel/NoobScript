Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    RBRAK
    VGLOBAL
    CLASE
    COLON
    LBRAK

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE
Rule 2     programa_push_id -> <empty>
Rule 3     programa_push_dict -> <empty>
Rule 4     vars -> VAR vars2
Rule 5     vars -> empty
Rule 6     vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4
Rule 7     vars_push_id -> <empty>
Rule 8     vars3 -> COMMA ID vars3_push_id vars3
Rule 9     vars3 -> empty
Rule 10    vars3_push_id -> <empty>
Rule 11    vars4 -> vars2
Rule 12    vars4 -> empty
Rule 13    tipo -> ENTERO
Rule 14    tipo -> DECIMAL
Rule 15    tipo -> FRASE
Rule 16    tipo -> ESVERDAD
Rule 17    empty -> <empty>
Rule 18    body -> funcion body
Rule 19    body -> bloque body
Rule 20    body -> empty
Rule 21    bloque -> estatuto
Rule 22    bloque -> empty
Rule 23    funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
Rule 24    funcion_increase_func -> <empty>
Rule 25    funcion_push_id -> <empty>
Rule 26    funparam -> tipo ID funparam_push_id funparams
Rule 27    funparam -> empty
Rule 28    funparam_push_id -> <empty>
Rule 29    funparams -> COMMA funparam
Rule 30    funparams -> empty
Rule 31    estatuto -> asignacion bloque
Rule 32    estatuto -> condicion bloque
Rule 33    estatuto -> mientras bloque
Rule 34    estatuto -> para bloque
Rule 35    estatuto -> escritura bloque
Rule 36    estatuto -> llamada bloque
Rule 37    asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion
Rule 38    asignacion_push_id -> <empty>
Rule 39    asignacion_push_igual -> <empty>
Rule 40    llamada -> ID LPAREN llamadaparam RPAREN
Rule 41    llamadaparam -> valor llamadaparams
Rule 42    llamadaparam -> empty
Rule 43    llamadaparams -> COMMA llamadaparam
Rule 44    llamadaparams -> empty
Rule 45    expresion -> exp expresions
Rule 46    expresion -> LEE LPAREN STRING RPAREN SEMICOL
Rule 47    expresions -> MAYOR expresions_push_mayor exp
Rule 48    expresions -> MENOR expresions_push_menor exp
Rule 49    expresions -> COMPARA expresions_push_compara exp
Rule 50    expresions -> exp
Rule 51    expresions -> empty
Rule 52    expresions_push_mayor -> <empty>
Rule 53    expresions_push_menor -> <empty>
Rule 54    expresions_push_compara -> <empty>
Rule 55    exp -> termino exps
Rule 56    exps -> PLUS exps_push_plus termino exps
Rule 57    exps -> MINUS exps_push_minus termino exps
Rule 58    exps -> empty
Rule 59    exps_push_plus -> <empty>
Rule 60    exps_push_minus -> <empty>
Rule 61    termino -> factor terminos
Rule 62    terminos -> TIMES terminos_push_times factor terminos
Rule 63    terminos -> DIVIDE terminos_push_divide factor terminos
Rule 64    terminos -> empty
Rule 65    terminos_push_times -> <empty>
Rule 66    terminos_push_divide -> <empty>
Rule 67    factor -> LPAREN factor_lparen expresion RPAREN factor_rparen
Rule 68    factor -> valor
Rule 69    factor_lparen -> <empty>
Rule 70    factor_rparen -> <empty>
Rule 71    valor -> ID
Rule 72    valor -> CTEINT
Rule 73    valor -> CTEDEC
Rule 74    valor -> llamada
Rule 75    condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
Rule 76    condicion_if -> <empty>
Rule 77    else -> SINO else_2 LLLAVE estatuto RLLAVE
Rule 78    else -> empty
Rule 79    else_2 -> <empty>
Rule 80    para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
Rule 81    param -> ID
Rule 82    param -> CTEINT
Rule 83    mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
Rule 84    mientras_haz_push -> <empty>
Rule 85    escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN
Rule 86    escritura_escribe -> <empty>
Rule 87    esc -> expresion escs
Rule 88    esc -> STRING escs
Rule 89    escs -> COMMA esc
Rule 90    escs -> empty

Terminals, with rules where they appear

CLASE                : 
COLON                : 
COMMA                : 8 29 43 80 89
COMPARA              : 49
CTEDEC               : 73
CTEINT               : 72 82
DECIMAL              : 14
DIVIDE               : 63
ENRANGO              : 80
ENTERO               : 13
ESVERDAD             : 16
FRASE                : 15
FUNCION              : 23
HAZ                  : 83
ID                   : 1 6 8 23 26 37 40 71 80 81
IGUAL                : 37
IMPRIME              : 85
LBRAK                : 
LEE                  : 46
LLLAVE               : 1 23 75 77 80 83
LPAREN               : 23 40 46 67 75 80 83 85
MAYOR                : 47
MENOR                : 48
MIENTRAS             : 83
MINUS                : 57
PARA                 : 80
PLUS                 : 56
PROGRAMA             : 1
RBRAK                : 
RLLAVE               : 1 23 75 77 80 83
RPAREN               : 23 40 46 67 75 80 83 85
SEMICOL              : 6 46
SI                   : 75
SINO                 : 77
STRING               : 46 88
TIMES                : 62
VAR                  : 4
VGLOBAL              : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 31
asignacion_push_id   : 37
asignacion_push_igual : 37
bloque               : 19 23 31 32 33 34 35 36
body                 : 1 18 19
condicion            : 32
condicion_if         : 75
else                 : 75
else_2               : 77
empty                : 5 9 12 20 22 27 30 42 44 51 58 64 78 90
esc                  : 85 89
escritura            : 35
escritura_escribe    : 85
escs                 : 87 88
estatuto             : 21 75 77 80 83
exp                  : 45 47 48 49 50
expresion            : 37 67 75 83 87
expresions           : 45
expresions_push_compara : 49
expresions_push_mayor : 47
expresions_push_menor : 48
exps                 : 55 56 57
exps_push_minus      : 57
exps_push_plus       : 56
factor               : 61 62 63
factor_lparen        : 67
factor_rparen        : 67
funcion              : 18
funcion_increase_func : 23
funcion_push_id      : 23
funparam             : 23 29
funparam_push_id     : 26
funparams            : 26
llamada              : 36 74
llamadaparam         : 40 43
llamadaparams        : 41
mientras             : 33
mientras_haz_push    : 83
para                 : 34
param                : 80 80
programa             : 0
programa_push_dict   : 1
programa_push_id     : 1
termino              : 55 56 57
terminos             : 61 62 63
terminos_push_divide : 63
terminos_push_times  : 62
tipo                 : 6 23 26
valor                : 41 68
vars                 : 1 23
vars2                : 4 11
vars3                : 6 8
vars3_push_id        : 8
vars4                : 6
vars_push_id         : 6

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . LLLAVE programa_push_id vars programa_push_dict body RLLAVE

    LLLAVE          shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID LLLAVE . programa_push_id vars programa_push_dict body RLLAVE
    (2) programa_push_id -> .

    VAR             reduce using rule 2 (programa_push_id -> .)
    FUNCION         reduce using rule 2 (programa_push_id -> .)
    ID              reduce using rule 2 (programa_push_id -> .)
    SI              reduce using rule 2 (programa_push_id -> .)
    HAZ             reduce using rule 2 (programa_push_id -> .)
    PARA            reduce using rule 2 (programa_push_id -> .)
    IMPRIME         reduce using rule 2 (programa_push_id -> .)
    RLLAVE          reduce using rule 2 (programa_push_id -> .)

    programa_push_id               shift and go to state 5

state 5

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id . vars programa_push_dict body RLLAVE
    (4) vars -> . VAR vars2
    (5) vars -> . empty
    (17) empty -> .

    VAR             shift and go to state 7
    FUNCION         reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    vars                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id vars . programa_push_dict body RLLAVE
    (3) programa_push_dict -> .

    FUNCION         reduce using rule 3 (programa_push_dict -> .)
    ID              reduce using rule 3 (programa_push_dict -> .)
    SI              reduce using rule 3 (programa_push_dict -> .)
    HAZ             reduce using rule 3 (programa_push_dict -> .)
    PARA            reduce using rule 3 (programa_push_dict -> .)
    IMPRIME         reduce using rule 3 (programa_push_dict -> .)
    RLLAVE          reduce using rule 3 (programa_push_dict -> .)

    programa_push_dict             shift and go to state 9

state 7

    (4) vars -> VAR . vars2
    (6) vars2 -> . tipo ID vars_push_id vars3 SEMICOL vars4
    (13) tipo -> . ENTERO
    (14) tipo -> . DECIMAL
    (15) tipo -> . FRASE
    (16) tipo -> . ESVERDAD

    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14

    vars2                          shift and go to state 13
    tipo                           shift and go to state 11

state 8

    (5) vars -> empty .

    FUNCION         reduce using rule 5 (vars -> empty .)
    ID              reduce using rule 5 (vars -> empty .)
    SI              reduce using rule 5 (vars -> empty .)
    HAZ             reduce using rule 5 (vars -> empty .)
    PARA            reduce using rule 5 (vars -> empty .)
    IMPRIME         reduce using rule 5 (vars -> empty .)
    RLLAVE          reduce using rule 5 (vars -> empty .)


state 9

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict . body RLLAVE
    (18) body -> . funcion body
    (19) body -> . bloque body
    (20) body -> . empty
    (23) funcion -> . FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (17) empty -> .
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         shift and go to state 29
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! FUNCION         [ reduce using rule 17 (empty -> .) ]
  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 17
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 23
    funcion                        shift and go to state 24
    body                           shift and go to state 25
    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    escritura                      shift and go to state 32

state 10

    (15) tipo -> FRASE .

    ID              reduce using rule 15 (tipo -> FRASE .)


state 11

    (6) vars2 -> tipo . ID vars_push_id vars3 SEMICOL vars4

    ID              shift and go to state 33


state 12

    (14) tipo -> DECIMAL .

    ID              reduce using rule 14 (tipo -> DECIMAL .)


state 13

    (4) vars -> VAR vars2 .

    FUNCION         reduce using rule 4 (vars -> VAR vars2 .)
    ID              reduce using rule 4 (vars -> VAR vars2 .)
    SI              reduce using rule 4 (vars -> VAR vars2 .)
    HAZ             reduce using rule 4 (vars -> VAR vars2 .)
    PARA            reduce using rule 4 (vars -> VAR vars2 .)
    IMPRIME         reduce using rule 4 (vars -> VAR vars2 .)
    RLLAVE          reduce using rule 4 (vars -> VAR vars2 .)


state 14

    (16) tipo -> ESVERDAD .

    ID              reduce using rule 16 (tipo -> ESVERDAD .)


state 15

    (13) tipo -> ENTERO .

    ID              reduce using rule 13 (tipo -> ENTERO .)


state 16

    (33) estatuto -> mientras . bloque
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 19
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    bloque                         shift and go to state 34
    empty                          shift and go to state 35
    escritura                      shift and go to state 32

state 17

    (19) body -> bloque . body
    (18) body -> . funcion body
    (19) body -> . bloque body
    (20) body -> . empty
    (23) funcion -> . FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (17) empty -> .
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         shift and go to state 29
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! FUNCION         [ reduce using rule 17 (empty -> .) ]
  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 17
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 23
    funcion                        shift and go to state 24
    body                           shift and go to state 36
    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    escritura                      shift and go to state 32

state 18

    (80) para -> PARA . ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    ID              shift and go to state 37


state 19

    (21) bloque -> estatuto .

    FUNCION         reduce using rule 21 (bloque -> estatuto .)
    ID              reduce using rule 21 (bloque -> estatuto .)
    SI              reduce using rule 21 (bloque -> estatuto .)
    HAZ             reduce using rule 21 (bloque -> estatuto .)
    PARA            reduce using rule 21 (bloque -> estatuto .)
    IMPRIME         reduce using rule 21 (bloque -> estatuto .)
    RLLAVE          reduce using rule 21 (bloque -> estatuto .)


state 20

    (75) condicion -> SI . LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else

    LPAREN          shift and go to state 38


state 21

    (36) estatuto -> llamada . bloque
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    mientras                       shift and go to state 16
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    bloque                         shift and go to state 39
    empty                          shift and go to state 35
    escritura                      shift and go to state 32

state 22

    (32) estatuto -> condicion . bloque
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 19
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    bloque                         shift and go to state 40
    empty                          shift and go to state 35
    escritura                      shift and go to state 32

state 23

    (20) body -> empty .
    (22) bloque -> empty .

  ! reduce/reduce conflict for RLLAVE resolved using rule 20 (body -> empty .)
    RLLAVE          reduce using rule 20 (body -> empty .)
    FUNCION         reduce using rule 22 (bloque -> empty .)
    ID              reduce using rule 22 (bloque -> empty .)
    SI              reduce using rule 22 (bloque -> empty .)
    HAZ             reduce using rule 22 (bloque -> empty .)
    PARA            reduce using rule 22 (bloque -> empty .)
    IMPRIME         reduce using rule 22 (bloque -> empty .)

  ! RLLAVE          [ reduce using rule 22 (bloque -> empty .) ]


state 24

    (18) body -> funcion . body
    (18) body -> . funcion body
    (19) body -> . bloque body
    (20) body -> . empty
    (23) funcion -> . FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (17) empty -> .
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         shift and go to state 29
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! FUNCION         [ reduce using rule 17 (empty -> .) ]
  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    mientras                       shift and go to state 16
    bloque                         shift and go to state 17
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 23
    funcion                        shift and go to state 24
    body                           shift and go to state 41
    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    escritura                      shift and go to state 32

state 25

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body . RLLAVE

    RLLAVE          shift and go to state 42


state 26

    (34) estatuto -> para . bloque
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 19
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    bloque                         shift and go to state 43
    empty                          shift and go to state 35
    escritura                      shift and go to state 32

state 27

    (83) mientras -> HAZ . mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (84) mientras_haz_push -> .

    LLLAVE          reduce using rule 84 (mientras_haz_push -> .)

    mientras_haz_push              shift and go to state 44

state 28

    (37) asignacion -> ID . asignacion_push_id IGUAL asignacion_push_igual expresion
    (40) llamada -> ID . LPAREN llamadaparam RPAREN
    (38) asignacion_push_id -> .

    LPAREN          shift and go to state 45
    IGUAL           reduce using rule 38 (asignacion_push_id -> .)

    asignacion_push_id             shift and go to state 46

state 29

    (23) funcion -> FUNCION . funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (24) funcion_increase_func -> .

    ENTERO          reduce using rule 24 (funcion_increase_func -> .)
    DECIMAL         reduce using rule 24 (funcion_increase_func -> .)
    FRASE           reduce using rule 24 (funcion_increase_func -> .)
    ESVERDAD        reduce using rule 24 (funcion_increase_func -> .)

    funcion_increase_func          shift and go to state 47

state 30

    (85) escritura -> IMPRIME . escritura_escribe LPAREN esc RPAREN
    (86) escritura_escribe -> .

    LPAREN          reduce using rule 86 (escritura_escribe -> .)

    escritura_escribe              shift and go to state 48

state 31

    (31) estatuto -> asignacion . bloque
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 19
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    bloque                         shift and go to state 49
    empty                          shift and go to state 35
    escritura                      shift and go to state 32

state 32

    (35) estatuto -> escritura . bloque
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for HAZ resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! SI              [ reduce using rule 17 (empty -> .) ]
  ! HAZ             [ reduce using rule 17 (empty -> .) ]
  ! PARA            [ reduce using rule 17 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 17 (empty -> .) ]

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 19
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    bloque                         shift and go to state 50
    empty                          shift and go to state 35
    escritura                      shift and go to state 32

state 33

    (6) vars2 -> tipo ID . vars_push_id vars3 SEMICOL vars4
    (7) vars_push_id -> .

    COMMA           reduce using rule 7 (vars_push_id -> .)
    SEMICOL         reduce using rule 7 (vars_push_id -> .)

    vars_push_id                   shift and go to state 51

state 34

    (33) estatuto -> mientras bloque .

    FUNCION         reduce using rule 33 (estatuto -> mientras bloque .)
    ID              reduce using rule 33 (estatuto -> mientras bloque .)
    SI              reduce using rule 33 (estatuto -> mientras bloque .)
    HAZ             reduce using rule 33 (estatuto -> mientras bloque .)
    PARA            reduce using rule 33 (estatuto -> mientras bloque .)
    IMPRIME         reduce using rule 33 (estatuto -> mientras bloque .)
    RLLAVE          reduce using rule 33 (estatuto -> mientras bloque .)


state 35

    (22) bloque -> empty .

    FUNCION         reduce using rule 22 (bloque -> empty .)
    ID              reduce using rule 22 (bloque -> empty .)
    SI              reduce using rule 22 (bloque -> empty .)
    HAZ             reduce using rule 22 (bloque -> empty .)
    PARA            reduce using rule 22 (bloque -> empty .)
    IMPRIME         reduce using rule 22 (bloque -> empty .)
    RLLAVE          reduce using rule 22 (bloque -> empty .)


state 36

    (19) body -> bloque body .

    RLLAVE          reduce using rule 19 (body -> bloque body .)


state 37

    (80) para -> PARA ID . ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    ENRANGO         shift and go to state 52


state 38

    (75) condicion -> SI LPAREN . expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (45) expresion -> . exp expresions
    (46) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (55) exp -> . termino exps
    (61) termino -> . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LEE             shift and go to state 62
    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    expresion                      shift and go to state 61
    llamada                        shift and go to state 55
    termino                        shift and go to state 53
    exp                            shift and go to state 63
    factor                         shift and go to state 58
    valor                          shift and go to state 56

state 39

    (36) estatuto -> llamada bloque .

    FUNCION         reduce using rule 36 (estatuto -> llamada bloque .)
    ID              reduce using rule 36 (estatuto -> llamada bloque .)
    SI              reduce using rule 36 (estatuto -> llamada bloque .)
    HAZ             reduce using rule 36 (estatuto -> llamada bloque .)
    PARA            reduce using rule 36 (estatuto -> llamada bloque .)
    IMPRIME         reduce using rule 36 (estatuto -> llamada bloque .)
    RLLAVE          reduce using rule 36 (estatuto -> llamada bloque .)


state 40

    (32) estatuto -> condicion bloque .

    FUNCION         reduce using rule 32 (estatuto -> condicion bloque .)
    ID              reduce using rule 32 (estatuto -> condicion bloque .)
    SI              reduce using rule 32 (estatuto -> condicion bloque .)
    HAZ             reduce using rule 32 (estatuto -> condicion bloque .)
    PARA            reduce using rule 32 (estatuto -> condicion bloque .)
    IMPRIME         reduce using rule 32 (estatuto -> condicion bloque .)
    RLLAVE          reduce using rule 32 (estatuto -> condicion bloque .)


state 41

    (18) body -> funcion body .

    RLLAVE          reduce using rule 18 (body -> funcion body .)


state 42

    (1) programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE .

    $end            reduce using rule 1 (programa -> PROGRAMA ID LLLAVE programa_push_id vars programa_push_dict body RLLAVE .)


state 43

    (34) estatuto -> para bloque .

    FUNCION         reduce using rule 34 (estatuto -> para bloque .)
    ID              reduce using rule 34 (estatuto -> para bloque .)
    SI              reduce using rule 34 (estatuto -> para bloque .)
    HAZ             reduce using rule 34 (estatuto -> para bloque .)
    PARA            reduce using rule 34 (estatuto -> para bloque .)
    IMPRIME         reduce using rule 34 (estatuto -> para bloque .)
    RLLAVE          reduce using rule 34 (estatuto -> para bloque .)


state 44

    (83) mientras -> HAZ mientras_haz_push . LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN

    LLLAVE          shift and go to state 64


state 45

    (40) llamada -> ID LPAREN . llamadaparam RPAREN
    (41) llamadaparam -> . valor llamadaparams
    (42) llamadaparam -> . empty
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (17) empty -> .
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57
    RPAREN          reduce using rule 17 (empty -> .)

    llamada                        shift and go to state 55
    llamadaparam                   shift and go to state 65
    empty                          shift and go to state 67
    valor                          shift and go to state 66

state 46

    (37) asignacion -> ID asignacion_push_id . IGUAL asignacion_push_igual expresion

    IGUAL           shift and go to state 68


state 47

    (23) funcion -> FUNCION funcion_increase_func . tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (13) tipo -> . ENTERO
    (14) tipo -> . DECIMAL
    (15) tipo -> . FRASE
    (16) tipo -> . ESVERDAD

    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14

    tipo                           shift and go to state 69

state 48

    (85) escritura -> IMPRIME escritura_escribe . LPAREN esc RPAREN

    LPAREN          shift and go to state 70


state 49

    (31) estatuto -> asignacion bloque .

    FUNCION         reduce using rule 31 (estatuto -> asignacion bloque .)
    ID              reduce using rule 31 (estatuto -> asignacion bloque .)
    SI              reduce using rule 31 (estatuto -> asignacion bloque .)
    HAZ             reduce using rule 31 (estatuto -> asignacion bloque .)
    PARA            reduce using rule 31 (estatuto -> asignacion bloque .)
    IMPRIME         reduce using rule 31 (estatuto -> asignacion bloque .)
    RLLAVE          reduce using rule 31 (estatuto -> asignacion bloque .)


state 50

    (35) estatuto -> escritura bloque .

    FUNCION         reduce using rule 35 (estatuto -> escritura bloque .)
    ID              reduce using rule 35 (estatuto -> escritura bloque .)
    SI              reduce using rule 35 (estatuto -> escritura bloque .)
    HAZ             reduce using rule 35 (estatuto -> escritura bloque .)
    PARA            reduce using rule 35 (estatuto -> escritura bloque .)
    IMPRIME         reduce using rule 35 (estatuto -> escritura bloque .)
    RLLAVE          reduce using rule 35 (estatuto -> escritura bloque .)


state 51

    (6) vars2 -> tipo ID vars_push_id . vars3 SEMICOL vars4
    (8) vars3 -> . COMMA ID vars3_push_id vars3
    (9) vars3 -> . empty
    (17) empty -> .

    COMMA           shift and go to state 72
    SEMICOL         reduce using rule 17 (empty -> .)

    vars3                          shift and go to state 71
    empty                          shift and go to state 73

state 52

    (80) para -> PARA ID ENRANGO . LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE

    LPAREN          shift and go to state 74


state 53

    (55) exp -> termino . exps
    (56) exps -> . PLUS exps_push_plus termino exps
    (57) exps -> . MINUS exps_push_minus termino exps
    (58) exps -> . empty
    (17) empty -> .

    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    MAYOR           reduce using rule 17 (empty -> .)
    MENOR           reduce using rule 17 (empty -> .)
    COMPARA         reduce using rule 17 (empty -> .)
    LPAREN          reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    CTEINT          reduce using rule 17 (empty -> .)
    CTEDEC          reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    exps                           shift and go to state 75
    empty                          shift and go to state 78

state 54

    (72) valor -> CTEINT .

    TIMES           reduce using rule 72 (valor -> CTEINT .)
    DIVIDE          reduce using rule 72 (valor -> CTEINT .)
    PLUS            reduce using rule 72 (valor -> CTEINT .)
    MINUS           reduce using rule 72 (valor -> CTEINT .)
    MAYOR           reduce using rule 72 (valor -> CTEINT .)
    MENOR           reduce using rule 72 (valor -> CTEINT .)
    COMPARA         reduce using rule 72 (valor -> CTEINT .)
    LPAREN          reduce using rule 72 (valor -> CTEINT .)
    ID              reduce using rule 72 (valor -> CTEINT .)
    CTEINT          reduce using rule 72 (valor -> CTEINT .)
    CTEDEC          reduce using rule 72 (valor -> CTEINT .)
    RPAREN          reduce using rule 72 (valor -> CTEINT .)
    COMMA           reduce using rule 72 (valor -> CTEINT .)
    SI              reduce using rule 72 (valor -> CTEINT .)
    HAZ             reduce using rule 72 (valor -> CTEINT .)
    PARA            reduce using rule 72 (valor -> CTEINT .)
    IMPRIME         reduce using rule 72 (valor -> CTEINT .)
    FUNCION         reduce using rule 72 (valor -> CTEINT .)
    RLLAVE          reduce using rule 72 (valor -> CTEINT .)


state 55

    (74) valor -> llamada .

    TIMES           reduce using rule 74 (valor -> llamada .)
    DIVIDE          reduce using rule 74 (valor -> llamada .)
    PLUS            reduce using rule 74 (valor -> llamada .)
    MINUS           reduce using rule 74 (valor -> llamada .)
    MAYOR           reduce using rule 74 (valor -> llamada .)
    MENOR           reduce using rule 74 (valor -> llamada .)
    COMPARA         reduce using rule 74 (valor -> llamada .)
    LPAREN          reduce using rule 74 (valor -> llamada .)
    ID              reduce using rule 74 (valor -> llamada .)
    CTEINT          reduce using rule 74 (valor -> llamada .)
    CTEDEC          reduce using rule 74 (valor -> llamada .)
    RPAREN          reduce using rule 74 (valor -> llamada .)
    COMMA           reduce using rule 74 (valor -> llamada .)
    SI              reduce using rule 74 (valor -> llamada .)
    HAZ             reduce using rule 74 (valor -> llamada .)
    PARA            reduce using rule 74 (valor -> llamada .)
    IMPRIME         reduce using rule 74 (valor -> llamada .)
    FUNCION         reduce using rule 74 (valor -> llamada .)
    RLLAVE          reduce using rule 74 (valor -> llamada .)


state 56

    (68) factor -> valor .

    TIMES           reduce using rule 68 (factor -> valor .)
    DIVIDE          reduce using rule 68 (factor -> valor .)
    PLUS            reduce using rule 68 (factor -> valor .)
    MINUS           reduce using rule 68 (factor -> valor .)
    MAYOR           reduce using rule 68 (factor -> valor .)
    MENOR           reduce using rule 68 (factor -> valor .)
    COMPARA         reduce using rule 68 (factor -> valor .)
    LPAREN          reduce using rule 68 (factor -> valor .)
    ID              reduce using rule 68 (factor -> valor .)
    CTEINT          reduce using rule 68 (factor -> valor .)
    CTEDEC          reduce using rule 68 (factor -> valor .)
    RPAREN          reduce using rule 68 (factor -> valor .)
    COMMA           reduce using rule 68 (factor -> valor .)
    SI              reduce using rule 68 (factor -> valor .)
    HAZ             reduce using rule 68 (factor -> valor .)
    PARA            reduce using rule 68 (factor -> valor .)
    IMPRIME         reduce using rule 68 (factor -> valor .)
    FUNCION         reduce using rule 68 (factor -> valor .)
    RLLAVE          reduce using rule 68 (factor -> valor .)


state 57

    (73) valor -> CTEDEC .

    TIMES           reduce using rule 73 (valor -> CTEDEC .)
    DIVIDE          reduce using rule 73 (valor -> CTEDEC .)
    PLUS            reduce using rule 73 (valor -> CTEDEC .)
    MINUS           reduce using rule 73 (valor -> CTEDEC .)
    MAYOR           reduce using rule 73 (valor -> CTEDEC .)
    MENOR           reduce using rule 73 (valor -> CTEDEC .)
    COMPARA         reduce using rule 73 (valor -> CTEDEC .)
    LPAREN          reduce using rule 73 (valor -> CTEDEC .)
    ID              reduce using rule 73 (valor -> CTEDEC .)
    CTEINT          reduce using rule 73 (valor -> CTEDEC .)
    CTEDEC          reduce using rule 73 (valor -> CTEDEC .)
    RPAREN          reduce using rule 73 (valor -> CTEDEC .)
    COMMA           reduce using rule 73 (valor -> CTEDEC .)
    SI              reduce using rule 73 (valor -> CTEDEC .)
    HAZ             reduce using rule 73 (valor -> CTEDEC .)
    PARA            reduce using rule 73 (valor -> CTEDEC .)
    IMPRIME         reduce using rule 73 (valor -> CTEDEC .)
    FUNCION         reduce using rule 73 (valor -> CTEDEC .)
    RLLAVE          reduce using rule 73 (valor -> CTEDEC .)


state 58

    (61) termino -> factor . terminos
    (62) terminos -> . TIMES terminos_push_times factor terminos
    (63) terminos -> . DIVIDE terminos_push_divide factor terminos
    (64) terminos -> . empty
    (17) empty -> .

    TIMES           shift and go to state 81
    DIVIDE          shift and go to state 79
    PLUS            reduce using rule 17 (empty -> .)
    MINUS           reduce using rule 17 (empty -> .)
    MAYOR           reduce using rule 17 (empty -> .)
    MENOR           reduce using rule 17 (empty -> .)
    COMPARA         reduce using rule 17 (empty -> .)
    LPAREN          reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    CTEINT          reduce using rule 17 (empty -> .)
    CTEDEC          reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    terminos                       shift and go to state 80
    empty                          shift and go to state 82

state 59

    (67) factor -> LPAREN . factor_lparen expresion RPAREN factor_rparen
    (69) factor_lparen -> .

    LEE             reduce using rule 69 (factor_lparen -> .)
    LPAREN          reduce using rule 69 (factor_lparen -> .)
    ID              reduce using rule 69 (factor_lparen -> .)
    CTEINT          reduce using rule 69 (factor_lparen -> .)
    CTEDEC          reduce using rule 69 (factor_lparen -> .)

    factor_lparen                  shift and go to state 83

state 60

    (71) valor -> ID .
    (40) llamada -> ID . LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    TIMES           reduce using rule 71 (valor -> ID .)
    DIVIDE          reduce using rule 71 (valor -> ID .)
    PLUS            reduce using rule 71 (valor -> ID .)
    MINUS           reduce using rule 71 (valor -> ID .)
    MAYOR           reduce using rule 71 (valor -> ID .)
    MENOR           reduce using rule 71 (valor -> ID .)
    COMPARA         reduce using rule 71 (valor -> ID .)
    ID              reduce using rule 71 (valor -> ID .)
    CTEINT          reduce using rule 71 (valor -> ID .)
    CTEDEC          reduce using rule 71 (valor -> ID .)
    RPAREN          reduce using rule 71 (valor -> ID .)
    COMMA           reduce using rule 71 (valor -> ID .)
    SI              reduce using rule 71 (valor -> ID .)
    HAZ             reduce using rule 71 (valor -> ID .)
    PARA            reduce using rule 71 (valor -> ID .)
    IMPRIME         reduce using rule 71 (valor -> ID .)
    FUNCION         reduce using rule 71 (valor -> ID .)
    RLLAVE          reduce using rule 71 (valor -> ID .)
    LPAREN          shift and go to state 45

  ! LPAREN          [ reduce using rule 71 (valor -> ID .) ]


state 61

    (75) condicion -> SI LPAREN expresion . RPAREN condicion_if LLLAVE estatuto RLLAVE else

    RPAREN          shift and go to state 84


state 62

    (46) expresion -> LEE . LPAREN STRING RPAREN SEMICOL

    LPAREN          shift and go to state 85


state 63

    (45) expresion -> exp . expresions
    (47) expresions -> . MAYOR expresions_push_mayor exp
    (48) expresions -> . MENOR expresions_push_menor exp
    (49) expresions -> . COMPARA expresions_push_compara exp
    (50) expresions -> . exp
    (51) expresions -> . empty
    (55) exp -> . termino exps
    (17) empty -> .
    (61) termino -> . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

  ! shift/reduce conflict for ID resolved as shift
    MAYOR           shift and go to state 87
    MENOR           shift and go to state 90
    COMPARA         shift and go to state 89
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

  ! ID              [ reduce using rule 17 (empty -> .) ]

    expresions                     shift and go to state 86
    llamada                        shift and go to state 55
    termino                        shift and go to state 53
    exp                            shift and go to state 91
    factor                         shift and go to state 58
    empty                          shift and go to state 88
    valor                          shift and go to state 56

state 64

    (83) mientras -> HAZ mientras_haz_push LLLAVE . estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 92
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    escritura                      shift and go to state 32

state 65

    (40) llamada -> ID LPAREN llamadaparam . RPAREN

    RPAREN          shift and go to state 93


state 66

    (41) llamadaparam -> valor . llamadaparams
    (43) llamadaparams -> . COMMA llamadaparam
    (44) llamadaparams -> . empty
    (17) empty -> .

    COMMA           shift and go to state 94
    RPAREN          reduce using rule 17 (empty -> .)

    llamadaparams                  shift and go to state 95
    empty                          shift and go to state 96

state 67

    (42) llamadaparam -> empty .

    RPAREN          reduce using rule 42 (llamadaparam -> empty .)


state 68

    (37) asignacion -> ID asignacion_push_id IGUAL . asignacion_push_igual expresion
    (39) asignacion_push_igual -> .

    LEE             reduce using rule 39 (asignacion_push_igual -> .)
    LPAREN          reduce using rule 39 (asignacion_push_igual -> .)
    ID              reduce using rule 39 (asignacion_push_igual -> .)
    CTEINT          reduce using rule 39 (asignacion_push_igual -> .)
    CTEDEC          reduce using rule 39 (asignacion_push_igual -> .)

    asignacion_push_igual          shift and go to state 97

state 69

    (23) funcion -> FUNCION funcion_increase_func tipo . ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE

    ID              shift and go to state 98


state 70

    (85) escritura -> IMPRIME escritura_escribe LPAREN . esc RPAREN
    (87) esc -> . expresion escs
    (88) esc -> . STRING escs
    (45) expresion -> . exp expresions
    (46) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (55) exp -> . termino exps
    (61) termino -> . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    STRING          shift and go to state 100
    LEE             shift and go to state 62
    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    expresion                      shift and go to state 101
    valor                          shift and go to state 56
    llamada                        shift and go to state 55
    esc                            shift and go to state 99
    termino                        shift and go to state 53
    exp                            shift and go to state 63
    factor                         shift and go to state 58

state 71

    (6) vars2 -> tipo ID vars_push_id vars3 . SEMICOL vars4

    SEMICOL         shift and go to state 102


state 72

    (8) vars3 -> COMMA . ID vars3_push_id vars3

    ID              shift and go to state 103


state 73

    (9) vars3 -> empty .

    SEMICOL         reduce using rule 9 (vars3 -> empty .)


state 74

    (80) para -> PARA ID ENRANGO LPAREN . param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (81) param -> . ID
    (82) param -> . CTEINT

    ID              shift and go to state 106
    CTEINT          shift and go to state 104

    param                          shift and go to state 105

state 75

    (55) exp -> termino exps .

    RPAREN          reduce using rule 55 (exp -> termino exps .)
    COMMA           reduce using rule 55 (exp -> termino exps .)
    ID              reduce using rule 55 (exp -> termino exps .)
    SI              reduce using rule 55 (exp -> termino exps .)
    HAZ             reduce using rule 55 (exp -> termino exps .)
    PARA            reduce using rule 55 (exp -> termino exps .)
    IMPRIME         reduce using rule 55 (exp -> termino exps .)
    FUNCION         reduce using rule 55 (exp -> termino exps .)
    RLLAVE          reduce using rule 55 (exp -> termino exps .)
    MAYOR           reduce using rule 55 (exp -> termino exps .)
    MENOR           reduce using rule 55 (exp -> termino exps .)
    COMPARA         reduce using rule 55 (exp -> termino exps .)
    LPAREN          reduce using rule 55 (exp -> termino exps .)
    CTEINT          reduce using rule 55 (exp -> termino exps .)
    CTEDEC          reduce using rule 55 (exp -> termino exps .)


state 76

    (56) exps -> PLUS . exps_push_plus termino exps
    (59) exps_push_plus -> .

    LPAREN          reduce using rule 59 (exps_push_plus -> .)
    ID              reduce using rule 59 (exps_push_plus -> .)
    CTEINT          reduce using rule 59 (exps_push_plus -> .)
    CTEDEC          reduce using rule 59 (exps_push_plus -> .)

    exps_push_plus                 shift and go to state 107

state 77

    (57) exps -> MINUS . exps_push_minus termino exps
    (60) exps_push_minus -> .

    LPAREN          reduce using rule 60 (exps_push_minus -> .)
    ID              reduce using rule 60 (exps_push_minus -> .)
    CTEINT          reduce using rule 60 (exps_push_minus -> .)
    CTEDEC          reduce using rule 60 (exps_push_minus -> .)

    exps_push_minus                shift and go to state 108

state 78

    (58) exps -> empty .

    MAYOR           reduce using rule 58 (exps -> empty .)
    MENOR           reduce using rule 58 (exps -> empty .)
    COMPARA         reduce using rule 58 (exps -> empty .)
    LPAREN          reduce using rule 58 (exps -> empty .)
    ID              reduce using rule 58 (exps -> empty .)
    CTEINT          reduce using rule 58 (exps -> empty .)
    CTEDEC          reduce using rule 58 (exps -> empty .)
    RPAREN          reduce using rule 58 (exps -> empty .)
    COMMA           reduce using rule 58 (exps -> empty .)
    SI              reduce using rule 58 (exps -> empty .)
    HAZ             reduce using rule 58 (exps -> empty .)
    PARA            reduce using rule 58 (exps -> empty .)
    IMPRIME         reduce using rule 58 (exps -> empty .)
    FUNCION         reduce using rule 58 (exps -> empty .)
    RLLAVE          reduce using rule 58 (exps -> empty .)


state 79

    (63) terminos -> DIVIDE . terminos_push_divide factor terminos
    (66) terminos_push_divide -> .

    LPAREN          reduce using rule 66 (terminos_push_divide -> .)
    ID              reduce using rule 66 (terminos_push_divide -> .)
    CTEINT          reduce using rule 66 (terminos_push_divide -> .)
    CTEDEC          reduce using rule 66 (terminos_push_divide -> .)

    terminos_push_divide           shift and go to state 109

state 80

    (61) termino -> factor terminos .

    PLUS            reduce using rule 61 (termino -> factor terminos .)
    MINUS           reduce using rule 61 (termino -> factor terminos .)
    MAYOR           reduce using rule 61 (termino -> factor terminos .)
    MENOR           reduce using rule 61 (termino -> factor terminos .)
    COMPARA         reduce using rule 61 (termino -> factor terminos .)
    LPAREN          reduce using rule 61 (termino -> factor terminos .)
    ID              reduce using rule 61 (termino -> factor terminos .)
    CTEINT          reduce using rule 61 (termino -> factor terminos .)
    CTEDEC          reduce using rule 61 (termino -> factor terminos .)
    RPAREN          reduce using rule 61 (termino -> factor terminos .)
    COMMA           reduce using rule 61 (termino -> factor terminos .)
    SI              reduce using rule 61 (termino -> factor terminos .)
    HAZ             reduce using rule 61 (termino -> factor terminos .)
    PARA            reduce using rule 61 (termino -> factor terminos .)
    IMPRIME         reduce using rule 61 (termino -> factor terminos .)
    FUNCION         reduce using rule 61 (termino -> factor terminos .)
    RLLAVE          reduce using rule 61 (termino -> factor terminos .)


state 81

    (62) terminos -> TIMES . terminos_push_times factor terminos
    (65) terminos_push_times -> .

    LPAREN          reduce using rule 65 (terminos_push_times -> .)
    ID              reduce using rule 65 (terminos_push_times -> .)
    CTEINT          reduce using rule 65 (terminos_push_times -> .)
    CTEDEC          reduce using rule 65 (terminos_push_times -> .)

    terminos_push_times            shift and go to state 110

state 82

    (64) terminos -> empty .

    PLUS            reduce using rule 64 (terminos -> empty .)
    MINUS           reduce using rule 64 (terminos -> empty .)
    MAYOR           reduce using rule 64 (terminos -> empty .)
    MENOR           reduce using rule 64 (terminos -> empty .)
    COMPARA         reduce using rule 64 (terminos -> empty .)
    LPAREN          reduce using rule 64 (terminos -> empty .)
    ID              reduce using rule 64 (terminos -> empty .)
    CTEINT          reduce using rule 64 (terminos -> empty .)
    CTEDEC          reduce using rule 64 (terminos -> empty .)
    RPAREN          reduce using rule 64 (terminos -> empty .)
    COMMA           reduce using rule 64 (terminos -> empty .)
    SI              reduce using rule 64 (terminos -> empty .)
    HAZ             reduce using rule 64 (terminos -> empty .)
    PARA            reduce using rule 64 (terminos -> empty .)
    IMPRIME         reduce using rule 64 (terminos -> empty .)
    FUNCION         reduce using rule 64 (terminos -> empty .)
    RLLAVE          reduce using rule 64 (terminos -> empty .)


state 83

    (67) factor -> LPAREN factor_lparen . expresion RPAREN factor_rparen
    (45) expresion -> . exp expresions
    (46) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (55) exp -> . termino exps
    (61) termino -> . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LEE             shift and go to state 62
    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    expresion                      shift and go to state 111
    valor                          shift and go to state 56
    llamada                        shift and go to state 55
    termino                        shift and go to state 53
    exp                            shift and go to state 63
    factor                         shift and go to state 58

state 84

    (75) condicion -> SI LPAREN expresion RPAREN . condicion_if LLLAVE estatuto RLLAVE else
    (76) condicion_if -> .

    LLLAVE          reduce using rule 76 (condicion_if -> .)

    condicion_if                   shift and go to state 112

state 85

    (46) expresion -> LEE LPAREN . STRING RPAREN SEMICOL

    STRING          shift and go to state 113


state 86

    (45) expresion -> exp expresions .

    COMMA           reduce using rule 45 (expresion -> exp expresions .)
    RPAREN          reduce using rule 45 (expresion -> exp expresions .)
    ID              reduce using rule 45 (expresion -> exp expresions .)
    SI              reduce using rule 45 (expresion -> exp expresions .)
    HAZ             reduce using rule 45 (expresion -> exp expresions .)
    PARA            reduce using rule 45 (expresion -> exp expresions .)
    IMPRIME         reduce using rule 45 (expresion -> exp expresions .)
    FUNCION         reduce using rule 45 (expresion -> exp expresions .)
    RLLAVE          reduce using rule 45 (expresion -> exp expresions .)


state 87

    (47) expresions -> MAYOR . expresions_push_mayor exp
    (52) expresions_push_mayor -> .

    LPAREN          reduce using rule 52 (expresions_push_mayor -> .)
    ID              reduce using rule 52 (expresions_push_mayor -> .)
    CTEINT          reduce using rule 52 (expresions_push_mayor -> .)
    CTEDEC          reduce using rule 52 (expresions_push_mayor -> .)

    expresions_push_mayor          shift and go to state 114

state 88

    (51) expresions -> empty .

    RPAREN          reduce using rule 51 (expresions -> empty .)
    COMMA           reduce using rule 51 (expresions -> empty .)
    ID              reduce using rule 51 (expresions -> empty .)
    SI              reduce using rule 51 (expresions -> empty .)
    HAZ             reduce using rule 51 (expresions -> empty .)
    PARA            reduce using rule 51 (expresions -> empty .)
    IMPRIME         reduce using rule 51 (expresions -> empty .)
    FUNCION         reduce using rule 51 (expresions -> empty .)
    RLLAVE          reduce using rule 51 (expresions -> empty .)


state 89

    (49) expresions -> COMPARA . expresions_push_compara exp
    (54) expresions_push_compara -> .

    LPAREN          reduce using rule 54 (expresions_push_compara -> .)
    ID              reduce using rule 54 (expresions_push_compara -> .)
    CTEINT          reduce using rule 54 (expresions_push_compara -> .)
    CTEDEC          reduce using rule 54 (expresions_push_compara -> .)

    expresions_push_compara        shift and go to state 115

state 90

    (48) expresions -> MENOR . expresions_push_menor exp
    (53) expresions_push_menor -> .

    LPAREN          reduce using rule 53 (expresions_push_menor -> .)
    ID              reduce using rule 53 (expresions_push_menor -> .)
    CTEINT          reduce using rule 53 (expresions_push_menor -> .)
    CTEDEC          reduce using rule 53 (expresions_push_menor -> .)

    expresions_push_menor          shift and go to state 116

state 91

    (50) expresions -> exp .

    RPAREN          reduce using rule 50 (expresions -> exp .)
    COMMA           reduce using rule 50 (expresions -> exp .)
    ID              reduce using rule 50 (expresions -> exp .)
    SI              reduce using rule 50 (expresions -> exp .)
    HAZ             reduce using rule 50 (expresions -> exp .)
    PARA            reduce using rule 50 (expresions -> exp .)
    IMPRIME         reduce using rule 50 (expresions -> exp .)
    FUNCION         reduce using rule 50 (expresions -> exp .)
    RLLAVE          reduce using rule 50 (expresions -> exp .)


state 92

    (83) mientras -> HAZ mientras_haz_push LLLAVE estatuto . RLLAVE MIENTRAS LPAREN expresion RPAREN

    RLLAVE          shift and go to state 117


state 93

    (40) llamada -> ID LPAREN llamadaparam RPAREN .

    COMMA           reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    RPAREN          reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    ID              reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    SI              reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    HAZ             reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    PARA            reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    IMPRIME         reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    FUNCION         reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    RLLAVE          reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    TIMES           reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    DIVIDE          reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    PLUS            reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    MINUS           reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    MAYOR           reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    MENOR           reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    COMPARA         reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    LPAREN          reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    CTEINT          reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)
    CTEDEC          reduce using rule 40 (llamada -> ID LPAREN llamadaparam RPAREN .)


state 94

    (43) llamadaparams -> COMMA . llamadaparam
    (41) llamadaparam -> . valor llamadaparams
    (42) llamadaparam -> . empty
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (17) empty -> .
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57
    RPAREN          reduce using rule 17 (empty -> .)

    llamada                        shift and go to state 55
    llamadaparam                   shift and go to state 118
    empty                          shift and go to state 67
    valor                          shift and go to state 66

state 95

    (41) llamadaparam -> valor llamadaparams .

    RPAREN          reduce using rule 41 (llamadaparam -> valor llamadaparams .)


state 96

    (44) llamadaparams -> empty .

    RPAREN          reduce using rule 44 (llamadaparams -> empty .)


state 97

    (37) asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual . expresion
    (45) expresion -> . exp expresions
    (46) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (55) exp -> . termino exps
    (61) termino -> . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LEE             shift and go to state 62
    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    expresion                      shift and go to state 119
    valor                          shift and go to state 56
    llamada                        shift and go to state 55
    termino                        shift and go to state 53
    exp                            shift and go to state 63
    factor                         shift and go to state 58

state 98

    (23) funcion -> FUNCION funcion_increase_func tipo ID . funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE
    (25) funcion_push_id -> .

    LPAREN          reduce using rule 25 (funcion_push_id -> .)

    funcion_push_id                shift and go to state 120

state 99

    (85) escritura -> IMPRIME escritura_escribe LPAREN esc . RPAREN

    RPAREN          shift and go to state 121


state 100

    (88) esc -> STRING . escs
    (89) escs -> . COMMA esc
    (90) escs -> . empty
    (17) empty -> .

    COMMA           shift and go to state 123
    RPAREN          reduce using rule 17 (empty -> .)

    escs                           shift and go to state 122
    empty                          shift and go to state 124

state 101

    (87) esc -> expresion . escs
    (89) escs -> . COMMA esc
    (90) escs -> . empty
    (17) empty -> .

    COMMA           shift and go to state 123
    RPAREN          reduce using rule 17 (empty -> .)

    escs                           shift and go to state 125
    empty                          shift and go to state 124

state 102

    (6) vars2 -> tipo ID vars_push_id vars3 SEMICOL . vars4
    (11) vars4 -> . vars2
    (12) vars4 -> . empty
    (6) vars2 -> . tipo ID vars_push_id vars3 SEMICOL vars4
    (17) empty -> .
    (13) tipo -> . ENTERO
    (14) tipo -> . DECIMAL
    (15) tipo -> . FRASE
    (16) tipo -> . ESVERDAD

    FUNCION         reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)
    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14

    tipo                           shift and go to state 11
    vars2                          shift and go to state 126
    vars4                          shift and go to state 127
    empty                          shift and go to state 128

state 103

    (8) vars3 -> COMMA ID . vars3_push_id vars3
    (10) vars3_push_id -> .

    COMMA           reduce using rule 10 (vars3_push_id -> .)
    SEMICOL         reduce using rule 10 (vars3_push_id -> .)

    vars3_push_id                  shift and go to state 129

state 104

    (82) param -> CTEINT .

    COMMA           reduce using rule 82 (param -> CTEINT .)
    RPAREN          reduce using rule 82 (param -> CTEINT .)


state 105

    (80) para -> PARA ID ENRANGO LPAREN param . COMMA param RPAREN LLLAVE estatuto RLLAVE

    COMMA           shift and go to state 130


state 106

    (81) param -> ID .

    COMMA           reduce using rule 81 (param -> ID .)
    RPAREN          reduce using rule 81 (param -> ID .)


state 107

    (56) exps -> PLUS exps_push_plus . termino exps
    (61) termino -> . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    valor                          shift and go to state 56
    llamada                        shift and go to state 55
    termino                        shift and go to state 131
    factor                         shift and go to state 58

state 108

    (57) exps -> MINUS exps_push_minus . termino exps
    (61) termino -> . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    valor                          shift and go to state 56
    llamada                        shift and go to state 55
    termino                        shift and go to state 132
    factor                         shift and go to state 58

state 109

    (63) terminos -> DIVIDE terminos_push_divide . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    valor                          shift and go to state 56
    llamada                        shift and go to state 55
    factor                         shift and go to state 133

state 110

    (62) terminos -> TIMES terminos_push_times . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    valor                          shift and go to state 56
    llamada                        shift and go to state 55
    factor                         shift and go to state 134

state 111

    (67) factor -> LPAREN factor_lparen expresion . RPAREN factor_rparen

    RPAREN          shift and go to state 135


state 112

    (75) condicion -> SI LPAREN expresion RPAREN condicion_if . LLLAVE estatuto RLLAVE else

    LLLAVE          shift and go to state 136


state 113

    (46) expresion -> LEE LPAREN STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 137


state 114

    (47) expresions -> MAYOR expresions_push_mayor . exp
    (55) exp -> . termino exps
    (61) termino -> . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    llamada                        shift and go to state 55
    termino                        shift and go to state 53
    exp                            shift and go to state 138
    factor                         shift and go to state 58
    valor                          shift and go to state 56

state 115

    (49) expresions -> COMPARA expresions_push_compara . exp
    (55) exp -> . termino exps
    (61) termino -> . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    valor                          shift and go to state 56
    llamada                        shift and go to state 55
    termino                        shift and go to state 53
    exp                            shift and go to state 139
    factor                         shift and go to state 58

state 116

    (48) expresions -> MENOR expresions_push_menor . exp
    (55) exp -> . termino exps
    (61) termino -> . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    valor                          shift and go to state 56
    llamada                        shift and go to state 55
    termino                        shift and go to state 53
    exp                            shift and go to state 140
    factor                         shift and go to state 58

state 117

    (83) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE . MIENTRAS LPAREN expresion RPAREN

    MIENTRAS        shift and go to state 141


state 118

    (43) llamadaparams -> COMMA llamadaparam .

    RPAREN          reduce using rule 43 (llamadaparams -> COMMA llamadaparam .)


state 119

    (37) asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .

    ID              reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    SI              reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    HAZ             reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    PARA            reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    IMPRIME         reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    RLLAVE          reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)
    FUNCION         reduce using rule 37 (asignacion -> ID asignacion_push_id IGUAL asignacion_push_igual expresion .)


state 120

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id . LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE

    LPAREN          shift and go to state 142


state 121

    (85) escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .

    ID              reduce using rule 85 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    SI              reduce using rule 85 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    HAZ             reduce using rule 85 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    PARA            reduce using rule 85 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    IMPRIME         reduce using rule 85 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    RLLAVE          reduce using rule 85 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)
    FUNCION         reduce using rule 85 (escritura -> IMPRIME escritura_escribe LPAREN esc RPAREN .)


state 122

    (88) esc -> STRING escs .

    RPAREN          reduce using rule 88 (esc -> STRING escs .)


state 123

    (89) escs -> COMMA . esc
    (87) esc -> . expresion escs
    (88) esc -> . STRING escs
    (45) expresion -> . exp expresions
    (46) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (55) exp -> . termino exps
    (61) termino -> . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    STRING          shift and go to state 100
    LEE             shift and go to state 62
    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    expresion                      shift and go to state 101
    valor                          shift and go to state 56
    llamada                        shift and go to state 55
    esc                            shift and go to state 143
    termino                        shift and go to state 53
    exp                            shift and go to state 63
    factor                         shift and go to state 58

state 124

    (90) escs -> empty .

    RPAREN          reduce using rule 90 (escs -> empty .)


state 125

    (87) esc -> expresion escs .

    RPAREN          reduce using rule 87 (esc -> expresion escs .)


state 126

    (11) vars4 -> vars2 .

    FUNCION         reduce using rule 11 (vars4 -> vars2 .)
    ID              reduce using rule 11 (vars4 -> vars2 .)
    SI              reduce using rule 11 (vars4 -> vars2 .)
    HAZ             reduce using rule 11 (vars4 -> vars2 .)
    PARA            reduce using rule 11 (vars4 -> vars2 .)
    IMPRIME         reduce using rule 11 (vars4 -> vars2 .)
    RLLAVE          reduce using rule 11 (vars4 -> vars2 .)


state 127

    (6) vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .

    FUNCION         reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    ID              reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    SI              reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    HAZ             reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    PARA            reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    IMPRIME         reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)
    RLLAVE          reduce using rule 6 (vars2 -> tipo ID vars_push_id vars3 SEMICOL vars4 .)


state 128

    (12) vars4 -> empty .

    FUNCION         reduce using rule 12 (vars4 -> empty .)
    ID              reduce using rule 12 (vars4 -> empty .)
    SI              reduce using rule 12 (vars4 -> empty .)
    HAZ             reduce using rule 12 (vars4 -> empty .)
    PARA            reduce using rule 12 (vars4 -> empty .)
    IMPRIME         reduce using rule 12 (vars4 -> empty .)
    RLLAVE          reduce using rule 12 (vars4 -> empty .)


state 129

    (8) vars3 -> COMMA ID vars3_push_id . vars3
    (8) vars3 -> . COMMA ID vars3_push_id vars3
    (9) vars3 -> . empty
    (17) empty -> .

    COMMA           shift and go to state 72
    SEMICOL         reduce using rule 17 (empty -> .)

    vars3                          shift and go to state 144
    empty                          shift and go to state 73

state 130

    (80) para -> PARA ID ENRANGO LPAREN param COMMA . param RPAREN LLLAVE estatuto RLLAVE
    (81) param -> . ID
    (82) param -> . CTEINT

    ID              shift and go to state 106
    CTEINT          shift and go to state 104

    param                          shift and go to state 145

state 131

    (56) exps -> PLUS exps_push_plus termino . exps
    (56) exps -> . PLUS exps_push_plus termino exps
    (57) exps -> . MINUS exps_push_minus termino exps
    (58) exps -> . empty
    (17) empty -> .

    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    MAYOR           reduce using rule 17 (empty -> .)
    MENOR           reduce using rule 17 (empty -> .)
    COMPARA         reduce using rule 17 (empty -> .)
    LPAREN          reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    CTEINT          reduce using rule 17 (empty -> .)
    CTEDEC          reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    exps                           shift and go to state 146
    empty                          shift and go to state 78

state 132

    (57) exps -> MINUS exps_push_minus termino . exps
    (56) exps -> . PLUS exps_push_plus termino exps
    (57) exps -> . MINUS exps_push_minus termino exps
    (58) exps -> . empty
    (17) empty -> .

    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    MAYOR           reduce using rule 17 (empty -> .)
    MENOR           reduce using rule 17 (empty -> .)
    COMPARA         reduce using rule 17 (empty -> .)
    LPAREN          reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    CTEINT          reduce using rule 17 (empty -> .)
    CTEDEC          reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    exps                           shift and go to state 147
    empty                          shift and go to state 78

state 133

    (63) terminos -> DIVIDE terminos_push_divide factor . terminos
    (62) terminos -> . TIMES terminos_push_times factor terminos
    (63) terminos -> . DIVIDE terminos_push_divide factor terminos
    (64) terminos -> . empty
    (17) empty -> .

    TIMES           shift and go to state 81
    DIVIDE          shift and go to state 79
    PLUS            reduce using rule 17 (empty -> .)
    MINUS           reduce using rule 17 (empty -> .)
    MAYOR           reduce using rule 17 (empty -> .)
    MENOR           reduce using rule 17 (empty -> .)
    COMPARA         reduce using rule 17 (empty -> .)
    LPAREN          reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    CTEINT          reduce using rule 17 (empty -> .)
    CTEDEC          reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    terminos                       shift and go to state 148
    empty                          shift and go to state 82

state 134

    (62) terminos -> TIMES terminos_push_times factor . terminos
    (62) terminos -> . TIMES terminos_push_times factor terminos
    (63) terminos -> . DIVIDE terminos_push_divide factor terminos
    (64) terminos -> . empty
    (17) empty -> .

    TIMES           shift and go to state 81
    DIVIDE          shift and go to state 79
    PLUS            reduce using rule 17 (empty -> .)
    MINUS           reduce using rule 17 (empty -> .)
    MAYOR           reduce using rule 17 (empty -> .)
    MENOR           reduce using rule 17 (empty -> .)
    COMPARA         reduce using rule 17 (empty -> .)
    LPAREN          reduce using rule 17 (empty -> .)
    ID              reduce using rule 17 (empty -> .)
    CTEINT          reduce using rule 17 (empty -> .)
    CTEDEC          reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)
    COMMA           reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    terminos                       shift and go to state 149
    empty                          shift and go to state 82

state 135

    (67) factor -> LPAREN factor_lparen expresion RPAREN . factor_rparen
    (70) factor_rparen -> .

    TIMES           reduce using rule 70 (factor_rparen -> .)
    DIVIDE          reduce using rule 70 (factor_rparen -> .)
    PLUS            reduce using rule 70 (factor_rparen -> .)
    MINUS           reduce using rule 70 (factor_rparen -> .)
    MAYOR           reduce using rule 70 (factor_rparen -> .)
    MENOR           reduce using rule 70 (factor_rparen -> .)
    COMPARA         reduce using rule 70 (factor_rparen -> .)
    LPAREN          reduce using rule 70 (factor_rparen -> .)
    ID              reduce using rule 70 (factor_rparen -> .)
    CTEINT          reduce using rule 70 (factor_rparen -> .)
    CTEDEC          reduce using rule 70 (factor_rparen -> .)
    RPAREN          reduce using rule 70 (factor_rparen -> .)
    COMMA           reduce using rule 70 (factor_rparen -> .)
    SI              reduce using rule 70 (factor_rparen -> .)
    HAZ             reduce using rule 70 (factor_rparen -> .)
    PARA            reduce using rule 70 (factor_rparen -> .)
    IMPRIME         reduce using rule 70 (factor_rparen -> .)
    FUNCION         reduce using rule 70 (factor_rparen -> .)
    RLLAVE          reduce using rule 70 (factor_rparen -> .)

    factor_rparen                  shift and go to state 150

state 136

    (75) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE . estatuto RLLAVE else
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 151
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    escritura                      shift and go to state 32

state 137

    (46) expresion -> LEE LPAREN STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 152


state 138

    (47) expresions -> MAYOR expresions_push_mayor exp .

    RPAREN          reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    COMMA           reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    ID              reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    SI              reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    HAZ             reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    PARA            reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    IMPRIME         reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    FUNCION         reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)
    RLLAVE          reduce using rule 47 (expresions -> MAYOR expresions_push_mayor exp .)


state 139

    (49) expresions -> COMPARA expresions_push_compara exp .

    RPAREN          reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    COMMA           reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    ID              reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    SI              reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    HAZ             reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    PARA            reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    IMPRIME         reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    FUNCION         reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)
    RLLAVE          reduce using rule 49 (expresions -> COMPARA expresions_push_compara exp .)


state 140

    (48) expresions -> MENOR expresions_push_menor exp .

    RPAREN          reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    COMMA           reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    ID              reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    SI              reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    HAZ             reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    PARA            reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    IMPRIME         reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    FUNCION         reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)
    RLLAVE          reduce using rule 48 (expresions -> MENOR expresions_push_menor exp .)


state 141

    (83) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS . LPAREN expresion RPAREN

    LPAREN          shift and go to state 153


state 142

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN . funparam RPAREN LLLAVE vars bloque RLLAVE
    (26) funparam -> . tipo ID funparam_push_id funparams
    (27) funparam -> . empty
    (13) tipo -> . ENTERO
    (14) tipo -> . DECIMAL
    (15) tipo -> . FRASE
    (16) tipo -> . ESVERDAD
    (17) empty -> .

    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14
    RPAREN          reduce using rule 17 (empty -> .)

    tipo                           shift and go to state 154
    funparam                       shift and go to state 155
    empty                          shift and go to state 156

state 143

    (89) escs -> COMMA esc .

    RPAREN          reduce using rule 89 (escs -> COMMA esc .)


state 144

    (8) vars3 -> COMMA ID vars3_push_id vars3 .

    SEMICOL         reduce using rule 8 (vars3 -> COMMA ID vars3_push_id vars3 .)


state 145

    (80) para -> PARA ID ENRANGO LPAREN param COMMA param . RPAREN LLLAVE estatuto RLLAVE

    RPAREN          shift and go to state 157


state 146

    (56) exps -> PLUS exps_push_plus termino exps .

    MAYOR           reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    MENOR           reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    COMPARA         reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    LPAREN          reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    ID              reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    CTEINT          reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    CTEDEC          reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    RPAREN          reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    COMMA           reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    SI              reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    HAZ             reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    PARA            reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    IMPRIME         reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    FUNCION         reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)
    RLLAVE          reduce using rule 56 (exps -> PLUS exps_push_plus termino exps .)


state 147

    (57) exps -> MINUS exps_push_minus termino exps .

    MAYOR           reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    MENOR           reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    COMPARA         reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    LPAREN          reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    ID              reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    CTEINT          reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    CTEDEC          reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    RPAREN          reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    COMMA           reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    SI              reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    HAZ             reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    PARA            reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    IMPRIME         reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    FUNCION         reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)
    RLLAVE          reduce using rule 57 (exps -> MINUS exps_push_minus termino exps .)


state 148

    (63) terminos -> DIVIDE terminos_push_divide factor terminos .

    PLUS            reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MINUS           reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MAYOR           reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    MENOR           reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    COMPARA         reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    LPAREN          reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    ID              reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    CTEINT          reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    CTEDEC          reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    RPAREN          reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    COMMA           reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    SI              reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    HAZ             reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    PARA            reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    IMPRIME         reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    FUNCION         reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)
    RLLAVE          reduce using rule 63 (terminos -> DIVIDE terminos_push_divide factor terminos .)


state 149

    (62) terminos -> TIMES terminos_push_times factor terminos .

    PLUS            reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    MINUS           reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    MAYOR           reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    MENOR           reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    COMPARA         reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    LPAREN          reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    ID              reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    CTEINT          reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    CTEDEC          reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    RPAREN          reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    COMMA           reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    SI              reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    HAZ             reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    PARA            reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    IMPRIME         reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    FUNCION         reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)
    RLLAVE          reduce using rule 62 (terminos -> TIMES terminos_push_times factor terminos .)


state 150

    (67) factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .

    TIMES           reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    DIVIDE          reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    PLUS            reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MINUS           reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MAYOR           reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    MENOR           reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    COMPARA         reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    LPAREN          reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    ID              reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    CTEINT          reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    CTEDEC          reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    RPAREN          reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    COMMA           reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    SI              reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    HAZ             reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    PARA            reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    IMPRIME         reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    FUNCION         reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)
    RLLAVE          reduce using rule 67 (factor -> LPAREN factor_lparen expresion RPAREN factor_rparen .)


state 151

    (75) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto . RLLAVE else

    RLLAVE          shift and go to state 158


state 152

    (46) expresion -> LEE LPAREN STRING RPAREN SEMICOL .

    COMMA           reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    RPAREN          reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    ID              reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    SI              reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    HAZ             reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    PARA            reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    IMPRIME         reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    FUNCION         reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)
    RLLAVE          reduce using rule 46 (expresion -> LEE LPAREN STRING RPAREN SEMICOL .)


state 153

    (83) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN . expresion RPAREN
    (45) expresion -> . exp expresions
    (46) expresion -> . LEE LPAREN STRING RPAREN SEMICOL
    (55) exp -> . termino exps
    (61) termino -> . factor terminos
    (67) factor -> . LPAREN factor_lparen expresion RPAREN factor_rparen
    (68) factor -> . valor
    (71) valor -> . ID
    (72) valor -> . CTEINT
    (73) valor -> . CTEDEC
    (74) valor -> . llamada
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    LEE             shift and go to state 62
    LPAREN          shift and go to state 59
    ID              shift and go to state 60
    CTEINT          shift and go to state 54
    CTEDEC          shift and go to state 57

    expresion                      shift and go to state 159
    valor                          shift and go to state 56
    llamada                        shift and go to state 55
    exp                            shift and go to state 63
    factor                         shift and go to state 58
    termino                        shift and go to state 53

state 154

    (26) funparam -> tipo . ID funparam_push_id funparams

    ID              shift and go to state 160


state 155

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam . RPAREN LLLAVE vars bloque RLLAVE

    RPAREN          shift and go to state 161


state 156

    (27) funparam -> empty .

    RPAREN          reduce using rule 27 (funparam -> empty .)


state 157

    (80) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN . LLLAVE estatuto RLLAVE

    LLLAVE          shift and go to state 162


state 158

    (75) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE . else
    (77) else -> . SINO else_2 LLLAVE estatuto RLLAVE
    (78) else -> . empty
    (17) empty -> .

    SINO            shift and go to state 164
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    FUNCION         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    else                           shift and go to state 163
    empty                          shift and go to state 165

state 159

    (83) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion . RPAREN

    RPAREN          shift and go to state 166


state 160

    (26) funparam -> tipo ID . funparam_push_id funparams
    (28) funparam_push_id -> .

    COMMA           reduce using rule 28 (funparam_push_id -> .)
    RPAREN          reduce using rule 28 (funparam_push_id -> .)

    funparam_push_id               shift and go to state 167

state 161

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN . LLLAVE vars bloque RLLAVE

    LLLAVE          shift and go to state 168


state 162

    (80) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE . estatuto RLLAVE
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 169
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    escritura                      shift and go to state 32

state 163

    (75) condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .

    ID              reduce using rule 75 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    SI              reduce using rule 75 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    HAZ             reduce using rule 75 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    PARA            reduce using rule 75 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    IMPRIME         reduce using rule 75 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    FUNCION         reduce using rule 75 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)
    RLLAVE          reduce using rule 75 (condicion -> SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else .)


state 164

    (77) else -> SINO . else_2 LLLAVE estatuto RLLAVE
    (79) else_2 -> .

    LLLAVE          reduce using rule 79 (else_2 -> .)

    else_2                         shift and go to state 170

state 165

    (78) else -> empty .

    ID              reduce using rule 78 (else -> empty .)
    SI              reduce using rule 78 (else -> empty .)
    HAZ             reduce using rule 78 (else -> empty .)
    PARA            reduce using rule 78 (else -> empty .)
    IMPRIME         reduce using rule 78 (else -> empty .)
    FUNCION         reduce using rule 78 (else -> empty .)
    RLLAVE          reduce using rule 78 (else -> empty .)


state 166

    (83) mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .

    ID              reduce using rule 83 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    SI              reduce using rule 83 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    HAZ             reduce using rule 83 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    PARA            reduce using rule 83 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    IMPRIME         reduce using rule 83 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    FUNCION         reduce using rule 83 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)
    RLLAVE          reduce using rule 83 (mientras -> HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN .)


state 167

    (26) funparam -> tipo ID funparam_push_id . funparams
    (29) funparams -> . COMMA funparam
    (30) funparams -> . empty
    (17) empty -> .

    COMMA           shift and go to state 171
    RPAREN          reduce using rule 17 (empty -> .)

    funparams                      shift and go to state 172
    empty                          shift and go to state 173

state 168

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE . vars bloque RLLAVE
    (4) vars -> . VAR vars2
    (5) vars -> . empty
    (17) empty -> .

    VAR             shift and go to state 7
    ID              reduce using rule 17 (empty -> .)
    SI              reduce using rule 17 (empty -> .)
    HAZ             reduce using rule 17 (empty -> .)
    PARA            reduce using rule 17 (empty -> .)
    IMPRIME         reduce using rule 17 (empty -> .)
    RLLAVE          reduce using rule 17 (empty -> .)

    vars                           shift and go to state 174
    empty                          shift and go to state 8

state 169

    (80) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto . RLLAVE

    RLLAVE          shift and go to state 175


state 170

    (77) else -> SINO else_2 . LLLAVE estatuto RLLAVE

    LLLAVE          shift and go to state 176


state 171

    (29) funparams -> COMMA . funparam
    (26) funparam -> . tipo ID funparam_push_id funparams
    (27) funparam -> . empty
    (13) tipo -> . ENTERO
    (14) tipo -> . DECIMAL
    (15) tipo -> . FRASE
    (16) tipo -> . ESVERDAD
    (17) empty -> .

    ENTERO          shift and go to state 15
    DECIMAL         shift and go to state 12
    FRASE           shift and go to state 10
    ESVERDAD        shift and go to state 14
    RPAREN          reduce using rule 17 (empty -> .)

    funparam                       shift and go to state 177
    empty                          shift and go to state 156
    tipo                           shift and go to state 154

state 172

    (26) funparam -> tipo ID funparam_push_id funparams .

    RPAREN          reduce using rule 26 (funparam -> tipo ID funparam_push_id funparams .)


state 173

    (30) funparams -> empty .

    RPAREN          reduce using rule 30 (funparams -> empty .)


state 174

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars . bloque RLLAVE
    (21) bloque -> . estatuto
    (22) bloque -> . empty
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (17) empty -> .
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    RLLAVE          reduce using rule 17 (empty -> .)
    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

    mientras                       shift and go to state 16
    bloque                         shift and go to state 178
    estatuto                       shift and go to state 19
    llamada                        shift and go to state 21
    condicion                      shift and go to state 22
    empty                          shift and go to state 35
    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    escritura                      shift and go to state 32

state 175

    (80) para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .

    ID              reduce using rule 80 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    SI              reduce using rule 80 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    HAZ             reduce using rule 80 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    PARA            reduce using rule 80 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    IMPRIME         reduce using rule 80 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    RLLAVE          reduce using rule 80 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)
    FUNCION         reduce using rule 80 (para -> PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE .)


state 176

    (77) else -> SINO else_2 LLLAVE . estatuto RLLAVE
    (31) estatuto -> . asignacion bloque
    (32) estatuto -> . condicion bloque
    (33) estatuto -> . mientras bloque
    (34) estatuto -> . para bloque
    (35) estatuto -> . escritura bloque
    (36) estatuto -> . llamada bloque
    (37) asignacion -> . ID asignacion_push_id IGUAL asignacion_push_igual expresion
    (75) condicion -> . SI LPAREN expresion RPAREN condicion_if LLLAVE estatuto RLLAVE else
    (83) mientras -> . HAZ mientras_haz_push LLLAVE estatuto RLLAVE MIENTRAS LPAREN expresion RPAREN
    (80) para -> . PARA ID ENRANGO LPAREN param COMMA param RPAREN LLLAVE estatuto RLLAVE
    (85) escritura -> . IMPRIME escritura_escribe LPAREN esc RPAREN
    (40) llamada -> . ID LPAREN llamadaparam RPAREN

    ID              shift and go to state 28
    SI              shift and go to state 20
    HAZ             shift and go to state 27
    PARA            shift and go to state 18
    IMPRIME         shift and go to state 30

    para                           shift and go to state 26
    asignacion                     shift and go to state 31
    llamada                        shift and go to state 21
    estatuto                       shift and go to state 179
    mientras                       shift and go to state 16
    condicion                      shift and go to state 22
    escritura                      shift and go to state 32

state 177

    (29) funparams -> COMMA funparam .

    RPAREN          reduce using rule 29 (funparams -> COMMA funparam .)


state 178

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque . RLLAVE

    RLLAVE          shift and go to state 180


state 179

    (77) else -> SINO else_2 LLLAVE estatuto . RLLAVE

    RLLAVE          shift and go to state 181


state 180

    (23) funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .

    FUNCION         reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    ID              reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    SI              reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    HAZ             reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    PARA            reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    IMPRIME         reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)
    RLLAVE          reduce using rule 23 (funcion -> FUNCION funcion_increase_func tipo ID funcion_push_id LPAREN funparam RPAREN LLLAVE vars bloque RLLAVE .)


state 181

    (77) else -> SINO else_2 LLLAVE estatuto RLLAVE .

    ID              reduce using rule 77 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    SI              reduce using rule 77 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    HAZ             reduce using rule 77 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    PARA            reduce using rule 77 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    IMPRIME         reduce using rule 77 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    FUNCION         reduce using rule 77 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)
    RLLAVE          reduce using rule 77 (else -> SINO else_2 LLLAVE estatuto RLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCION in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for SI in state 9 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 9 resolved as shift
WARNING: shift/reduce conflict for PARA in state 9 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SI in state 16 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 16 resolved as shift
WARNING: shift/reduce conflict for PARA in state 16 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 16 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 17 resolved as shift
WARNING: shift/reduce conflict for ID in state 17 resolved as shift
WARNING: shift/reduce conflict for SI in state 17 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 17 resolved as shift
WARNING: shift/reduce conflict for PARA in state 17 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 17 resolved as shift
WARNING: shift/reduce conflict for ID in state 21 resolved as shift
WARNING: shift/reduce conflict for SI in state 21 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 21 resolved as shift
WARNING: shift/reduce conflict for PARA in state 21 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 21 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for SI in state 22 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 22 resolved as shift
WARNING: shift/reduce conflict for PARA in state 22 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 22 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 24 resolved as shift
WARNING: shift/reduce conflict for ID in state 24 resolved as shift
WARNING: shift/reduce conflict for SI in state 24 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 24 resolved as shift
WARNING: shift/reduce conflict for PARA in state 24 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 24 resolved as shift
WARNING: shift/reduce conflict for ID in state 26 resolved as shift
WARNING: shift/reduce conflict for SI in state 26 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 26 resolved as shift
WARNING: shift/reduce conflict for PARA in state 26 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 26 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for SI in state 31 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 31 resolved as shift
WARNING: shift/reduce conflict for PARA in state 31 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for SI in state 32 resolved as shift
WARNING: shift/reduce conflict for HAZ in state 32 resolved as shift
WARNING: shift/reduce conflict for PARA in state 32 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 32 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 60 resolved as shift
WARNING: shift/reduce conflict for ID in state 63 resolved as shift
WARNING: reduce/reduce conflict in state 23 resolved using rule (body -> empty)
WARNING: rejected rule (bloque -> empty) in state 23
